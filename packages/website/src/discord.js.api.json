{
	"metadata": {
		"toolPackage": "@microsoft/api-extractor",
		"toolVersion": "7.25.2",
		"schemaVersion": 1006,
		"oldestForwardsCompatibleVersion": 1001,
		"tsdocConfig": {
			"$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
			"noStandardTags": true,
			"tagDefinitions": [
				{
					"tagName": "@alpha",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@beta",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@defaultValue",
					"syntaxKind": "block"
				},
				{
					"tagName": "@decorator",
					"syntaxKind": "block",
					"allowMultiple": true
				},
				{
					"tagName": "@deprecated",
					"syntaxKind": "block"
				},
				{
					"tagName": "@eventProperty",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@example",
					"syntaxKind": "block",
					"allowMultiple": true
				},
				{
					"tagName": "@experimental",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@inheritDoc",
					"syntaxKind": "inline"
				},
				{
					"tagName": "@internal",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@label",
					"syntaxKind": "inline"
				},
				{
					"tagName": "@link",
					"syntaxKind": "inline",
					"allowMultiple": true
				},
				{
					"tagName": "@override",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@packageDocumentation",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@param",
					"syntaxKind": "block",
					"allowMultiple": true
				},
				{
					"tagName": "@privateRemarks",
					"syntaxKind": "block"
				},
				{
					"tagName": "@public",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@readonly",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@remarks",
					"syntaxKind": "block"
				},
				{
					"tagName": "@returns",
					"syntaxKind": "block"
				},
				{
					"tagName": "@sealed",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@see",
					"syntaxKind": "block"
				},
				{
					"tagName": "@throws",
					"syntaxKind": "block",
					"allowMultiple": true
				},
				{
					"tagName": "@typeParam",
					"syntaxKind": "block",
					"allowMultiple": true
				},
				{
					"tagName": "@virtual",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@betaDocumentation",
					"syntaxKind": "modifier"
				},
				{
					"tagName": "@internalRemarks",
					"syntaxKind": "block"
				},
				{
					"tagName": "@preapproved",
					"syntaxKind": "modifier"
				}
			],
			"supportForTags": {
				"@alpha": true,
				"@beta": true,
				"@defaultValue": true,
				"@decorator": true,
				"@deprecated": true,
				"@eventProperty": true,
				"@example": true,
				"@experimental": true,
				"@inheritDoc": true,
				"@internal": true,
				"@label": true,
				"@link": true,
				"@override": true,
				"@packageDocumentation": true,
				"@param": true,
				"@privateRemarks": true,
				"@public": true,
				"@readonly": true,
				"@remarks": true,
				"@returns": true,
				"@sealed": true,
				"@see": true,
				"@throws": true,
				"@typeParam": true,
				"@virtual": true,
				"@betaDocumentation": true,
				"@internalRemarks": true,
				"@preapproved": true
			},
			"reportUnsupportedHtmlElements": false
		}
	},
	"kind": "Package",
	"canonicalReference": "discord.js!",
	"docComment": "",
	"name": "discord.js",
	"members": [
		{
			"kind": "EntryPoint",
			"canonicalReference": "discord.js!",
			"name": "",
			"members": [
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ActionRow:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ActionRow<T extends "
						},
						{
							"kind": "Reference",
							"text": "MessageActionRowComponent",
							"canonicalReference": "discord.js!MessageActionRowComponent:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ModalActionRowComponent",
							"canonicalReference": "discord.js!ModalActionRowComponent:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "Component",
							"canonicalReference": "discord.js!Component:class"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "APIActionRowComponent",
							"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APIMessageActionRowComponent",
							"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "APIModalActionRowComponent",
							"canonicalReference": "discord-api-types!APIModalActionRowComponent:type"
						},
						{
							"kind": "Content",
							"text": ">\n> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "ActionRow",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ActionRow#components:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly components: "
								},
								{
									"kind": "Content",
									"text": "T[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "components",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ActionRow#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ReturnType",
									"canonicalReference": "!ReturnType:type"
								},
								{
									"kind": "Content",
									"text": "<T['toJSON']>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						}
					],
					"extendsTokenRange": {
						"startIndex": 5,
						"endIndex": 12
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ActionRowBuilder:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ActionRowBuilder<T extends "
						},
						{
							"kind": "Reference",
							"text": "AnyComponentBuilder",
							"canonicalReference": "@discordjs/builders!~AnyComponentBuilder:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "AnyComponentBuilder",
							"canonicalReference": "@discordjs/builders!~AnyComponentBuilder:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "BuilderActionRow",
							"canonicalReference": "@discordjs/builders!~ActionRowBuilder:class"
						},
						{
							"kind": "Content",
							"text": "<T> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "ActionRowBuilder",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!ActionRowBuilder:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `ActionRowBuilder` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "constructor(\n    data?: "
								},
								{
									"kind": "Reference",
									"text": "Partial",
									"canonicalReference": "!Partial:type"
								},
								{
									"kind": "Content",
									"text": "<\n      | "
								},
								{
									"kind": "Reference",
									"text": "ActionRowData",
									"canonicalReference": "discord.js!ActionRowData:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ActionRowComponentData",
									"canonicalReference": "discord.js!ActionRowComponentData:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponentTypes",
									"canonicalReference": "discord-api-types!APIActionRowComponentTypes:type"
								},
								{
									"kind": "Content",
									"text": ">>\n      | "
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageActionRowComponent",
									"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIModalActionRowComponent",
									"canonicalReference": "discord-api-types!APIModalActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">\n    >"
								},
								{
									"kind": "Content",
									"text": ",\n  );"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 17
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ActionRowBuilder.from:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static from(\n    other:\n      "
								},
								{
									"kind": "Content",
									"text": "| "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageActionRowComponent",
									"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIModalActionRowComponent",
									"canonicalReference": "discord-api-types!APIModalActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">>\n      | "
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageActionRowComponent",
									"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIModalActionRowComponent",
									"canonicalReference": "discord-api-types!APIModalActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "ActionRowBuilder",
									"canonicalReference": "discord.js!ActionRowBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 17,
								"endIndex": 18
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 16
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "from"
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ActionRowComponent:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ActionRowComponent = "
						},
						{
							"kind": "Reference",
							"text": "MessageActionRowComponent",
							"canonicalReference": "discord.js!MessageActionRowComponent:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ModalActionRowComponent",
							"canonicalReference": "discord.js!ModalActionRowComponent:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ActionRowComponent",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ActionRowComponentData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ActionRowComponentData = "
						},
						{
							"kind": "Reference",
							"text": "MessageActionRowComponentData",
							"canonicalReference": "discord.js!MessageActionRowComponentData:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ModalActionRowComponentData",
							"canonicalReference": "discord.js!ModalActionRowComponentData:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ActionRowComponentData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ActionRowComponentOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ActionRowComponentOptions = "
						},
						{
							"kind": "Reference",
							"text": "ButtonComponentData",
							"canonicalReference": "discord.js!ButtonComponentData:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "SelectMenuComponentData",
							"canonicalReference": "discord.js!SelectMenuComponentData:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ActionRowComponentOptions",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ActionRowData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ActionRowData<T extends "
						},
						{
							"kind": "Reference",
							"text": "JSONEncodable",
							"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APIActionRowComponentTypes",
							"canonicalReference": "discord-api-types!APIActionRowComponentTypes:type"
						},
						{
							"kind": "Content",
							"text": "> | "
						},
						{
							"kind": "Reference",
							"text": "ActionRowComponentData",
							"canonicalReference": "discord.js!ActionRowComponentData:type"
						},
						{
							"kind": "Content",
							"text": ">\n  extends "
						},
						{
							"kind": "Reference",
							"text": "BaseComponentData",
							"canonicalReference": "discord.js!BaseComponentData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "ActionRowData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ActionRowData#components:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "components: "
								},
								{
									"kind": "Content",
									"text": "T[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "components",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 7,
							"endIndex": 8
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ActionRowModalData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ActionRowModalData "
						}
					],
					"releaseTag": "Public",
					"name": "ActionRowModalData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ActionRowModalData#components:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "components: "
								},
								{
									"kind": "Reference",
									"text": "ModalData",
									"canonicalReference": "discord.js!ModalData:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "components",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ActionRowModalData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ComponentType.ActionRow",
									"canonicalReference": "discord-api-types!ComponentType.ActionRow:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ActivitiesOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ActivitiesOptions = "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "ActivityOptions",
							"canonicalReference": "discord.js!ActivityOptions:interface"
						},
						{
							"kind": "Content",
							"text": ", 'shardId'>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ActivitiesOptions",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Activity:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Activity "
						}
					],
					"releaseTag": "Public",
					"name": "Activity",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#applicationId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public applicationId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "applicationId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#assets:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public assets: "
								},
								{
									"kind": "Reference",
									"text": "RichPresenceAssets",
									"canonicalReference": "discord.js!RichPresenceAssets:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "assets",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#buttons:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public buttons: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "buttons",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createdTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#details:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public details: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "details",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#emoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public emoji: "
								},
								{
									"kind": "Reference",
									"text": "Emoji",
									"canonicalReference": "discord.js!Emoji:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Activity#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(activity: "
								},
								{
									"kind": "Reference",
									"text": "Activity",
									"canonicalReference": "discord.js!Activity:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "activity",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public flags: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ActivityFlagsBitField",
									"canonicalReference": "discord.js!ActivityFlagsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#party:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public party: "
								},
								{
									"kind": "Content",
									"text": "{\n    id: string | null;\n    size: [number, number];\n  } | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "party",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#state:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public state: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "state",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#timestamps:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public timestamps: "
								},
								{
									"kind": "Content",
									"text": "{\n    start: "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null;\n    end: "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null;\n  } | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "timestamps",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Activity#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "ActivityType",
									"canonicalReference": "discord-api-types!ActivityType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Activity#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public url: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ActivityFlagsBitField:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ActivityFlagsBitField extends "
						},
						{
							"kind": "Reference",
							"text": "BitField",
							"canonicalReference": "discord.js!BitField:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "ActivityFlagsString",
							"canonicalReference": "discord.js!ActivityFlagsString:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "ActivityFlagsBitField",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ActivityFlagsBitField.Flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Flags: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "ActivityFlags",
									"canonicalReference": "discord-api-types!ActivityFlags:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ActivityFlagsBitField.resolve:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolve(bit?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ActivityFlagsString",
									"canonicalReference": "discord.js!ActivityFlagsString:type"
								},
								{
									"kind": "Content",
									"text": ", number>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "resolve"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ActivityFlagsString:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ActivityFlagsString = "
						},
						{
							"kind": "Content",
							"text": "keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "ActivityFlags",
							"canonicalReference": "discord-api-types!ActivityFlags:enum"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ActivityFlagsString",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ActivityOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ActivityOptions "
						}
					],
					"releaseTag": "Public",
					"name": "ActivityOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ActivityOptions#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ActivityOptions#shardId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shardId?: "
								},
								{
									"kind": "Content",
									"text": "number | readonly number[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "shardId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ActivityOptions#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ActivityType",
									"canonicalReference": "discord-api-types!ActivityType:enum"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ActivityType.Custom",
									"canonicalReference": "discord-api-types!ActivityType.Custom:member"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ActivityOptions#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "url?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!AddGuildMemberOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface AddGuildMemberOptions "
						}
					],
					"releaseTag": "Public",
					"name": "AddGuildMemberOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AddGuildMemberOptions#accessToken:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "accessToken: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "accessToken",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AddGuildMemberOptions#deaf:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deaf?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "deaf",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AddGuildMemberOptions#fetchWhenExisting:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "fetchWhenExisting?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "fetchWhenExisting",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AddGuildMemberOptions#force:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "force",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AddGuildMemberOptions#mute:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "mute?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "mute",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AddGuildMemberOptions#nick:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "nick?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "nick",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AddGuildMemberOptions#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "roles?: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!AllowedPartial:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type AllowedPartial = "
						},
						{
							"kind": "Reference",
							"text": "User",
							"canonicalReference": "discord.js!User:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Channel",
							"canonicalReference": "discord.js!Channel:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "GuildMember",
							"canonicalReference": "discord.js!GuildMember:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "MessageReaction",
							"canonicalReference": "discord.js!MessageReaction:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ThreadMember",
							"canonicalReference": "discord.js!ThreadMember:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "AllowedPartial",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 12
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!AllowedThreadTypeForNewsChannel:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type AllowedThreadTypeForNewsChannel = "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildNewsThread",
							"canonicalReference": "discord-api-types!ChannelType.GuildNewsThread:member"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "AllowedThreadTypeForNewsChannel",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!AllowedThreadTypeForTextChannel:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type AllowedThreadTypeForTextChannel = "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildPublicThread",
							"canonicalReference": "discord-api-types!ChannelType.GuildPublicThread:member"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildPrivateThread",
							"canonicalReference": "discord-api-types!ChannelType.GuildPrivateThread:member"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "AllowedThreadTypeForTextChannel",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!AnonymousGuild:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export abstract class AnonymousGuild extends "
						},
						{
							"kind": "Reference",
							"text": "BaseGuild",
							"canonicalReference": "discord.js!BaseGuild:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "AnonymousGuild",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!AnonymousGuild:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `AnonymousGuild` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", data: "
								},
								{
									"kind": "Reference",
									"text": "RawAnonymousGuildData",
									"canonicalReference": "discord.js!RawAnonymousGuildData:type"
								},
								{
									"kind": "Content",
									"text": ", immediatePatch?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "immediatePatch",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AnonymousGuild#banner:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public banner: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "banner",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AnonymousGuild#bannerURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public bannerURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "bannerURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AnonymousGuild#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AnonymousGuild#nsfwLevel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public nsfwLevel: "
								},
								{
									"kind": "Reference",
									"text": "GuildNSFWLevel",
									"canonicalReference": "discord-api-types!GuildNSFWLevel:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "nsfwLevel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AnonymousGuild#premiumSubscriptionCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public premiumSubscriptionCount: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "premiumSubscriptionCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AnonymousGuild#splash:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public splash: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "splash",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AnonymousGuild#splashURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public splashURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "splashURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AnonymousGuild#vanityURLCode:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public vanityURLCode: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "vanityURLCode",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AnonymousGuild#verificationLevel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public verificationLevel: "
								},
								{
									"kind": "Reference",
									"text": "GuildVerificationLevel",
									"canonicalReference": "discord-api-types!GuildVerificationLevel:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "verificationLevel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!AnyComponent:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type AnyComponent =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "APIMessageComponent",
							"canonicalReference": "discord-api-types!APIMessageComponent:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "APIModalComponent",
							"canonicalReference": "discord-api-types!APIModalComponent:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "APIActionRowComponent",
							"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APIMessageActionRowComponent",
							"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "APIModalActionRowComponent",
							"canonicalReference": "discord-api-types!APIModalActionRowComponent:type"
						},
						{
							"kind": "Content",
							"text": ">"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "AnyComponent",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 12
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!AnyThreadChannel:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type AnyThreadChannel = "
						},
						{
							"kind": "Reference",
							"text": "PublicThreadChannel",
							"canonicalReference": "discord.js!PublicThreadChannel:interface"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "PrivateThreadChannel",
							"canonicalReference": "discord.js!PrivateThreadChannel:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "AnyThreadChannel",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Application:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export abstract class Application extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Application",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!Application:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `Application` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", data: "
								},
								{
									"kind": "Reference",
									"text": "RawApplicationData",
									"canonicalReference": "discord.js!RawApplicationData:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Application#coverURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public coverURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "coverURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Application#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Application#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Application#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Application#icon:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public icon: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "icon",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Application#iconURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public iconURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "iconURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Application#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Application#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Application#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Application#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ApplicationCommand:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ApplicationCommand<PermissionsFetchType = "
						},
						{
							"kind": "Content",
							"text": "{}"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "PermissionsFetchType",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"name": "ApplicationCommand",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#applicationId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public applicationId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "applicationId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#defaultMemberPermissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public defaultMemberPermissions: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": "> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "defaultMemberPermissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommand#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "<PermissionsFetchType>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#descriptionLocalizations:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public descriptionLocalizations: "
								},
								{
									"kind": "Reference",
									"text": "LocalizationMap",
									"canonicalReference": "discord-api-types!LocalizationMap:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "descriptionLocalizations",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#descriptionLocalized:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public descriptionLocalized: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "descriptionLocalized",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#dmPermission:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public dmPermission: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "dmPermission",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommand#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(data: "
								},
								{
									"kind": "Reference",
									"text": "Partial",
									"canonicalReference": "!Partial:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandData",
									"canonicalReference": "discord.js!ApplicationCommandData:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "<PermissionsFetchType>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommand#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(\n    command: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandData",
									"canonicalReference": "discord.js!ApplicationCommandData:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "RawApplicationCommandData",
									"canonicalReference": "discord.js!RawApplicationCommandData:type"
								},
								{
									"kind": "Content",
									"text": ",\n    enforceOptionOrder?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "command",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								},
								{
									"parameterName": "enforceOptionOrder",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 8
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#manager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get manager(): "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandManager",
									"canonicalReference": "discord.js!ApplicationCommandManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "manager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#nameLocalizations:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public nameLocalizations: "
								},
								{
									"kind": "Reference",
									"text": "LocalizationMap",
									"canonicalReference": "discord-api-types!LocalizationMap:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "nameLocalizations",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#nameLocalized:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public nameLocalized: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "nameLocalized",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Content",
									"text": "("
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOption",
									"canonicalReference": "discord.js!ApplicationCommandOption:type"
								},
								{
									"kind": "Content",
									"text": " & { nameLocalized?: string; descriptionLocalized?: string })[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommand.optionsEqual:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static optionsEqual(\n    existing: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOption",
									"canonicalReference": "discord.js!ApplicationCommandOption:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOption",
									"canonicalReference": "discord.js!ApplicationCommandOption:type"
								},
								{
									"kind": "Content",
									"text": "[] | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionData",
									"canonicalReference": "discord.js!ApplicationCommandOptionData:type"
								},
								{
									"kind": "Content",
									"text": "[] | "
								},
								{
									"kind": "Reference",
									"text": "APIApplicationCommandOption",
									"canonicalReference": "discord-api-types!APIApplicationCommandOption:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ",\n    enforceOptionOrder?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 13,
								"endIndex": 14
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "existing",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 10
									},
									"isOptional": false
								},
								{
									"parameterName": "enforceOptionOrder",
									"parameterTypeTokenRange": {
										"startIndex": 11,
										"endIndex": 12
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "optionsEqual"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#permissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissions: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissionsManager",
									"canonicalReference": "discord.js!ApplicationCommandPermissionsManager:class"
								},
								{
									"kind": "Content",
									"text": "<\n    PermissionsFetchType,\n    PermissionsFetchType,\n    "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | null,\n    "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "\n  >"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommand#setDefaultMemberPermissions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setDefaultMemberPermissions(\n    defaultMemberPermissions: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "<PermissionsFetchType>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "defaultMemberPermissions",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setDefaultMemberPermissions"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommand#setDescription:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setDescription(description: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "<PermissionsFetchType>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "description",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setDescription"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommand#setDescriptionLocalizations:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setDescriptionLocalizations(\n    descriptionLocalizations: "
								},
								{
									"kind": "Reference",
									"text": "LocalizationMap",
									"canonicalReference": "discord-api-types!LocalizationMap:type"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "<PermissionsFetchType>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "descriptionLocalizations",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setDescriptionLocalizations"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommand#setDMPermission:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setDMPermission(dmPermission?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "<PermissionsFetchType>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "dmPermission",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setDMPermission"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommand#setName:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setName(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "<PermissionsFetchType>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setName"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommand#setNameLocalizations:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setNameLocalizations(nameLocalizations: "
								},
								{
									"kind": "Reference",
									"text": "LocalizationMap",
									"canonicalReference": "discord-api-types!LocalizationMap:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "<PermissionsFetchType>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "nameLocalizations",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setNameLocalizations"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommand#setOptions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setOptions(options: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionData",
									"canonicalReference": "discord.js!ApplicationCommandOptionData:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "<PermissionsFetchType>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setOptions"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandType",
									"canonicalReference": "discord-api-types!ApplicationCommandType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommand#version:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public version: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "version",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandAttachmentOption:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandAttachmentOption extends "
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandAttachmentOption",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandAttachmentOption#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType.Attachment",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Attachment:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandAutocompleteOption:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandAutocompleteOption extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": ", 'autocomplete'> "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandAutocompleteOption",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandAutocompleteOption#autocomplete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "autocomplete: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "autocomplete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandAutocompleteOption#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type:\n    "
								},
								{
									"kind": "Content",
									"text": "| "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType.String",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType.String:member"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType.Number",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Number:member"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType.Integer",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Integer:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandChannelOption:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandChannelOption extends "
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandChannelOption",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandChannelOption#channelTypes:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channelTypes?: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType",
									"canonicalReference": "discord-api-types!ChannelType:enum"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channelTypes",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandChannelOption#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType.Channel",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Channel:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandChannelOptionData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandChannelOptionData extends "
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandChannelOptionData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandChannelOptionData#channel_types:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel_types?: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType",
									"canonicalReference": "discord-api-types!ChannelType:enum"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channel_types",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandChannelOptionData#channelTypes:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channelTypes?: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType",
									"canonicalReference": "discord-api-types!ChannelType:enum"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channelTypes",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandChannelOptionData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "CommandOptionChannelResolvableType",
									"canonicalReference": "discord.js!CommandOptionChannelResolvableType:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandChoicesData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandChoicesData extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": ", 'autocomplete'> "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandChoicesData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandChoicesData#autocomplete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "autocomplete?: "
								},
								{
									"kind": "Content",
									"text": "false"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "autocomplete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandChoicesData#choices:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "choices?: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionChoiceData",
									"canonicalReference": "discord.js!ApplicationCommandOptionChoiceData:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "choices",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandChoicesData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "CommandOptionChoiceResolvableType",
									"canonicalReference": "discord.js!CommandOptionChoiceResolvableType:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandChoicesOption:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandChoicesOption extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": ", 'autocomplete'> "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandChoicesOption",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandChoicesOption#autocomplete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "autocomplete?: "
								},
								{
									"kind": "Content",
									"text": "false"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "autocomplete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandChoicesOption#choices:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "choices?: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionChoiceData",
									"canonicalReference": "discord.js!ApplicationCommandOptionChoiceData:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "choices",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandChoicesOption#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandOptionChoiceResolvableType",
									"canonicalReference": "discord.js!CommandOptionChoiceResolvableType:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType:enum"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ApplicationCommandData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ApplicationCommandData =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "UserApplicationCommandData",
							"canonicalReference": "discord.js!UserApplicationCommandData:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "MessageApplicationCommandData",
							"canonicalReference": "discord.js!MessageApplicationCommandData:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ChatInputApplicationCommandData",
							"canonicalReference": "discord.js!ChatInputApplicationCommandData:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 7
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ApplicationCommandDataResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ApplicationCommandDataResolvable = "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandData",
							"canonicalReference": "discord.js!ApplicationCommandData:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "RESTPostAPIApplicationCommandsJSONBody",
							"canonicalReference": "discord-api-types!RESTPostAPIApplicationCommandsJSONBody:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandDataResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ApplicationCommandManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ApplicationCommandManager<\n  ApplicationCommandScope = "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommand",
							"canonicalReference": "discord.js!ApplicationCommand:class"
						},
						{
							"kind": "Content",
							"text": "<{ guild: "
						},
						{
							"kind": "Reference",
							"text": "GuildResolvable",
							"canonicalReference": "discord.js!GuildResolvable:type"
						},
						{
							"kind": "Content",
							"text": " }>"
						},
						{
							"kind": "Content",
							"text": ",\n  PermissionsOptionsExtras = "
						},
						{
							"kind": "Content",
							"text": "{ guild: "
						},
						{
							"kind": "Reference",
							"text": "GuildResolvable",
							"canonicalReference": "discord.js!GuildResolvable:type"
						},
						{
							"kind": "Content",
							"text": " }"
						},
						{
							"kind": "Content",
							"text": ",\n  PermissionsGuildType = "
						},
						{
							"kind": "Content",
							"text": "null"
						},
						{
							"kind": "Content",
							"text": ",\n> extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", ApplicationCommandScope, "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandResolvable",
							"canonicalReference": "discord.js!ApplicationCommandResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "ApplicationCommandScope",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"typeParameterName": "PermissionsOptionsExtras",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 9
							}
						},
						{
							"typeParameterName": "PermissionsGuildType",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 10,
								"endIndex": 11
							}
						}
					],
					"name": "ApplicationCommandManager",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!ApplicationCommandManager:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `ApplicationCommandManager` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", iterable?: "
								},
								{
									"kind": "Reference",
									"text": "Iterable",
									"canonicalReference": "!Iterable:interface"
								},
								{
									"kind": "Content",
									"text": "<unknown>"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "iterable",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(command: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandDataResolvable",
									"canonicalReference": "discord.js!ApplicationCommandDataResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", guildId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<ApplicationCommandScope>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "command",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "guildId",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandManager#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(command: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandResolvable",
									"canonicalReference": "discord.js!ApplicationCommandResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", guildId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<ApplicationCommandScope | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "command",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "guildId",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandManager#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(\n    command: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandResolvable",
									"canonicalReference": "discord.js!ApplicationCommandResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    data: "
								},
								{
									"kind": "Reference",
									"text": "Partial",
									"canonicalReference": "!Partial:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandDataResolvable",
									"canonicalReference": "discord.js!ApplicationCommandDataResolvable:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<ApplicationCommandScope>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "command",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandManager#edit:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(\n    command: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandResolvable",
									"canonicalReference": "discord.js!ApplicationCommandResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    data: "
								},
								{
									"kind": "Reference",
									"text": "Partial",
									"canonicalReference": "!Partial:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandDataResolvable",
									"canonicalReference": "discord.js!ApplicationCommandDataResolvable:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n    guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 10,
								"endIndex": 14
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "command",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								},
								{
									"parameterName": "guildId",
									"parameterTypeTokenRange": {
										"startIndex": 8,
										"endIndex": 9
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(\n    id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Reference",
									"text": "FetchApplicationCommandOptions",
									"canonicalReference": "discord.js!FetchApplicationCommandOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options: "
								},
								{
									"kind": "Reference",
									"text": "FetchApplicationCommandOptions",
									"canonicalReference": "discord.js!FetchApplicationCommandOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<string, ApplicationCommandScope>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandManager#fetch:member(3)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchApplicationCommandOptions",
									"canonicalReference": "discord.js!FetchApplicationCommandOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<ApplicationCommandScope>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 3,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandManager#fetch:member(4)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(\n    id?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ",\n    options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchApplicationCommandOptions",
									"canonicalReference": "discord.js!FetchApplicationCommandOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", ApplicationCommandScope>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 4,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guild: "
								},
								{
									"kind": "Reference",
									"text": "GuildResolvable",
									"canonicalReference": "discord.js!GuildResolvable:type"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommandManager#permissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissions: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissionsManager",
									"canonicalReference": "discord.js!ApplicationCommandPermissionsManager:class"
								},
								{
									"kind": "Content",
									"text": "<\n    { command?: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandResolvable",
									"canonicalReference": "discord.js!ApplicationCommandResolvable:type"
								},
								{
									"kind": "Content",
									"text": " } & PermissionsOptionsExtras,\n    { command: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandResolvable",
									"canonicalReference": "discord.js!ApplicationCommandResolvable:type"
								},
								{
									"kind": "Content",
									"text": " } & PermissionsOptionsExtras,\n    PermissionsGuildType,\n    null\n  >"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandManager#set:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public set(commands: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandDataResolvable",
									"canonicalReference": "discord.js!ApplicationCommandDataResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", ApplicationCommandScope>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "commands",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "set"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandManager#set:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public set(\n    commands: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandDataResolvable",
									"canonicalReference": "discord.js!ApplicationCommandDataResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ",\n    guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 14
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "commands",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "guildId",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "set"
						}
					],
					"extendsTokenRange": {
						"startIndex": 12,
						"endIndex": 17
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandNonOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandNonOptions extends "
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandNonOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandNonOptions#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandOptionNonChoiceResolvableType",
									"canonicalReference": "discord.js!CommandOptionNonChoiceResolvableType:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType:enum"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandNonOptionsData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandNonOptionsData extends "
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandNonOptionsData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandNonOptionsData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "CommandOptionNonChoiceResolvableType",
									"canonicalReference": "discord.js!CommandOptionNonChoiceResolvableType:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandNumericOption:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandNumericOption extends "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandChoicesOption",
							"canonicalReference": "discord.js!ApplicationCommandChoicesOption:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandNumericOption",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandNumericOption#maxValue:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxValue?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxValue",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandNumericOption#minValue:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "minValue?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "minValue",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandNumericOption#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandOptionNumericResolvableType",
									"canonicalReference": "discord.js!CommandOptionNumericResolvableType:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType:enum"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandNumericOptionData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandNumericOptionData extends "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandChoicesData",
							"canonicalReference": "discord.js!ApplicationCommandChoicesData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandNumericOptionData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandNumericOptionData#max_value:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "max_value?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "max_value",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandNumericOptionData#maxValue:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxValue?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxValue",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandNumericOptionData#min_value:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "min_value?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "min_value",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandNumericOptionData#minValue:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "minValue?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "minValue",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandNumericOptionData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "CommandOptionNumericResolvableType",
									"canonicalReference": "discord.js!CommandOptionNumericResolvableType:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ApplicationCommandOption:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ApplicationCommandOption =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandSubGroup",
							"canonicalReference": "discord.js!ApplicationCommandSubGroup:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandNonOptions",
							"canonicalReference": "discord.js!ApplicationCommandNonOptions:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandChannelOption",
							"canonicalReference": "discord.js!ApplicationCommandChannelOption:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandChoicesOption",
							"canonicalReference": "discord.js!ApplicationCommandChoicesOption:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandNumericOption",
							"canonicalReference": "discord.js!ApplicationCommandNumericOption:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandAttachmentOption",
							"canonicalReference": "discord.js!ApplicationCommandAttachmentOption:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandSubCommand",
							"canonicalReference": "discord.js!ApplicationCommandSubCommand:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandOption",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 15
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandOptionChoiceData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandOptionChoiceData "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandOptionChoiceData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandOptionChoiceData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandOptionChoiceData#nameLocalizations:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "nameLocalizations?: "
								},
								{
									"kind": "Reference",
									"text": "LocalizationMap",
									"canonicalReference": "discord-api-types!LocalizationMap:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "nameLocalizations",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandOptionChoiceData#value:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "value: "
								},
								{
									"kind": "Content",
									"text": "string | number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "value",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ApplicationCommandOptionData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ApplicationCommandOptionData =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandSubGroupData",
							"canonicalReference": "discord.js!ApplicationCommandSubGroupData:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandNonOptionsData",
							"canonicalReference": "discord.js!ApplicationCommandNonOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandChannelOptionData",
							"canonicalReference": "discord.js!ApplicationCommandChannelOptionData:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandChoicesData",
							"canonicalReference": "discord.js!ApplicationCommandChoicesData:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandAutocompleteOption",
							"canonicalReference": "discord.js!ApplicationCommandAutocompleteOption:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandNumericOptionData",
							"canonicalReference": "discord.js!ApplicationCommandNumericOptionData:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandSubCommandData",
							"canonicalReference": "discord.js!ApplicationCommandSubCommandData:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandOptionData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 15
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ApplicationCommandPermissionIdResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ApplicationCommandPermissionIdResolvable =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "GuildChannelResolvable",
							"canonicalReference": "discord.js!GuildChannelResolvable:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "RoleResolvable",
							"canonicalReference": "discord.js!RoleResolvable:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "UserResolvable",
							"canonicalReference": "discord.js!UserResolvable:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ChannelPermissionConstant",
							"canonicalReference": "discord.js!ChannelPermissionConstant:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "RolePermissionConstant",
							"canonicalReference": "discord.js!RolePermissionConstant:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandPermissionIdResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 11
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandPermissions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandPermissions "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandPermissions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandPermissions#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandPermissions#permission:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "permission: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permission",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandPermissions#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissionType",
									"canonicalReference": "discord-api-types!ApplicationCommandPermissionType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ApplicationCommandPermissionsManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ApplicationCommandPermissionsManager<\n  BaseOptions,\n  FetchSingleOptions,\n  GuildType,\n  CommandIdType,\n> extends "
						},
						{
							"kind": "Reference",
							"text": "BaseManager",
							"canonicalReference": "discord.js!BaseManager:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "BaseOptions",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "FetchSingleOptions",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "GuildType",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "CommandIdType",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "ApplicationCommandPermissionsManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsManager#add:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public add(\n    options: "
								},
								{
									"kind": "Content",
									"text": "FetchSingleOptions & "
								},
								{
									"kind": "Reference",
									"text": "EditApplicationCommandPermissionsMixin",
									"canonicalReference": "discord.js!EditApplicationCommandPermissionsMixin:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissions",
									"canonicalReference": "discord.js!ApplicationCommandPermissions:interface"
								},
								{
									"kind": "Content",
									"text": "[]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "add"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsManager#commandId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandId: "
								},
								{
									"kind": "Content",
									"text": "CommandIdType"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options: "
								},
								{
									"kind": "Content",
									"text": "FetchSingleOptions"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissions",
									"canonicalReference": "discord.js!ApplicationCommandPermissions:interface"
								},
								{
									"kind": "Content",
									"text": "[]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options: "
								},
								{
									"kind": "Content",
									"text": "BaseOptions"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissions",
									"canonicalReference": "discord.js!ApplicationCommandPermissions:interface"
								},
								{
									"kind": "Content",
									"text": "[]>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Content",
									"text": "GuildType"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsManager#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsManager#has:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public has(\n    options: "
								},
								{
									"kind": "Content",
									"text": "FetchSingleOptions & {\n      permissionId: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissionIdResolvable",
									"canonicalReference": "discord.js!ApplicationCommandPermissionIdResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";\n      permissionType?: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissionType",
									"canonicalReference": "discord-api-types!ApplicationCommandPermissionType:enum"
								},
								{
									"kind": "Content",
									"text": ";\n    }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<boolean>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "has"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsManager#remove:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public remove(\n    options:\n      "
								},
								{
									"kind": "Content",
									"text": "| (FetchSingleOptions & {\n          token: string;\n          channels?: ("
								},
								{
									"kind": "Reference",
									"text": "GuildChannelResolvable",
									"canonicalReference": "discord.js!GuildChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ChannelPermissionConstant",
									"canonicalReference": "discord.js!ChannelPermissionConstant:type"
								},
								{
									"kind": "Content",
									"text": ")[];\n          roles?: ("
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "RolePermissionConstant",
									"canonicalReference": "discord.js!RolePermissionConstant:type"
								},
								{
									"kind": "Content",
									"text": ")[];\n          users: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[];\n        })\n      | (FetchSingleOptions & {\n          token: string;\n          channels?: ("
								},
								{
									"kind": "Reference",
									"text": "GuildChannelResolvable",
									"canonicalReference": "discord.js!GuildChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ChannelPermissionConstant",
									"canonicalReference": "discord.js!ChannelPermissionConstant:type"
								},
								{
									"kind": "Content",
									"text": ")[];\n          roles: ("
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "RolePermissionConstant",
									"canonicalReference": "discord.js!RolePermissionConstant:type"
								},
								{
									"kind": "Content",
									"text": ")[];\n          users?: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[];\n        })\n      | (FetchSingleOptions & {\n          token: string;\n          channels: ("
								},
								{
									"kind": "Reference",
									"text": "GuildChannelResolvable",
									"canonicalReference": "discord.js!GuildChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ChannelPermissionConstant",
									"canonicalReference": "discord.js!ChannelPermissionConstant:type"
								},
								{
									"kind": "Content",
									"text": ")[];\n          roles?: ("
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "RolePermissionConstant",
									"canonicalReference": "discord.js!RolePermissionConstant:type"
								},
								{
									"kind": "Content",
									"text": ")[];\n          users?: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[];\n        })"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissions",
									"canonicalReference": "discord.js!ApplicationCommandPermissions:interface"
								},
								{
									"kind": "Content",
									"text": "[]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 33,
								"endIndex": 37
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 32
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "remove"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsManager#set:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public set(\n    options: "
								},
								{
									"kind": "Content",
									"text": "FetchSingleOptions & "
								},
								{
									"kind": "Reference",
									"text": "EditApplicationCommandPermissionsMixin",
									"canonicalReference": "discord.js!EditApplicationCommandPermissionsMixin:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissions",
									"canonicalReference": "discord.js!ApplicationCommandPermissions:interface"
								},
								{
									"kind": "Content",
									"text": "[]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "set"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandPermissionsUpdateData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandPermissionsUpdateData "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandPermissionsUpdateData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsUpdateData#applicationId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "applicationId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "applicationId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsUpdateData#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsUpdateData#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandPermissionsUpdateData#permissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "permissions: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissions",
									"canonicalReference": "discord.js!ApplicationCommandPermissions:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ApplicationCommandResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ApplicationCommandResolvable = "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommand",
							"canonicalReference": "discord.js!ApplicationCommand:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandSubCommand:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandSubCommand extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": ", 'required'> "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandSubCommand",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandSubCommand#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "options?: "
								},
								{
									"kind": "Content",
									"text": "("
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandChoicesOption",
									"canonicalReference": "discord.js!ApplicationCommandChoicesOption:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandNonOptions",
									"canonicalReference": "discord.js!ApplicationCommandNonOptions:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandChannelOption",
									"canonicalReference": "discord.js!ApplicationCommandChannelOption:interface"
								},
								{
									"kind": "Content",
									"text": ")[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 8
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandSubCommand#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType.Subcommand",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Subcommand:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandSubCommandData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandSubCommandData extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": ", 'required'> "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandSubCommandData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandSubCommandData#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "options?: "
								},
								{
									"kind": "Content",
									"text": "(\n    | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandChoicesData",
									"canonicalReference": "discord.js!ApplicationCommandChoicesData:interface"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandNonOptionsData",
									"canonicalReference": "discord.js!ApplicationCommandNonOptionsData:interface"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandChannelOptionData",
									"canonicalReference": "discord.js!ApplicationCommandChannelOptionData:interface"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandAutocompleteOption",
									"canonicalReference": "discord.js!ApplicationCommandAutocompleteOption:interface"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandNumericOptionData",
									"canonicalReference": "discord.js!ApplicationCommandNumericOptionData:interface"
								},
								{
									"kind": "Content",
									"text": "\n  )[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 12
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandSubCommandData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType.Subcommand",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Subcommand:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandSubGroup:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandSubGroup extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": ", 'required'> "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandSubGroup",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandSubGroup#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "options?: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandSubCommand",
									"canonicalReference": "discord.js!ApplicationCommandSubCommand:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandSubGroup#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType.SubcommandGroup",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType.SubcommandGroup:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ApplicationCommandSubGroupData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ApplicationCommandSubGroupData extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandOptionsData",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface"
						},
						{
							"kind": "Content",
							"text": ", 'required'> "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationCommandSubGroupData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandSubGroupData#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "options?: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandSubCommandData",
									"canonicalReference": "discord.js!ApplicationCommandSubCommandData:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ApplicationCommandSubGroupData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType.SubcommandGroup",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType.SubcommandGroup:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ApplicationFlagsBitField:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ApplicationFlagsBitField extends "
						},
						{
							"kind": "Reference",
							"text": "BitField",
							"canonicalReference": "discord.js!BitField:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "ApplicationFlagsString",
							"canonicalReference": "discord.js!ApplicationFlagsString:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationFlagsBitField",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ApplicationFlagsBitField.Flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Flags: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "ApplicationFlags",
									"canonicalReference": "discord-api-types!ApplicationFlags:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ApplicationFlagsBitField.resolve:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolve(bit?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationFlagsString",
									"canonicalReference": "discord.js!ApplicationFlagsString:type"
								},
								{
									"kind": "Content",
									"text": ", number>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "resolve"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ApplicationFlagsString:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ApplicationFlagsString = "
						},
						{
							"kind": "Content",
							"text": "keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "ApplicationFlags",
							"canonicalReference": "discord-api-types!ApplicationFlags:enum"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationFlagsString",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ApplicationResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ApplicationResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Application",
							"canonicalReference": "discord.js!Application:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Activity",
							"canonicalReference": "discord.js!Activity:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ApplicationResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Attachment:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Attachment "
						}
					],
					"releaseTag": "Public",
					"name": "Attachment",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#attachment:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public attachment: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Stream",
									"canonicalReference": "!internal.Stream:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "attachment",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#contentType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public contentType: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "contentType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#ephemeral:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ephemeral: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ephemeral",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#height:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public height: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "height",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#proxyURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public proxyURL: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "proxyURL",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#size:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public size: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "size",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#spoiler:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get spoiler(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "spoiler",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Attachment#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public url: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Attachment#width:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public width: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "width",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!AttachmentBuilder:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class AttachmentBuilder "
						}
					],
					"releaseTag": "Public",
					"name": "AttachmentBuilder",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!AttachmentBuilder:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `AttachmentBuilder` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(attachment: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Stream",
									"canonicalReference": "!internal.Stream:class"
								},
								{
									"kind": "Content",
									"text": ", data?: "
								},
								{
									"kind": "Reference",
									"text": "AttachmentData",
									"canonicalReference": "discord.js!AttachmentData:interface"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "attachment",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AttachmentBuilder#attachment:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public attachment: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Stream",
									"canonicalReference": "!internal.Stream:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "attachment",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AttachmentBuilder#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AttachmentBuilder.from:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static from(other: "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AttachmentPayload",
									"canonicalReference": "discord.js!AttachmentPayload:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "AttachmentBuilder",
									"canonicalReference": "discord.js!AttachmentBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "from"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AttachmentBuilder#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AttachmentBuilder#setDescription:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setDescription(description: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "description",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setDescription"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AttachmentBuilder#setFile:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setFile(attachment: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Stream",
									"canonicalReference": "!internal.Stream:class"
								},
								{
									"kind": "Content",
									"text": ", name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "attachment",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setFile"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AttachmentBuilder#setName:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setName(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setName"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AttachmentBuilder#setSpoiler:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setSpoiler(spoiler?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "spoiler",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setSpoiler"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AttachmentBuilder#spoiler:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get spoiler(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "spoiler",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AttachmentBuilder#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!AttachmentData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface AttachmentData "
						}
					],
					"releaseTag": "Public",
					"name": "AttachmentData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AttachmentData#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AttachmentData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!AttachmentPayload:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface AttachmentPayload "
						}
					],
					"releaseTag": "Public",
					"name": "AttachmentPayload",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AttachmentPayload#attachment:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "attachment: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Stream",
									"canonicalReference": "!internal.Stream:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "attachment",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AttachmentPayload#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AttachmentPayload#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!AuditLogChange:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface AuditLogChange "
						}
					],
					"releaseTag": "Public",
					"name": "AuditLogChange",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AuditLogChange#key:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "key: "
								},
								{
									"kind": "Reference",
									"text": "APIAuditLogChange",
									"canonicalReference": "discord-api-types!APIAuditLogChange:type"
								},
								{
									"kind": "Content",
									"text": "['key']"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "key",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AuditLogChange#new:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "new?: "
								},
								{
									"kind": "Reference",
									"text": "APIAuditLogChange",
									"canonicalReference": "discord-api-types!APIAuditLogChange:type"
								},
								{
									"kind": "Content",
									"text": "['new_value']"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "new",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AuditLogChange#old:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "old?: "
								},
								{
									"kind": "Reference",
									"text": "APIAuditLogChange",
									"canonicalReference": "discord-api-types!APIAuditLogChange:type"
								},
								{
									"kind": "Content",
									"text": "['old_value']"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "old",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!AutocompleteFocusedOption:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type AutocompleteFocusedOption = "
						},
						{
							"kind": "Reference",
							"text": "Pick",
							"canonicalReference": "!Pick:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "CommandInteractionOption",
							"canonicalReference": "discord.js!CommandInteractionOption:interface"
						},
						{
							"kind": "Content",
							"text": ", 'name'> & {\n  focused: true;\n  type:\n    | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandOptionType.String",
							"canonicalReference": "discord-api-types!ApplicationCommandOptionType.String:member"
						},
						{
							"kind": "Content",
							"text": "\n    | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandOptionType.Integer",
							"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Integer:member"
						},
						{
							"kind": "Content",
							"text": "\n    | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandOptionType.Number",
							"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Number:member"
						},
						{
							"kind": "Content",
							"text": ";\n  value: string;\n}"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "AutocompleteFocusedOption",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 11
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!AutocompleteInteraction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class AutocompleteInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "BaseInteraction",
							"canonicalReference": "discord.js!BaseInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "AutocompleteInteraction",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AutocompleteInteraction#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AutocompleteInteraction#command:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get command(): "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "<{ guild: "
								},
								{
									"kind": "Reference",
									"text": "GuildResolvable",
									"canonicalReference": "discord.js!GuildResolvable:type"
								},
								{
									"kind": "Content",
									"text": " }> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "command",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AutocompleteInteraction#commandGuildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandGuildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandGuildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AutocompleteInteraction#commandId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AutocompleteInteraction#commandName:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandName: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandName",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AutocompleteInteraction#commandType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandType: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandType.ChatInput",
									"canonicalReference": "discord-api-types!ApplicationCommandType.ChatInput:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AutocompleteInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "AutocompleteInteraction",
									"canonicalReference": "discord.js!AutocompleteInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inCachedGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AutocompleteInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "AutocompleteInteraction",
									"canonicalReference": "discord.js!AutocompleteInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AutocompleteInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "AutocompleteInteraction",
									"canonicalReference": "discord.js!AutocompleteInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inRawGuild"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AutocompleteInteraction#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "Omit",
									"canonicalReference": "!Omit:type"
								},
								{
									"kind": "Content",
									"text": "<\n    "
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOptionResolver",
									"canonicalReference": "discord.js!CommandInteractionOptionResolver:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>,\n    'getMessage' | 'getUser' | 'getAttachment' | 'getChannel' | 'getMember' | 'getMentionable' | 'getRole'\n  >"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!AutocompleteInteraction#respond:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public respond(options: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionChoiceData",
									"canonicalReference": "discord.js!ApplicationCommandOptionChoiceData:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "respond"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AutocompleteInteraction#responded:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public responded: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "responded",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!AutocompleteInteraction#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "InteractionType.ApplicationCommandAutocomplete",
									"canonicalReference": "discord-api-types!InteractionType.ApplicationCommandAutocomplete:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!Awaitable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type Awaitable<T> = "
						},
						{
							"kind": "Content",
							"text": "T | "
						},
						{
							"kind": "Reference",
							"text": "PromiseLike",
							"canonicalReference": "!PromiseLike:interface"
						},
						{
							"kind": "Content",
							"text": "<T>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "Awaitable",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!AwaitMessageCollectorOptionsParams:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type AwaitMessageCollectorOptionsParams<T extends "
						},
						{
							"kind": "Reference",
							"text": "MessageComponentType",
							"canonicalReference": "discord.js!MessageComponentType:type"
						},
						{
							"kind": "Content",
							"text": ", Cached extends "
						},
						{
							"kind": "Content",
							"text": "boolean "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": "> =\n  "
						},
						{
							"kind": "Content",
							"text": "| { componentType?: T } & "
						},
						{
							"kind": "Reference",
							"text": "Pick",
							"canonicalReference": "!Pick:type"
						},
						{
							"kind": "Content",
							"text": "<\n      "
						},
						{
							"kind": "Reference",
							"text": "InteractionCollectorOptions",
							"canonicalReference": "discord.js!InteractionCollectorOptions:interface"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "MappedInteractionTypes",
							"canonicalReference": "discord.js!MappedInteractionTypes:interface"
						},
						{
							"kind": "Content",
							"text": "<Cached>[T]>,\n      keyof "
						},
						{
							"kind": "Reference",
							"text": "AwaitMessageComponentOptions",
							"canonicalReference": "discord.js!AwaitMessageComponentOptions:type"
						},
						{
							"kind": "Content",
							"text": "<any>\n    >"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "AwaitMessageCollectorOptionsParams",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"defaultTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 7,
						"endIndex": 16
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!AwaitMessageComponentOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type AwaitMessageComponentOptions<T extends "
						},
						{
							"kind": "Reference",
							"text": "CollectedMessageInteraction",
							"canonicalReference": "discord.js!CollectedMessageInteraction:type"
						},
						{
							"kind": "Content",
							"text": "> = "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "MessageComponentCollectorOptions",
							"canonicalReference": "discord.js!MessageComponentCollectorOptions:type"
						},
						{
							"kind": "Content",
							"text": "<T>,\n  'max' | 'maxComponents' | 'maxUsers'\n>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "AwaitMessageComponentOptions",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 3,
						"endIndex": 7
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!AwaitMessagesOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface AwaitMessagesOptions extends "
						},
						{
							"kind": "Reference",
							"text": "MessageCollectorOptions",
							"canonicalReference": "discord.js!MessageCollectorOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "AwaitMessagesOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AwaitMessagesOptions#errors:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "errors?: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "errors",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!AwaitModalSubmitOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type AwaitModalSubmitOptions<T extends "
						},
						{
							"kind": "Reference",
							"text": "ModalSubmitInteraction",
							"canonicalReference": "discord.js!ModalSubmitInteraction:class"
						},
						{
							"kind": "Content",
							"text": "> = "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "ModalSubmitInteractionCollectorOptions",
							"canonicalReference": "discord.js!ModalSubmitInteractionCollectorOptions:type"
						},
						{
							"kind": "Content",
							"text": "<T>,\n  'max' | 'maxComponents' | 'maxUsers'\n> & {\n  time: number;\n}"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "AwaitModalSubmitOptions",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 3,
						"endIndex": 7
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!AwaitReactionsOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface AwaitReactionsOptions extends "
						},
						{
							"kind": "Reference",
							"text": "ReactionCollectorOptions",
							"canonicalReference": "discord.js!ReactionCollectorOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "AwaitReactionsOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!AwaitReactionsOptions#errors:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "errors?: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "errors",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!BanOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface BanOptions "
						}
					],
					"releaseTag": "Public",
					"name": "BanOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BanOptions#deleteMessageDays:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deleteMessageDays?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "deleteMessageDays",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BanOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Base:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export abstract class Base "
						}
					],
					"releaseTag": "Public",
					"name": "Base",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!Base:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `Base` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Base#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Base#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(...props: "
								},
								{
									"kind": "Reference",
									"text": "Record",
									"canonicalReference": "!Record:type"
								},
								{
									"kind": "Content",
									"text": "<string, boolean | string>[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "props",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Base#valueOf:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public valueOf(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "valueOf"
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!Base64Resolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type Base64Resolvable = "
						},
						{
							"kind": "Reference",
							"text": "Buffer",
							"canonicalReference": "!__global.Buffer:interface"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Base64String",
							"canonicalReference": "discord.js!Base64String:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "Base64Resolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!Base64String:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type Base64String = "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "Base64String",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!BaseApplicationCommandData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface BaseApplicationCommandData "
						}
					],
					"releaseTag": "Public",
					"name": "BaseApplicationCommandData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseApplicationCommandData#defaultMemberPermissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "defaultMemberPermissions?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "defaultMemberPermissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseApplicationCommandData#dmPermission:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "dmPermission?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "dmPermission",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseApplicationCommandData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseApplicationCommandData#nameLocalizations:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "nameLocalizations?: "
								},
								{
									"kind": "Reference",
									"text": "LocalizationMap",
									"canonicalReference": "discord-api-types!LocalizationMap:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "nameLocalizations",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!BaseApplicationCommandOptionsData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface BaseApplicationCommandOptionsData "
						}
					],
					"releaseTag": "Public",
					"name": "BaseApplicationCommandOptionsData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData#autocomplete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "autocomplete?: "
								},
								{
									"kind": "Content",
									"text": "never"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "autocomplete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData#descriptionLocalizations:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "descriptionLocalizations?: "
								},
								{
									"kind": "Reference",
									"text": "LocalizationMap",
									"canonicalReference": "discord-api-types!LocalizationMap:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "descriptionLocalizations",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData#nameLocalizations:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "nameLocalizations?: "
								},
								{
									"kind": "Reference",
									"text": "LocalizationMap",
									"canonicalReference": "discord-api-types!LocalizationMap:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "nameLocalizations",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseApplicationCommandOptionsData#required:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "required",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!BaseButtonComponentData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface BaseButtonComponentData extends "
						},
						{
							"kind": "Reference",
							"text": "BaseComponentData",
							"canonicalReference": "discord.js!BaseComponentData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "BaseButtonComponentData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseButtonComponentData#disabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "disabled?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "disabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseButtonComponentData#emoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "emoji?: "
								},
								{
									"kind": "Reference",
									"text": "ComponentEmojiResolvable",
									"canonicalReference": "discord.js!ComponentEmojiResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "emoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseButtonComponentData#label:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "label?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "label",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseButtonComponentData#style:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "style: "
								},
								{
									"kind": "Reference",
									"text": "ButtonStyle",
									"canonicalReference": "discord-api-types!ButtonStyle:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "style",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!BaseChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export abstract class BaseChannel extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "BaseChannel",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!BaseChannel:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `BaseChannel` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", data?: "
								},
								{
									"kind": "Reference",
									"text": "RawChannelData",
									"canonicalReference": "discord.js!RawChannelData:type"
								},
								{
									"kind": "Content",
									"text": ", immediatePatch?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								},
								{
									"parameterName": "immediatePatch",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseChannel#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseChannel#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseChannel#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseChannel#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "force",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseChannel#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseChannel#isDMBased:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isDMBased(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "PartialGroupDMChannel",
									"canonicalReference": "discord.js!PartialGroupDMChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "DMChannel",
									"canonicalReference": "discord.js!DMChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialDMChannel",
									"canonicalReference": "discord.js!PartialDMChannel:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isDMBased"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseChannel#isTextBased:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isTextBased(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "TextBasedChannel",
									"canonicalReference": "discord.js!TextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isTextBased"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseChannel#isThread:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isThread(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isThread"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseChannel#isVoiceBased:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isVoiceBased(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "VoiceBasedChannel",
									"canonicalReference": "discord.js!VoiceBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isVoiceBased"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseChannel#partial:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get partial(): "
								},
								{
									"kind": "Content",
									"text": "false"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "partial",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseChannel#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Reference",
									"text": "ChannelMention",
									"canonicalReference": "discord.js!ChannelMention:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "UserMention",
									"canonicalReference": "discord.js!UserMention:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType",
									"canonicalReference": "discord-api-types!ChannelType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseChannel#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get url(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!BaseClient:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class BaseClient extends "
						},
						{
							"kind": "Reference",
							"text": "EventEmitter",
							"canonicalReference": "!EventEmitter:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "BaseClient",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!BaseClient:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `BaseClient` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(options?: "
								},
								{
									"kind": "Reference",
									"text": "ClientOptions",
									"canonicalReference": "discord.js!ClientOptions:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookClientOptions",
									"canonicalReference": "discord.js!WebhookClientOptions:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseClient#destroy:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public destroy(): "
								},
								{
									"kind": "Content",
									"text": "void"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "destroy"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseClient#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "ClientOptions",
									"canonicalReference": "discord.js!ClientOptions:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookClientOptions",
									"canonicalReference": "discord.js!WebhookClientOptions:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseClient#rest:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public rest: "
								},
								{
									"kind": "Reference",
									"text": "REST",
									"canonicalReference": "@discordjs/rest!~REST:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rest",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseClient#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(...props: "
								},
								{
									"kind": "Reference",
									"text": "Record",
									"canonicalReference": "!Record:type"
								},
								{
									"kind": "Content",
									"text": "<string, boolean | string>[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "props",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "toJSON"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!BaseComponentData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface BaseComponentData "
						}
					],
					"releaseTag": "Public",
					"name": "BaseComponentData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseComponentData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ComponentType",
									"canonicalReference": "discord-api-types!ComponentType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!BaseFetchOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface BaseFetchOptions "
						}
					],
					"releaseTag": "Public",
					"name": "BaseFetchOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseFetchOptions#cache:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "cache",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseFetchOptions#force:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "force",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!BaseGuild:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export abstract class BaseGuild extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "BaseGuild",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!BaseGuild:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `BaseGuild` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", data: "
								},
								{
									"kind": "Reference",
									"text": "RawBaseGuildData",
									"canonicalReference": "discord.js!RawBaseGuildData:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuild#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuild#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuild#features:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public features: "
								},
								{
									"kind": "Reference",
									"text": "GuildFeature",
									"canonicalReference": "discord-api-types!GuildFeature:enum"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "features",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuild#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuild#icon:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public icon: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "icon",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuild#iconURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public iconURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "iconURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuild#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuild#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuild#nameAcronym:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get nameAcronym(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "nameAcronym",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuild#partnered:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get partnered(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "partnered",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuild#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuild#verified:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get verified(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "verified",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!BaseGuildEmoji:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class BaseGuildEmoji extends "
						},
						{
							"kind": "Reference",
							"text": "Emoji",
							"canonicalReference": "discord.js!Emoji:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "BaseGuildEmoji",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!BaseGuildEmoji:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `BaseGuildEmoji` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", data: "
								},
								{
									"kind": "Reference",
									"text": "RawGuildEmojiData",
									"canonicalReference": "discord.js!RawGuildEmojiData:type"
								},
								{
									"kind": "Content",
									"text": ", guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "GuildPreview",
									"canonicalReference": "discord.js!GuildPreview:class"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "guild",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 8
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildEmoji#available:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public available: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "available",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildEmoji#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildEmoji#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildEmoji#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "GuildPreview",
									"canonicalReference": "discord.js!GuildPreview:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildEmoji#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildEmoji#managed:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public managed: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "managed",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildEmoji#requiresColons:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public requiresColons: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "requiresColons",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!BaseGuildEmojiManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class BaseGuildEmojiManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "GuildEmoji",
							"canonicalReference": "discord.js!GuildEmoji:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "EmojiResolvable",
							"canonicalReference": "discord.js!EmojiResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "BaseGuildEmojiManager",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!BaseGuildEmojiManager:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `BaseGuildEmojiManager` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", iterable?: "
								},
								{
									"kind": "Reference",
									"text": "Iterable",
									"canonicalReference": "!Iterable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "RawGuildEmojiData",
									"canonicalReference": "discord.js!RawGuildEmojiData:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "iterable",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuildEmojiManager#resolveIdentifier:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public resolveIdentifier(emoji: "
								},
								{
									"kind": "Reference",
									"text": "EmojiIdentifierResolvable",
									"canonicalReference": "discord.js!EmojiIdentifierResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "emoji",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveIdentifier"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!BaseGuildTextChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class BaseGuildTextChannel extends "
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannelMixin",
							"canonicalReference": "discord.js!TextBasedChannelMixin"
						},
						{
							"kind": "Content",
							"text": "("
						},
						{
							"kind": "Reference",
							"text": "GuildChannel",
							"canonicalReference": "discord.js!GuildChannel:class"
						},
						{
							"kind": "Content",
							"text": ") "
						}
					],
					"releaseTag": "Public",
					"name": "BaseGuildTextChannel",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!BaseGuildTextChannel:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `BaseGuildTextChannel` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ", data?: "
								},
								{
									"kind": "Reference",
									"text": "RawGuildChannelData",
									"canonicalReference": "discord.js!RawGuildChannelData:type"
								},
								{
									"kind": "Content",
									"text": ", client?: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", immediatePatch?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "guild",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								},
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								},
								{
									"parameterName": "immediatePatch",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 8
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuildTextChannel#createInvite:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createInvite(options?: "
								},
								{
									"kind": "Reference",
									"text": "CreateInviteOptions",
									"canonicalReference": "discord.js!CreateInviteOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "createInvite"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildTextChannel#defaultAutoArchiveDuration:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public defaultAutoArchiveDuration?: "
								},
								{
									"kind": "Reference",
									"text": "ThreadAutoArchiveDuration",
									"canonicalReference": "discord-api-types!ThreadAutoArchiveDuration:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "defaultAutoArchiveDuration",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuildTextChannel#fetchInvites:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchInvites(cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<string, "
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "cache",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchInvites"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildTextChannel#nsfw:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public nsfw: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "nsfw",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildTextChannel#rateLimitPerUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public rateLimitPerUser: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rateLimitPerUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuildTextChannel#setDefaultAutoArchiveDuration:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setDefaultAutoArchiveDuration(\n    defaultAutoArchiveDuration: "
								},
								{
									"kind": "Reference",
									"text": "ThreadAutoArchiveDuration",
									"canonicalReference": "discord-api-types!ThreadAutoArchiveDuration:enum"
								},
								{
									"kind": "Content",
									"text": ",\n    reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "defaultAutoArchiveDuration",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setDefaultAutoArchiveDuration"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuildTextChannel#setTopic:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setTopic(topic: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "topic",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setTopic"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuildTextChannel#setType:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setType(type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildText",
									"canonicalReference": "discord-api-types!ChannelType.GuildText:member"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "type",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setType"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuildTextChannel#setType:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setType(type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildNews",
									"canonicalReference": "discord-api-types!ChannelType.GuildNews:member"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "NewsChannel",
									"canonicalReference": "discord.js!NewsChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "type",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setType"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildTextChannel#threads:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public threads: "
								},
								{
									"kind": "Reference",
									"text": "ThreadManager",
									"canonicalReference": "discord.js!ThreadManager:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AllowedThreadTypeForTextChannel",
									"canonicalReference": "discord.js!AllowedThreadTypeForTextChannel:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "AllowedThreadTypeForNewsChannel",
									"canonicalReference": "discord.js!AllowedThreadTypeForNewsChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threads",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildTextChannel#topic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public topic: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "topic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!BaseGuildVoiceChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class BaseGuildVoiceChannel extends "
						},
						{
							"kind": "Reference",
							"text": "GuildChannel",
							"canonicalReference": "discord.js!GuildChannel:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "BaseGuildVoiceChannel",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `BaseGuildVoiceChannel` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ", data?: "
								},
								{
									"kind": "Reference",
									"text": "RawGuildChannelData",
									"canonicalReference": "discord.js!RawGuildChannelData:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "guild",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel#bitrate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public bitrate: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "bitrate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel#createInvite:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createInvite(options?: "
								},
								{
									"kind": "Reference",
									"text": "CreateInviteOptions",
									"canonicalReference": "discord.js!CreateInviteOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "createInvite"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel#fetchInvites:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchInvites(cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<string, "
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "cache",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchInvites"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel#full:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get full(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "full",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel#joinable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get joinable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "joinable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel#members:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get members(): "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "members",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel#rtcRegion:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public rtcRegion: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rtcRegion",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel#setRTCRegion:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setRTCRegion(rtcRegion: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "rtcRegion",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setRTCRegion"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel#userLimit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public userLimit: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "userLimit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!BaseInteraction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class BaseInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "BaseInteraction",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!BaseInteraction:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `BaseInteraction` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", data: "
								},
								{
									"kind": "Reference",
									"text": "RawInteractionData",
									"canonicalReference": "discord.js!RawInteractionData:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#applicationId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public applicationId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "applicationId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get channel(): "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<\n    Cached,\n    "
								},
								{
									"kind": "Reference",
									"text": "GuildTextBasedChannel",
									"canonicalReference": "discord.js!GuildTextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | null,\n    "
								},
								{
									"kind": "Reference",
									"text": "GuildTextBasedChannel",
									"canonicalReference": "discord.js!GuildTextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | null,\n    "
								},
								{
									"kind": "Reference",
									"text": "GuildTextBasedChannel",
									"canonicalReference": "discord.js!GuildTextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | null,\n    "
								},
								{
									"kind": "Reference",
									"text": "TextBasedChannel",
									"canonicalReference": "discord.js!TextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | null\n  >"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 11
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guild(): "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ", null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#guildLocale:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildLocale: "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "Locale",
									"canonicalReference": "discord-api-types!Locale:enum"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildLocale",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "BaseInteraction",
									"canonicalReference": "discord.js!BaseInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inCachedGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "BaseInteraction",
									"canonicalReference": "discord.js!BaseInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "BaseInteraction",
									"canonicalReference": "discord.js!BaseInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inRawGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseInteraction#isButton:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isButton(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ButtonInteraction",
									"canonicalReference": "discord.js!ButtonInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isButton"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseInteraction#isChatInputCommand:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isChatInputCommand(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ChatInputCommandInteraction",
									"canonicalReference": "discord.js!ChatInputCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isChatInputCommand"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseInteraction#isContextMenuCommand:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isContextMenuCommand(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ContextMenuCommandInteraction",
									"canonicalReference": "discord.js!ContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isContextMenuCommand"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseInteraction#isMessageContextMenuCommand:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isMessageContextMenuCommand(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "MessageContextMenuCommandInteraction",
									"canonicalReference": "discord.js!MessageContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isMessageContextMenuCommand"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseInteraction#isRepliable:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isRepliable(): "
								},
								{
									"kind": "Content",
									"text": "this is this & "
								},
								{
									"kind": "Reference",
									"text": "InteractionResponseFields",
									"canonicalReference": "discord.js!InteractionResponseFields:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isRepliable"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseInteraction#isSelectMenu:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isSelectMenu(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuInteraction",
									"canonicalReference": "discord.js!SelectMenuInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isSelectMenu"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BaseInteraction#isUserContextMenuCommand:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isUserContextMenuCommand(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "UserContextMenuCommandInteraction",
									"canonicalReference": "discord.js!UserContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isUserContextMenuCommand"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#locale:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public locale: "
								},
								{
									"kind": "Reference",
									"text": "Locale",
									"canonicalReference": "discord-api-types!Locale:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "locale",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#member:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public member: "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIInteractionGuildMember",
									"canonicalReference": "discord-api-types!APIInteractionGuildMember:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "member",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#memberPermissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public memberPermissions: "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "memberPermissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#token:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly token: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "token",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "InteractionType",
									"canonicalReference": "discord-api-types!InteractionType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseInteraction#version:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public version: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "version",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!BaseManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export abstract class BaseManager "
						}
					],
					"releaseTag": "Public",
					"name": "BaseManager",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!BaseManager:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `BaseManager` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BaseManager#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!BaseModalData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface BaseModalData "
						}
					],
					"releaseTag": "Public",
					"name": "BaseModalData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseModalData#customId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "customId: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "customId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!BaseModalData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ComponentType",
									"canonicalReference": "discord-api-types!ComponentType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!basename:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function basename(path: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ", ext?: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "path",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						},
						{
							"parameterName": "ext",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"isOptional": true
						}
					],
					"name": "basename"
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!BitField:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class BitField<S extends "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ", N extends "
						},
						{
							"kind": "Content",
							"text": "number | bigint "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "number"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "S",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "N",
							"constraintTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"defaultTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							}
						}
					],
					"name": "BitField",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#[Symbol.iterator]:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ["
								},
								{
									"kind": "Reference",
									"text": "Symbol.iterator",
									"canonicalReference": "!SymbolConstructor#iterator"
								},
								{
									"kind": "Content",
									"text": "](): "
								},
								{
									"kind": "Reference",
									"text": "IterableIterator",
									"canonicalReference": "!IterableIterator:interface"
								},
								{
									"kind": "Content",
									"text": "<S>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "[Symbol.iterator]"
						},
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!BitField:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `BitField` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(bits?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<S, N>"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bits",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#add:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public add(...bits: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<S, N>[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "BitField",
									"canonicalReference": "discord.js!BitField:class"
								},
								{
									"kind": "Content",
									"text": "<S, N>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bits",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "add"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#any:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public any(bit: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<S, N>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "any"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BitField#bitfield:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public bitfield: "
								},
								{
									"kind": "Content",
									"text": "N"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "bitfield",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(bit: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<S, N>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!BitField.Flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Flags: "
								},
								{
									"kind": "Reference",
									"text": "EnumLike",
									"canonicalReference": "discord.js!EnumLike:type"
								},
								{
									"kind": "Content",
									"text": "<unknown, number | bigint>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#freeze:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public freeze(): "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BitField",
									"canonicalReference": "discord.js!BitField:class"
								},
								{
									"kind": "Content",
									"text": "<S, N>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "freeze"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#has:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public has(bit: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<S, N>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "has"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#missing:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public missing(bits: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<S, N>"
								},
								{
									"kind": "Content",
									"text": ", ...hasParams: "
								},
								{
									"kind": "Content",
									"text": "readonly unknown[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "S[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bits",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "hasParams",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "missing"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#remove:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public remove(...bits: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<S, N>[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "BitField",
									"canonicalReference": "discord.js!BitField:class"
								},
								{
									"kind": "Content",
									"text": "<S, N>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bits",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "remove"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField.resolve:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolve(bit?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<string, number | bigint>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number | bigint"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "resolve"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#serialize:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public serialize(...hasParams: "
								},
								{
									"kind": "Content",
									"text": "readonly unknown[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Record",
									"canonicalReference": "!Record:type"
								},
								{
									"kind": "Content",
									"text": "<S, boolean>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "hasParams",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "serialize"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#toArray:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toArray(...hasParams: "
								},
								{
									"kind": "Content",
									"text": "readonly unknown[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "S[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "hasParams",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "toArray"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "N extends number ? number : string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!BitField#valueOf:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public valueOf(): "
								},
								{
									"kind": "Content",
									"text": "N"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "valueOf"
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!BitFieldResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type BitFieldResolvable<T extends "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ", N extends "
						},
						{
							"kind": "Content",
							"text": "number | bigint"
						},
						{
							"kind": "Content",
							"text": "> =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "RecursiveReadonlyArray",
							"canonicalReference": "discord.js!RecursiveReadonlyArray:type"
						},
						{
							"kind": "Content",
							"text": "<T | N | `${bigint}` | "
						},
						{
							"kind": "Reference",
							"text": "Readonly",
							"canonicalReference": "!Readonly:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "BitField",
							"canonicalReference": "discord.js!BitField:class"
						},
						{
							"kind": "Content",
							"text": "<T, N>>>\n  | T\n  | N\n  | `${bigint}`\n  | "
						},
						{
							"kind": "Reference",
							"text": "Readonly",
							"canonicalReference": "!Readonly:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "BitField",
							"canonicalReference": "discord.js!BitField:class"
						},
						{
							"kind": "Content",
							"text": "<T, N>>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "BitFieldResolvable",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "N",
							"constraintTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 5,
						"endIndex": 16
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!BooleanCache:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type BooleanCache<T extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> = "
						},
						{
							"kind": "Content",
							"text": "T extends 'cached' ? true : false"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "BooleanCache",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!BufferResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type BufferResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Buffer",
							"canonicalReference": "!__global.Buffer:interface"
						},
						{
							"kind": "Content",
							"text": " | string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "BufferResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ButtonBuilder:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ButtonBuilder extends "
						},
						{
							"kind": "Reference",
							"text": "BuilderButtonComponent",
							"canonicalReference": "@discordjs/builders!~ButtonBuilder:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ButtonBuilder",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!ButtonBuilder:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `ButtonBuilder` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(data?: "
								},
								{
									"kind": "Reference",
									"text": "Partial",
									"canonicalReference": "!Partial:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ButtonComponentData",
									"canonicalReference": "discord.js!ButtonComponentData:type"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "Partial",
									"canonicalReference": "!Partial:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIButtonComponent",
									"canonicalReference": "discord-api-types!APIButtonComponent:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 9
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ButtonBuilder.from:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static from(other: "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIButtonComponent",
									"canonicalReference": "discord-api-types!APIButtonComponent:type"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "APIButtonComponent",
									"canonicalReference": "discord-api-types!APIButtonComponent:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "ButtonBuilder",
									"canonicalReference": "discord.js!ButtonBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "from"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ButtonBuilder#setEmoji:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public override setEmoji(emoji: "
								},
								{
									"kind": "Reference",
									"text": "ComponentEmojiResolvable",
									"canonicalReference": "discord.js!ComponentEmojiResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "emoji",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setEmoji"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ButtonComponent:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ButtonComponent extends "
						},
						{
							"kind": "Reference",
							"text": "Component",
							"canonicalReference": "discord.js!Component:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APIButtonComponent",
							"canonicalReference": "discord-api-types!APIButtonComponent:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "ButtonComponent",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ButtonComponent#customId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get customId(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "customId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ButtonComponent#disabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get disabled(): "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "disabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ButtonComponent#emoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get emoji(): "
								},
								{
									"kind": "Reference",
									"text": "APIMessageComponentEmoji",
									"canonicalReference": "discord-api-types!APIMessageComponentEmoji:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ButtonComponent#label:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get label(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "label",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ButtonComponent#style:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get style(): "
								},
								{
									"kind": "Reference",
									"text": "ButtonStyle",
									"canonicalReference": "discord-api-types!ButtonStyle:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "style",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ButtonComponent#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get url(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ButtonComponentData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ButtonComponentData = "
						},
						{
							"kind": "Reference",
							"text": "InteractionButtonComponentData",
							"canonicalReference": "discord.js!InteractionButtonComponentData:interface"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "LinkButtonComponentData",
							"canonicalReference": "discord.js!LinkButtonComponentData:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ButtonComponentData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ButtonInteraction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ButtonInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "MessageComponentInteraction",
							"canonicalReference": "discord.js!MessageComponentInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "ButtonInteraction",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ButtonInteraction#component:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get component(): "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<\n    Cached,\n    "
								},
								{
									"kind": "Reference",
									"text": "ButtonComponent",
									"canonicalReference": "discord.js!ButtonComponent:class"
								},
								{
									"kind": "Content",
									"text": ",\n    "
								},
								{
									"kind": "Reference",
									"text": "APIButtonComponent",
									"canonicalReference": "discord-api-types!APIButtonComponent:type"
								},
								{
									"kind": "Content",
									"text": ",\n    "
								},
								{
									"kind": "Reference",
									"text": "ButtonComponent",
									"canonicalReference": "discord.js!ButtonComponent:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIButtonComponent",
									"canonicalReference": "discord-api-types!APIButtonComponent:type"
								},
								{
									"kind": "Content",
									"text": ",\n    "
								},
								{
									"kind": "Reference",
									"text": "ButtonComponent",
									"canonicalReference": "discord.js!ButtonComponent:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIButtonComponent",
									"canonicalReference": "discord-api-types!APIButtonComponent:type"
								},
								{
									"kind": "Content",
									"text": "\n  >"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "component",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 15
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ButtonInteraction#componentType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public componentType: "
								},
								{
									"kind": "Reference",
									"text": "ComponentType.Button",
									"canonicalReference": "discord-api-types!ComponentType.Button:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "componentType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ButtonInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ButtonInteraction",
									"canonicalReference": "discord.js!ButtonInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inCachedGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ButtonInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ButtonInteraction",
									"canonicalReference": "discord.js!ButtonInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ButtonInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ButtonInteraction",
									"canonicalReference": "discord.js!ButtonInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inRawGuild"
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CacheConstructors:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CacheConstructors = "
						},
						{
							"kind": "Content",
							"text": "{\n  [K in keyof "
						},
						{
							"kind": "Reference",
							"text": "Caches",
							"canonicalReference": "discord.js!Caches:interface"
						},
						{
							"kind": "Content",
							"text": "]: "
						},
						{
							"kind": "Reference",
							"text": "Caches",
							"canonicalReference": "discord.js!Caches:interface"
						},
						{
							"kind": "Content",
							"text": "[K][0] & { name: K };\n}"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CacheConstructors",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!CachedManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export abstract class CachedManager<K, Holds, R> extends "
						},
						{
							"kind": "Reference",
							"text": "DataManager",
							"canonicalReference": "discord.js!DataManager:class"
						},
						{
							"kind": "Content",
							"text": "<K, Holds, R> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "K",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "Holds",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "R",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "CachedManager",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!CachedManager:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `CachedManager` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", holds: "
								},
								{
									"kind": "Reference",
									"text": "Constructable",
									"canonicalReference": "discord.js!Constructable:type"
								},
								{
									"kind": "Content",
									"text": "<Holds>"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "holds",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": false
								}
							]
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CacheFactory:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CacheFactory = "
						},
						{
							"kind": "Content",
							"text": "(\n  manager: "
						},
						{
							"kind": "Reference",
							"text": "CacheConstructors",
							"canonicalReference": "discord.js!CacheConstructors:type"
						},
						{
							"kind": "Content",
							"text": "[keyof "
						},
						{
							"kind": "Reference",
							"text": "Caches",
							"canonicalReference": "discord.js!Caches:interface"
						},
						{
							"kind": "Content",
							"text": "],\n  holds: "
						},
						{
							"kind": "Reference",
							"text": "Caches",
							"canonicalReference": "discord.js!Caches:interface"
						},
						{
							"kind": "Content",
							"text": "[typeof "
						},
						{
							"kind": "Reference",
							"text": "manager",
							"canonicalReference": "discord.js!~manager:var"
						},
						{
							"kind": "Content",
							"text": "['name']][1],\n) => typeof "
						},
						{
							"kind": "Reference",
							"text": "manager",
							"canonicalReference": "discord.js!~manager:var"
						},
						{
							"kind": "Content",
							"text": "['prototype'] extends "
						},
						{
							"kind": "Reference",
							"text": "DataManager",
							"canonicalReference": "discord.js!DataManager:class"
						},
						{
							"kind": "Content",
							"text": "<infer K, infer V, any> ? "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<K, V> : never"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CacheFactory",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 16
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!Caches:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface Caches "
						}
					],
					"releaseTag": "Public",
					"name": "Caches",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#ApplicationCommandManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ApplicationCommandManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandManager",
									"canonicalReference": "discord.js!ApplicationCommandManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ApplicationCommandManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#BaseGuildEmojiManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "BaseGuildEmojiManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "BaseGuildEmojiManager",
									"canonicalReference": "discord.js!BaseGuildEmojiManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "BaseGuildEmojiManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#GuildBanManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildBanManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildBanManager",
									"canonicalReference": "discord.js!GuildBanManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildBan",
									"canonicalReference": "discord.js!GuildBan:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "GuildBanManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#GuildEmojiManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildEmojiManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildEmojiManager",
									"canonicalReference": "discord.js!GuildEmojiManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "GuildEmojiManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#GuildInviteManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildInviteManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildInviteManager",
									"canonicalReference": "discord.js!GuildInviteManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "GuildInviteManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#GuildMemberManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildMemberManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildMemberManager",
									"canonicalReference": "discord.js!GuildMemberManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "GuildMemberManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#GuildScheduledEventManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildScheduledEventManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventManager",
									"canonicalReference": "discord.js!GuildScheduledEventManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "GuildScheduledEventManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#GuildStickerManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildStickerManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildStickerManager",
									"canonicalReference": "discord.js!GuildStickerManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "GuildStickerManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#MessageManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "MessageManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "MessageManager",
									"canonicalReference": "discord.js!MessageManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "MessageManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#PresenceManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "PresenceManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "PresenceManager",
									"canonicalReference": "discord.js!PresenceManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "Presence",
									"canonicalReference": "discord.js!Presence:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "PresenceManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#ReactionManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ReactionManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "ReactionManager",
									"canonicalReference": "discord.js!ReactionManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ReactionManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#ReactionUserManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ReactionUserManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "ReactionUserManager",
									"canonicalReference": "discord.js!ReactionUserManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ReactionUserManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#StageInstanceManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "StageInstanceManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "StageInstanceManager",
									"canonicalReference": "discord.js!StageInstanceManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "StageInstanceManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#ThreadManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ThreadManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "ThreadManager",
									"canonicalReference": "discord.js!ThreadManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "ThreadChannel",
									"canonicalReference": "discord.js!ThreadChannel:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ThreadManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#ThreadMemberManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ThreadMemberManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "ThreadMemberManager",
									"canonicalReference": "discord.js!ThreadMemberManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ThreadMemberManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#UserManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "UserManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "UserManager",
									"canonicalReference": "discord.js!UserManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "UserManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Caches#VoiceStateManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "VoiceStateManager: "
								},
								{
									"kind": "Content",
									"text": "[manager: typeof "
								},
								{
									"kind": "Reference",
									"text": "VoiceStateManager",
									"canonicalReference": "discord.js!VoiceStateManager:class"
								},
								{
									"kind": "Content",
									"text": ", holds: typeof "
								},
								{
									"kind": "Reference",
									"text": "VoiceState",
									"canonicalReference": "discord.js!VoiceState:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "VoiceStateManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CacheType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CacheType = "
						},
						{
							"kind": "Content",
							"text": "'cached' | 'raw' | undefined"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CacheType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CacheTypeReducer:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CacheTypeReducer<\n  State extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": ",\n  CachedType,\n  RawType = "
						},
						{
							"kind": "Content",
							"text": "CachedType"
						},
						{
							"kind": "Content",
							"text": ",\n  PresentType = "
						},
						{
							"kind": "Content",
							"text": "CachedType | RawType"
						},
						{
							"kind": "Content",
							"text": ",\n  Fallback = "
						},
						{
							"kind": "Content",
							"text": "PresentType | null"
						},
						{
							"kind": "Content",
							"text": ",\n> = "
						},
						{
							"kind": "Content",
							"text": "[State] extends ['cached']\n  ? CachedType\n  : [State] extends ['raw']\n  ? RawType\n  : [State] extends ['raw' | 'cached']\n  ? PresentType\n  : Fallback"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CacheTypeReducer",
					"typeParameters": [
						{
							"typeParameterName": "State",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "CachedType",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "RawType",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"typeParameterName": "PresentType",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							}
						},
						{
							"typeParameterName": "Fallback",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 9,
						"endIndex": 10
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CacheWithLimitsOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CacheWithLimitsOptions = "
						},
						{
							"kind": "Content",
							"text": "{\n  [K in keyof "
						},
						{
							"kind": "Reference",
							"text": "Caches",
							"canonicalReference": "discord.js!Caches:interface"
						},
						{
							"kind": "Content",
							"text": "]?: "
						},
						{
							"kind": "Reference",
							"text": "Caches",
							"canonicalReference": "discord.js!Caches:interface"
						},
						{
							"kind": "Content",
							"text": "[K][0]['prototype'] extends "
						},
						{
							"kind": "Reference",
							"text": "DataManager",
							"canonicalReference": "discord.js!DataManager:class"
						},
						{
							"kind": "Content",
							"text": "<infer K, infer V, any>\n    ? "
						},
						{
							"kind": "Reference",
							"text": "LimitedCollectionOptions",
							"canonicalReference": "discord.js!LimitedCollectionOptions:interface"
						},
						{
							"kind": "Content",
							"text": "<K, V> | number\n    : never;\n}"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CacheWithLimitsOptions",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 10
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!CategoryChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class CategoryChannel extends "
						},
						{
							"kind": "Reference",
							"text": "GuildChannel",
							"canonicalReference": "discord.js!GuildChannel:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "CategoryChannel",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CategoryChannel#children:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get children(): "
								},
								{
									"kind": "Reference",
									"text": "CategoryChannelChildManager",
									"canonicalReference": "discord.js!CategoryChannelChildManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "children",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CategoryChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildCategory",
									"canonicalReference": "discord-api-types!ChannelType.GuildCategory:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!CategoryChannelChildManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class CategoryChannelChildManager extends "
						},
						{
							"kind": "Reference",
							"text": "DataManager",
							"canonicalReference": "discord.js!DataManager:class"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ",\n  "
						},
						{
							"kind": "Reference",
							"text": "NonCategoryGuildBasedChannel",
							"canonicalReference": "discord.js!NonCategoryGuildBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": ",\n  "
						},
						{
							"kind": "Reference",
							"text": "GuildChannelResolvable",
							"canonicalReference": "discord.js!GuildChannelResolvable:type"
						},
						{
							"kind": "Content",
							"text": "\n> "
						}
					],
					"releaseTag": "Public",
					"name": "CategoryChannelChildManager",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CategoryChannelChildManager#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channel: "
								},
								{
									"kind": "Reference",
									"text": "CategoryChannel",
									"canonicalReference": "discord.js!CategoryChannel:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CategoryChannelChildManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create<T extends "
								},
								{
									"kind": "Reference",
									"text": "CategoryChannelType",
									"canonicalReference": "discord.js!CategoryChannelType:type"
								},
								{
									"kind": "Content",
									"text": ">(\n    options: "
								},
								{
									"kind": "Reference",
									"text": "CategoryCreateChannelOptions",
									"canonicalReference": "discord.js!CategoryCreateChannelOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { type: T }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MappedChannelCategoryTypes",
									"canonicalReference": "discord.js!MappedChannelCategoryTypes:interface"
								},
								{
									"kind": "Content",
									"text": "[T]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CategoryChannelChildManager#create:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(options: "
								},
								{
									"kind": "Reference",
									"text": "CategoryCreateChannelOptions",
									"canonicalReference": "discord.js!CategoryCreateChannelOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CategoryChannelChildManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guild(): "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CategoryChannelResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CategoryChannelResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "CategoryChannel",
							"canonicalReference": "discord.js!CategoryChannel:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CategoryChannelResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CategoryChannelType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CategoryChannelType = "
						},
						{
							"kind": "Reference",
							"text": "Exclude",
							"canonicalReference": "!Exclude:type"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "ChannelType",
							"canonicalReference": "discord-api-types!ChannelType:enum"
						},
						{
							"kind": "Content",
							"text": ",\n  | "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.DM",
							"canonicalReference": "discord-api-types!ChannelType.DM:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GroupDM",
							"canonicalReference": "discord-api-types!ChannelType.GroupDM:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildPublicThread",
							"canonicalReference": "discord-api-types!ChannelType.GuildPublicThread:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildNewsThread",
							"canonicalReference": "discord-api-types!ChannelType.GuildNewsThread:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildPrivateThread",
							"canonicalReference": "discord-api-types!ChannelType.GuildPrivateThread:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildCategory",
							"canonicalReference": "discord-api-types!ChannelType.GuildCategory:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildDirectory",
							"canonicalReference": "discord-api-types!ChannelType.GuildDirectory:member"
						},
						{
							"kind": "Content",
							"text": "\n>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CategoryChannelType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 19
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CategoryCreateChannelOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CategoryCreateChannelOptions "
						}
					],
					"releaseTag": "Public",
					"name": "CategoryCreateChannelOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#bitrate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "bitrate?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "bitrate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#nsfw:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "nsfw?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "nsfw",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#permissionOverwrites:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "permissionOverwrites?: "
								},
								{
									"kind": "Reference",
									"text": "OverwriteResolvable",
									"canonicalReference": "discord.js!OverwriteResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[] | "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "OverwriteResolvable",
									"canonicalReference": "discord.js!OverwriteResolvable:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "permissionOverwrites",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#position:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "position?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "position",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#rateLimitPerUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "rateLimitPerUser?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "rateLimitPerUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#rtcRegion:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "rtcRegion?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "rtcRegion",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#topic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "topic?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "topic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Reference",
									"text": "CategoryChannelType",
									"canonicalReference": "discord.js!CategoryChannelType:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#userLimit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "userLimit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "userLimit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions#videoQualityMode:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "videoQualityMode?: "
								},
								{
									"kind": "Reference",
									"text": "VideoQualityMode",
									"canonicalReference": "discord-api-types!VideoQualityMode:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "videoQualityMode",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!Channel:type",
					"docComment": "/**\n * A type that represents the union of all discord channel types\n */\n",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type Channel =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "CategoryChannel",
							"canonicalReference": "discord.js!CategoryChannel:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "DMChannel",
							"canonicalReference": "discord.js!DMChannel:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "PartialDMChannel",
							"canonicalReference": "discord.js!PartialDMChannel:interface"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "PartialGroupDMChannel",
							"canonicalReference": "discord.js!PartialGroupDMChannel:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "NewsChannel",
							"canonicalReference": "discord.js!NewsChannel:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "StageChannel",
							"canonicalReference": "discord.js!StageChannel:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "TextChannel",
							"canonicalReference": "discord.js!TextChannel:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "AnyThreadChannel",
							"canonicalReference": "discord.js!AnyThreadChannel:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "VoiceChannel",
							"canonicalReference": "discord.js!VoiceChannel:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "Channel",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 19
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ChannelCreationOverwrites:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ChannelCreationOverwrites "
						}
					],
					"releaseTag": "Public",
					"name": "ChannelCreationOverwrites",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelCreationOverwrites#allow:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "allow?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "allow",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelCreationOverwrites#deny:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deny?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "deny",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelCreationOverwrites#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ChannelData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ChannelData "
						}
					],
					"releaseTag": "Public",
					"name": "ChannelData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#bitrate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "bitrate?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "bitrate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#defaultAutoArchiveDuration:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "defaultAutoArchiveDuration?: "
								},
								{
									"kind": "Reference",
									"text": "ThreadAutoArchiveDuration",
									"canonicalReference": "discord-api-types!ThreadAutoArchiveDuration:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "defaultAutoArchiveDuration",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#lockPermissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "lockPermissions?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "lockPermissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#nsfw:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "nsfw?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "nsfw",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#parent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "parent?: "
								},
								{
									"kind": "Reference",
									"text": "CategoryChannelResolvable",
									"canonicalReference": "discord.js!CategoryChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "parent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#permissionOverwrites:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "permissionOverwrites?: "
								},
								{
									"kind": "Content",
									"text": "readonly "
								},
								{
									"kind": "Reference",
									"text": "OverwriteResolvable",
									"canonicalReference": "discord.js!OverwriteResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[] | "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "OverwriteResolvable",
									"canonicalReference": "discord.js!OverwriteResolvable:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "permissionOverwrites",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 10
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#position:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "position?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "position",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#rateLimitPerUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "rateLimitPerUser?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "rateLimitPerUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#rtcRegion:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "rtcRegion?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "rtcRegion",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#topic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "topic?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "topic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildText",
									"canonicalReference": "discord-api-types!ChannelType.GuildText:member"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildNews",
									"canonicalReference": "discord-api-types!ChannelType.GuildNews:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#userLimit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "userLimit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "userLimit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelData#videoQualityMode:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "videoQualityMode?: "
								},
								{
									"kind": "Reference",
									"text": "VideoQualityMode",
									"canonicalReference": "discord-api-types!VideoQualityMode:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "videoQualityMode",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ChannelEditData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ChannelEditData extends "
						},
						{
							"kind": "Reference",
							"text": "ChannelData",
							"canonicalReference": "discord.js!ChannelData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ChannelEditData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelEditData#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ChannelManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ChannelManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Channel",
							"canonicalReference": "discord.js!Channel:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "ChannelResolvable",
							"canonicalReference": "discord.js!ChannelResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "ChannelManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ChannelManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchChannelOptions",
									"canonicalReference": "discord.js!FetchChannelOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Channel",
									"canonicalReference": "discord.js!Channel:type"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ChannelMention:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ChannelMention = "
						},
						{
							"kind": "Content",
							"text": "`<#${"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": "}>`"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ChannelMention",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ChannelPermissionConstant:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ChannelPermissionConstant = "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ChannelPermissionConstant",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ChannelPosition:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ChannelPosition "
						}
					],
					"releaseTag": "Public",
					"name": "ChannelPosition",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelPosition#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel: "
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelPosition#lockPermissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "lockPermissions?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "lockPermissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelPosition#parent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "parent?: "
								},
								{
									"kind": "Reference",
									"text": "CategoryChannelResolvable",
									"canonicalReference": "discord.js!CategoryChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "parent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelPosition#position:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "position?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "position",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ChannelResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ChannelResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Channel",
							"canonicalReference": "discord.js!Channel:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ChannelResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ChannelWebhookCreateOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ChannelWebhookCreateOptions "
						}
					],
					"releaseTag": "Public",
					"name": "ChannelWebhookCreateOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelWebhookCreateOptions#avatar:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "avatar?: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "avatar",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelWebhookCreateOptions#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChannelWebhookCreateOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ChatInputApplicationCommandData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ChatInputApplicationCommandData extends "
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandData",
							"canonicalReference": "discord.js!BaseApplicationCommandData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ChatInputApplicationCommandData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChatInputApplicationCommandData#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChatInputApplicationCommandData#descriptionLocalizations:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "descriptionLocalizations?: "
								},
								{
									"kind": "Reference",
									"text": "LocalizationMap",
									"canonicalReference": "discord-api-types!LocalizationMap:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "descriptionLocalizations",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChatInputApplicationCommandData#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "options?: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionData",
									"canonicalReference": "discord.js!ApplicationCommandOptionData:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ChatInputApplicationCommandData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandType.ChatInput",
									"canonicalReference": "discord-api-types!ApplicationCommandType.ChatInput:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ChatInputCommandInteraction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ChatInputCommandInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "CommandInteraction",
							"canonicalReference": "discord.js!CommandInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "ChatInputCommandInteraction",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ChatInputCommandInteraction#commandType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandType: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandType.ChatInput",
									"canonicalReference": "discord-api-types!ApplicationCommandType.ChatInput:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ChatInputCommandInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ChatInputCommandInteraction",
									"canonicalReference": "discord.js!ChatInputCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inCachedGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ChatInputCommandInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ChatInputCommandInteraction",
									"canonicalReference": "discord.js!ChatInputCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ChatInputCommandInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ChatInputCommandInteraction",
									"canonicalReference": "discord.js!ChatInputCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inRawGuild"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ChatInputCommandInteraction#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "Omit",
									"canonicalReference": "!Omit:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOptionResolver",
									"canonicalReference": "discord.js!CommandInteractionOptionResolver:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>, 'getMessage' | 'getFocused'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ChatInputCommandInteraction#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!cleanCodeBlockContent:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function cleanCodeBlockContent(text: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "text",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "cleanCodeBlockContent"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!cleanContent:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function cleanContent(str: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ", channel: "
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannel",
							"canonicalReference": "discord.js!TextBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "str",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						},
						{
							"parameterName": "channel",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"isOptional": false
						}
					],
					"name": "cleanContent"
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Client:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Client<Ready extends "
						},
						{
							"kind": "Content",
							"text": "boolean "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "BaseClient",
							"canonicalReference": "discord.js!BaseClient:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Ready",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						}
					],
					"name": "Client",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!Client:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `Client` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(options: "
								},
								{
									"kind": "Reference",
									"text": "ClientOptions",
									"canonicalReference": "discord.js!ClientOptions:interface"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#application:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public application: "
								},
								{
									"kind": "Reference",
									"text": "If",
									"canonicalReference": "discord.js!If:type"
								},
								{
									"kind": "Content",
									"text": "<Ready, "
								},
								{
									"kind": "Reference",
									"text": "ClientApplication",
									"canonicalReference": "discord.js!ClientApplication:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "application",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#channels:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channels: "
								},
								{
									"kind": "Reference",
									"text": "ChannelManager",
									"canonicalReference": "discord.js!ChannelManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channels",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#destroy:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public destroy(): "
								},
								{
									"kind": "Content",
									"text": "void"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "destroy"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#emit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public emit<K extends "
								},
								{
									"kind": "Content",
									"text": "keyof "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">(event: "
								},
								{
									"kind": "Content",
									"text": "K"
								},
								{
									"kind": "Content",
									"text": ", ...args: "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": "[K]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "K",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "args",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "emit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#emit:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public emit<S extends "
								},
								{
									"kind": "Content",
									"text": "string | symbol"
								},
								{
									"kind": "Content",
									"text": ">(event: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<S, keyof "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ", ...args: "
								},
								{
									"kind": "Content",
									"text": "unknown[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "S",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 10,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								},
								{
									"parameterName": "args",
									"parameterTypeTokenRange": {
										"startIndex": 8,
										"endIndex": 9
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "emit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#emojis:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get emojis(): "
								},
								{
									"kind": "Reference",
									"text": "BaseGuildEmojiManager",
									"canonicalReference": "discord.js!BaseGuildEmojiManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emojis",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#fetchGuildPreview:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchGuildPreview(guild: "
								},
								{
									"kind": "Reference",
									"text": "GuildResolvable",
									"canonicalReference": "discord.js!GuildResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildPreview",
									"canonicalReference": "discord.js!GuildPreview:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "guild",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchGuildPreview"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#fetchGuildTemplate:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchGuildTemplate(template: "
								},
								{
									"kind": "Reference",
									"text": "GuildTemplateResolvable",
									"canonicalReference": "discord.js!GuildTemplateResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildTemplate",
									"canonicalReference": "discord.js!GuildTemplate:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "template",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchGuildTemplate"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#fetchGuildWidget:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchGuildWidget(guild: "
								},
								{
									"kind": "Reference",
									"text": "GuildResolvable",
									"canonicalReference": "discord.js!GuildResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Widget",
									"canonicalReference": "discord.js!Widget:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "guild",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchGuildWidget"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#fetchInvite:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchInvite(invite: "
								},
								{
									"kind": "Reference",
									"text": "InviteResolvable",
									"canonicalReference": "discord.js!InviteResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "ClientFetchInviteOptions",
									"canonicalReference": "discord.js!ClientFetchInviteOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "invite",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchInvite"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#fetchPremiumStickerPacks:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchPremiumStickerPacks(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "StickerPack",
									"canonicalReference": "discord.js!StickerPack:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchPremiumStickerPacks"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#fetchSticker:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchSticker(id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchSticker"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#fetchVoiceRegions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchVoiceRegions(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<string, "
								},
								{
									"kind": "Reference",
									"text": "VoiceRegion",
									"canonicalReference": "discord.js!VoiceRegion:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchVoiceRegions"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#fetchWebhook:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchWebhook(id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", token?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Webhook",
									"canonicalReference": "discord.js!Webhook:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "token",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchWebhook"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#generateInvite:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public generateInvite(options?: "
								},
								{
									"kind": "Reference",
									"text": "InviteGenerationOptions",
									"canonicalReference": "discord.js!InviteGenerationOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "generateInvite"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#guilds:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guilds: "
								},
								{
									"kind": "Reference",
									"text": "GuildManager",
									"canonicalReference": "discord.js!GuildManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guilds",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#isReady:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isReady(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": "<true>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isReady"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#login:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public login(token?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<string>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "token",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "login"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#off:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public off<K extends "
								},
								{
									"kind": "Content",
									"text": "keyof "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">(event: "
								},
								{
									"kind": "Content",
									"text": "K"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": "[K]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "K",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "off"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#off:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public off<S extends "
								},
								{
									"kind": "Content",
									"text": "string | symbol"
								},
								{
									"kind": "Content",
									"text": ">(\n    event: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<S, keyof "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: any[]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "S",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 8,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "off"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#on:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on<K extends "
								},
								{
									"kind": "Content",
									"text": "keyof "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">(event: "
								},
								{
									"kind": "Content",
									"text": "K"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": "[K]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "K",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#on:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on<S extends "
								},
								{
									"kind": "Content",
									"text": "string | symbol"
								},
								{
									"kind": "Content",
									"text": ">(\n    event: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<S, keyof "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: any[]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "S",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 8,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#once:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once<K extends "
								},
								{
									"kind": "Content",
									"text": "keyof "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">(event: "
								},
								{
									"kind": "Content",
									"text": "K"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": "[K]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "K",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#once:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once<S extends "
								},
								{
									"kind": "Content",
									"text": "string | symbol"
								},
								{
									"kind": "Content",
									"text": ">(\n    event: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<S, keyof "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: any[]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "S",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 8,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "ClientOptions",
									"canonicalReference": "discord.js!ClientOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#readyAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get readyAt(): "
								},
								{
									"kind": "Reference",
									"text": "If",
									"canonicalReference": "discord.js!If:type"
								},
								{
									"kind": "Content",
									"text": "<Ready, "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "readyAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#readyTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readyTimestamp: "
								},
								{
									"kind": "Reference",
									"text": "If",
									"canonicalReference": "discord.js!If:type"
								},
								{
									"kind": "Content",
									"text": "<Ready, number>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "readyTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#removeAllListeners:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public removeAllListeners<K extends "
								},
								{
									"kind": "Content",
									"text": "keyof "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">(event?: "
								},
								{
									"kind": "Content",
									"text": "K"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "K",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "removeAllListeners"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#removeAllListeners:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public removeAllListeners<S extends "
								},
								{
									"kind": "Content",
									"text": "string | symbol"
								},
								{
									"kind": "Content",
									"text": ">(event?: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<S, keyof "
								},
								{
									"kind": "Reference",
									"text": "ClientEvents",
									"canonicalReference": "discord.js!ClientEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "S",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "removeAllListeners"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#shard:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public shard: "
								},
								{
									"kind": "Reference",
									"text": "ShardClientUtil",
									"canonicalReference": "discord.js!ShardClientUtil:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shard",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#sweepers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepers: "
								},
								{
									"kind": "Reference",
									"text": "Sweepers",
									"canonicalReference": "discord.js!Sweepers:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "sweepers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Client#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#token:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public token: "
								},
								{
									"kind": "Reference",
									"text": "If",
									"canonicalReference": "discord.js!If:type"
								},
								{
									"kind": "Content",
									"text": "<Ready, string, string | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "token",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#uptime:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get uptime(): "
								},
								{
									"kind": "Reference",
									"text": "If",
									"canonicalReference": "discord.js!If:type"
								},
								{
									"kind": "Content",
									"text": "<Ready, number>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "uptime",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public user: "
								},
								{
									"kind": "Reference",
									"text": "If",
									"canonicalReference": "discord.js!If:type"
								},
								{
									"kind": "Content",
									"text": "<Ready, "
								},
								{
									"kind": "Reference",
									"text": "ClientUser",
									"canonicalReference": "discord.js!ClientUser:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#users:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public users: "
								},
								{
									"kind": "Reference",
									"text": "UserManager",
									"canonicalReference": "discord.js!UserManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "users",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#voice:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public voice: "
								},
								{
									"kind": "Reference",
									"text": "ClientVoiceManager",
									"canonicalReference": "discord.js!ClientVoiceManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "voice",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Client#ws:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ws: "
								},
								{
									"kind": "Reference",
									"text": "WebSocketManager",
									"canonicalReference": "discord.js!WebSocketManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ws",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ClientApplication:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ClientApplication extends "
						},
						{
							"kind": "Reference",
							"text": "Application",
							"canonicalReference": "discord.js!Application:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ClientApplication",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientApplication#botPublic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public botPublic: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "botPublic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientApplication#botRequireCodeGrant:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public botRequireCodeGrant: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "botRequireCodeGrant",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientApplication#commands:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commands: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandManager",
									"canonicalReference": "discord.js!ApplicationCommandManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commands",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientApplication#cover:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public cover: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "cover",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientApplication#customInstallURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public customInstallURL: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "customInstallURL",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ClientApplication#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ClientApplication",
									"canonicalReference": "discord.js!ClientApplication:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientApplication#flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public flags: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationFlagsBitField",
									"canonicalReference": "discord.js!ApplicationFlagsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientApplication#installParams:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public installParams: "
								},
								{
									"kind": "Reference",
									"text": "ClientApplicationInstallParams",
									"canonicalReference": "discord.js!ClientApplicationInstallParams:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "installParams",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientApplication#owner:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public owner: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Team",
									"canonicalReference": "discord.js!Team:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "owner",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientApplication#partial:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get partial(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "partial",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientApplication#rpcOrigins:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public rpcOrigins: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rpcOrigins",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientApplication#tags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public tags: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "tags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ClientApplicationInstallParams:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ClientApplicationInstallParams "
						}
					],
					"releaseTag": "Public",
					"name": "ClientApplicationInstallParams",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientApplicationInstallParams#permissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "permissions: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientApplicationInstallParams#scopes:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "scopes: "
								},
								{
									"kind": "Reference",
									"text": "OAuth2Scopes",
									"canonicalReference": "discord-api-types!OAuth2Scopes:enum"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "scopes",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ClientEvents:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ClientEvents "
						}
					],
					"releaseTag": "Public",
					"name": "ClientEvents",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#applicationCommandPermissionsUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "applicationCommandPermissionsUpdate: "
								},
								{
									"kind": "Content",
									"text": "[data: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissionsUpdateData",
									"canonicalReference": "discord.js!ApplicationCommandPermissionsUpdateData:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "applicationCommandPermissionsUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#cacheSweep:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "cacheSweep: "
								},
								{
									"kind": "Content",
									"text": "[message: string]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "cacheSweep",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#channelCreate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channelCreate: "
								},
								{
									"kind": "Content",
									"text": "[channel: "
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelCreate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#channelDelete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channelDelete: "
								},
								{
									"kind": "Content",
									"text": "[channel: "
								},
								{
									"kind": "Reference",
									"text": "DMChannel",
									"canonicalReference": "discord.js!DMChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelDelete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#channelPinsUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channelPinsUpdate: "
								},
								{
									"kind": "Content",
									"text": "[channel: "
								},
								{
									"kind": "Reference",
									"text": "TextBasedChannel",
									"canonicalReference": "discord.js!TextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ", date: "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelPinsUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#channelUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channelUpdate: "
								},
								{
									"kind": "Content",
									"text": "[\n    oldChannel: "
								},
								{
									"kind": "Reference",
									"text": "DMChannel",
									"canonicalReference": "discord.js!DMChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ",\n    newChannel: "
								},
								{
									"kind": "Reference",
									"text": "DMChannel",
									"canonicalReference": "discord.js!DMChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ",\n  ]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 10
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#debug:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "debug: "
								},
								{
									"kind": "Content",
									"text": "[message: string]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "debug",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#emojiCreate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "emojiCreate: "
								},
								{
									"kind": "Content",
									"text": "[emoji: "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emojiCreate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#emojiDelete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "emojiDelete: "
								},
								{
									"kind": "Content",
									"text": "[emoji: "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emojiDelete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#emojiUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "emojiUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldEmoji: "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ", newEmoji: "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emojiUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#error:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "error: "
								},
								{
									"kind": "Content",
									"text": "[error: "
								},
								{
									"kind": "Reference",
									"text": "Error",
									"canonicalReference": "!Error:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "error",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildBanAdd:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildBanAdd: "
								},
								{
									"kind": "Content",
									"text": "[ban: "
								},
								{
									"kind": "Reference",
									"text": "GuildBan",
									"canonicalReference": "discord.js!GuildBan:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildBanAdd",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildBanRemove:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildBanRemove: "
								},
								{
									"kind": "Content",
									"text": "[ban: "
								},
								{
									"kind": "Reference",
									"text": "GuildBan",
									"canonicalReference": "discord.js!GuildBan:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildBanRemove",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildCreate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildCreate: "
								},
								{
									"kind": "Content",
									"text": "[guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildCreate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildDelete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildDelete: "
								},
								{
									"kind": "Content",
									"text": "[guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildDelete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildIntegrationsUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildIntegrationsUpdate: "
								},
								{
									"kind": "Content",
									"text": "[guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildIntegrationsUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildMemberAdd:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildMemberAdd: "
								},
								{
									"kind": "Content",
									"text": "[member: "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildMemberAdd",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildMemberAvailable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildMemberAvailable: "
								},
								{
									"kind": "Content",
									"text": "[member: "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialGuildMember",
									"canonicalReference": "discord.js!PartialGuildMember:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildMemberAvailable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildMemberRemove:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildMemberRemove: "
								},
								{
									"kind": "Content",
									"text": "[member: "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialGuildMember",
									"canonicalReference": "discord.js!PartialGuildMember:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildMemberRemove",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildMembersChunk:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildMembersChunk: "
								},
								{
									"kind": "Content",
									"text": "[\n    members: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">,\n    guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ",\n    data: { count: number; index: number; nonce: string | undefined },\n  ]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildMembersChunk",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 10
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildMemberUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildMemberUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldMember: "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialGuildMember",
									"canonicalReference": "discord.js!PartialGuildMember:interface"
								},
								{
									"kind": "Content",
									"text": ", newMember: "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildMemberUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 8
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildScheduledEventCreate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildScheduledEventCreate: "
								},
								{
									"kind": "Content",
									"text": "[guildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildScheduledEventCreate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildScheduledEventDelete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildScheduledEventDelete: "
								},
								{
									"kind": "Content",
									"text": "[guildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildScheduledEventDelete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildScheduledEventUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildScheduledEventUpdate: "
								},
								{
									"kind": "Content",
									"text": "[\n    oldGuildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": " | null,\n    newGuildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": ",\n  ]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildScheduledEventUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildScheduledEventUserAdd:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildScheduledEventUserAdd: "
								},
								{
									"kind": "Content",
									"text": "[guildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": ", user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildScheduledEventUserAdd",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildScheduledEventUserRemove:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildScheduledEventUserRemove: "
								},
								{
									"kind": "Content",
									"text": "[guildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": ", user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildScheduledEventUserRemove",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildUnavailable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildUnavailable: "
								},
								{
									"kind": "Content",
									"text": "[guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildUnavailable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#guildUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldGuild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ", newGuild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#interactionCreate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "interactionCreate: "
								},
								{
									"kind": "Content",
									"text": "[interaction: "
								},
								{
									"kind": "Reference",
									"text": "Interaction",
									"canonicalReference": "discord.js!Interaction:type"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "interactionCreate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#invalidated:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "invalidated: "
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "invalidated",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#inviteCreate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "inviteCreate: "
								},
								{
									"kind": "Content",
									"text": "[invite: "
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "inviteCreate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#inviteDelete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "inviteDelete: "
								},
								{
									"kind": "Content",
									"text": "[invite: "
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "inviteDelete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#messageCreate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messageCreate: "
								},
								{
									"kind": "Content",
									"text": "[message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageCreate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#messageDelete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messageDelete: "
								},
								{
									"kind": "Content",
									"text": "[message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialMessage",
									"canonicalReference": "discord.js!PartialMessage:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageDelete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#messageDeleteBulk:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messageDeleteBulk: "
								},
								{
									"kind": "Content",
									"text": "[messages: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialMessage",
									"canonicalReference": "discord.js!PartialMessage:interface"
								},
								{
									"kind": "Content",
									"text": ">, channel: "
								},
								{
									"kind": "Reference",
									"text": "TextBasedChannel",
									"canonicalReference": "discord.js!TextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageDeleteBulk",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 12
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#messageReactionAdd:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messageReactionAdd: "
								},
								{
									"kind": "Content",
									"text": "[reaction: "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialMessageReaction",
									"canonicalReference": "discord.js!PartialMessageReaction:interface"
								},
								{
									"kind": "Content",
									"text": ", user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialUser",
									"canonicalReference": "discord.js!PartialUser:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageReactionAdd",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 10
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#messageReactionRemove:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messageReactionRemove: "
								},
								{
									"kind": "Content",
									"text": "[reaction: "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialMessageReaction",
									"canonicalReference": "discord.js!PartialMessageReaction:interface"
								},
								{
									"kind": "Content",
									"text": ", user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialUser",
									"canonicalReference": "discord.js!PartialUser:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageReactionRemove",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 10
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#messageReactionRemoveAll:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messageReactionRemoveAll: "
								},
								{
									"kind": "Content",
									"text": "[\n    message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialMessage",
									"canonicalReference": "discord.js!PartialMessage:interface"
								},
								{
									"kind": "Content",
									"text": ",\n    reactions: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<string | "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ">,\n  ]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageReactionRemoveAll",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 12
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#messageReactionRemoveEmoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messageReactionRemoveEmoji: "
								},
								{
									"kind": "Content",
									"text": "[reaction: "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialMessageReaction",
									"canonicalReference": "discord.js!PartialMessageReaction:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageReactionRemoveEmoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#messageUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messageUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldMessage: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialMessage",
									"canonicalReference": "discord.js!PartialMessage:interface"
								},
								{
									"kind": "Content",
									"text": ", newMessage: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialMessage",
									"canonicalReference": "discord.js!PartialMessage:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 10
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#presenceUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "presenceUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldPresence: "
								},
								{
									"kind": "Reference",
									"text": "Presence",
									"canonicalReference": "discord.js!Presence:class"
								},
								{
									"kind": "Content",
									"text": " | null, newPresence: "
								},
								{
									"kind": "Reference",
									"text": "Presence",
									"canonicalReference": "discord.js!Presence:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "presenceUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#ready:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ready: "
								},
								{
									"kind": "Content",
									"text": "[client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": "<true>]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ready",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#roleCreate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "roleCreate: "
								},
								{
									"kind": "Content",
									"text": "[role: "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "roleCreate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#roleDelete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "roleDelete: "
								},
								{
									"kind": "Content",
									"text": "[role: "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "roleDelete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#roleUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "roleUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldRole: "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ", newRole: "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "roleUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#shardDisconnect:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shardDisconnect: "
								},
								{
									"kind": "Content",
									"text": "[closeEvent: "
								},
								{
									"kind": "Reference",
									"text": "CloseEvent",
									"canonicalReference": "discord.js!CloseEvent:interface"
								},
								{
									"kind": "Content",
									"text": ", shardId: number]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shardDisconnect",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#shardError:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shardError: "
								},
								{
									"kind": "Content",
									"text": "[error: "
								},
								{
									"kind": "Reference",
									"text": "Error",
									"canonicalReference": "!Error:interface"
								},
								{
									"kind": "Content",
									"text": ", shardId: number]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shardError",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#shardReady:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shardReady: "
								},
								{
									"kind": "Content",
									"text": "[shardId: number, unavailableGuilds: "
								},
								{
									"kind": "Reference",
									"text": "Set",
									"canonicalReference": "!Set:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "> | undefined]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shardReady",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#shardReconnecting:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shardReconnecting: "
								},
								{
									"kind": "Content",
									"text": "[shardId: number]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shardReconnecting",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#shardResume:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shardResume: "
								},
								{
									"kind": "Content",
									"text": "[shardId: number, replayedEvents: number]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shardResume",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#stageInstanceCreate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "stageInstanceCreate: "
								},
								{
									"kind": "Content",
									"text": "[stageInstance: "
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stageInstanceCreate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#stageInstanceDelete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "stageInstanceDelete: "
								},
								{
									"kind": "Content",
									"text": "[stageInstance: "
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stageInstanceDelete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#stageInstanceUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "stageInstanceUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldStageInstance: "
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": " | null, newStageInstance: "
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stageInstanceUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#stickerCreate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "stickerCreate: "
								},
								{
									"kind": "Content",
									"text": "[sticker: "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stickerCreate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#stickerDelete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "stickerDelete: "
								},
								{
									"kind": "Content",
									"text": "[sticker: "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stickerDelete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#stickerUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "stickerUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldSticker: "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ", newSticker: "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stickerUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#threadCreate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "threadCreate: "
								},
								{
									"kind": "Content",
									"text": "[thread: "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ", newlyCreated: boolean]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threadCreate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#threadDelete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "threadDelete: "
								},
								{
									"kind": "Content",
									"text": "[thread: "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threadDelete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#threadListSync:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "threadListSync: "
								},
								{
									"kind": "Content",
									"text": "[threads: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">, guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threadListSync",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 10
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#threadMembersUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "threadMembersUpdate: "
								},
								{
									"kind": "Content",
									"text": "[\n    addedMembers: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": ">,\n    removedMembers: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialThreadMember",
									"canonicalReference": "discord.js!PartialThreadMember:interface"
								},
								{
									"kind": "Content",
									"text": ">,\n    thread: "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ",\n  ]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threadMembersUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 18
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#threadMemberUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "threadMemberUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldMember: "
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": ", newMember: "
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threadMemberUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#threadUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "threadUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldThread: "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ", newThread: "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threadUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#typingStart:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "typingStart: "
								},
								{
									"kind": "Content",
									"text": "[typing: "
								},
								{
									"kind": "Reference",
									"text": "Typing",
									"canonicalReference": "discord.js!Typing:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "typingStart",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#userUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "userUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldUser: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialUser",
									"canonicalReference": "discord.js!PartialUser:interface"
								},
								{
									"kind": "Content",
									"text": ", newUser: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "userUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 8
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#voiceStateUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "voiceStateUpdate: "
								},
								{
									"kind": "Content",
									"text": "[oldState: "
								},
								{
									"kind": "Reference",
									"text": "VoiceState",
									"canonicalReference": "discord.js!VoiceState:class"
								},
								{
									"kind": "Content",
									"text": ", newState: "
								},
								{
									"kind": "Reference",
									"text": "VoiceState",
									"canonicalReference": "discord.js!VoiceState:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "voiceStateUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#warn:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "warn: "
								},
								{
									"kind": "Content",
									"text": "[message: string]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "warn",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientEvents#webhookUpdate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "webhookUpdate: "
								},
								{
									"kind": "Content",
									"text": "[channel: "
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "NewsChannel",
									"canonicalReference": "discord.js!NewsChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "VoiceChannel",
									"canonicalReference": "discord.js!VoiceChannel:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "webhookUpdate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 8
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ClientFetchInviteOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ClientFetchInviteOptions "
						}
					],
					"releaseTag": "Public",
					"name": "ClientFetchInviteOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientFetchInviteOptions#guildScheduledEventId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildScheduledEventId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "guildScheduledEventId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ClientOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ClientOptions "
						}
					],
					"releaseTag": "Public",
					"name": "ClientOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#allowedMentions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "allowedMentions?: "
								},
								{
									"kind": "Reference",
									"text": "MessageMentionOptions",
									"canonicalReference": "discord.js!MessageMentionOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "allowedMentions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#closeTimeout:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "closeTimeout?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "closeTimeout",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#failIfNotExists:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "failIfNotExists?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "failIfNotExists",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#intents:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "intents: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GatewayIntentsString",
									"canonicalReference": "discord.js!GatewayIntentsString:type"
								},
								{
									"kind": "Content",
									"text": ", number>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "intents",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#jsonTransformer:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "jsonTransformer?: "
								},
								{
									"kind": "Content",
									"text": "(obj: unknown) => unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "jsonTransformer",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#makeCache:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "makeCache?: "
								},
								{
									"kind": "Reference",
									"text": "CacheFactory",
									"canonicalReference": "discord.js!CacheFactory:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "makeCache",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#partials:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "partials?: "
								},
								{
									"kind": "Reference",
									"text": "Partials",
									"canonicalReference": "discord.js!Partials:enum"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "partials",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#presence:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "presence?: "
								},
								{
									"kind": "Reference",
									"text": "PresenceData",
									"canonicalReference": "discord.js!PresenceData:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "presence",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#rest:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "rest?: "
								},
								{
									"kind": "Reference",
									"text": "Partial",
									"canonicalReference": "!Partial:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "RESTOptions",
									"canonicalReference": "@discordjs/rest!~RESTOptions:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "rest",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#shardCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shardCount?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "shardCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#shards:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shards?: "
								},
								{
									"kind": "Content",
									"text": "number | number[] | 'auto'"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "shards",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#sweepers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "sweepers?: "
								},
								{
									"kind": "Reference",
									"text": "SweeperOptions",
									"canonicalReference": "discord.js!SweeperOptions:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "sweepers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#waitGuildTimeout:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "waitGuildTimeout?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "waitGuildTimeout",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientOptions#ws:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ws?: "
								},
								{
									"kind": "Reference",
									"text": "WebSocketOptions",
									"canonicalReference": "discord.js!WebSocketOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "ws",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ClientPresence:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ClientPresence extends "
						},
						{
							"kind": "Reference",
							"text": "Presence",
							"canonicalReference": "discord.js!Presence:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ClientPresence",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ClientPresence#set:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public set(presence: "
								},
								{
									"kind": "Reference",
									"text": "PresenceData",
									"canonicalReference": "discord.js!PresenceData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "ClientPresence",
									"canonicalReference": "discord.js!ClientPresence:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "presence",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "set"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ClientPresenceStatus:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ClientPresenceStatus = "
						},
						{
							"kind": "Content",
							"text": "'online' | 'idle' | 'dnd'"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ClientPresenceStatus",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ClientPresenceStatusData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ClientPresenceStatusData "
						}
					],
					"releaseTag": "Public",
					"name": "ClientPresenceStatusData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientPresenceStatusData#desktop:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "desktop?: "
								},
								{
									"kind": "Reference",
									"text": "ClientPresenceStatus",
									"canonicalReference": "discord.js!ClientPresenceStatus:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "desktop",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientPresenceStatusData#mobile:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "mobile?: "
								},
								{
									"kind": "Reference",
									"text": "ClientPresenceStatus",
									"canonicalReference": "discord.js!ClientPresenceStatus:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "mobile",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientPresenceStatusData#web:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "web?: "
								},
								{
									"kind": "Reference",
									"text": "ClientPresenceStatus",
									"canonicalReference": "discord.js!ClientPresenceStatus:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "web",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ClientStatus:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ClientStatus = "
						},
						{
							"kind": "Content",
							"text": "number"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ClientStatus",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ClientUser:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ClientUser extends "
						},
						{
							"kind": "Reference",
							"text": "User",
							"canonicalReference": "discord.js!User:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ClientUser",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ClientUser#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(data: "
								},
								{
									"kind": "Reference",
									"text": "ClientUserEditData",
									"canonicalReference": "discord.js!ClientUserEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientUser#mfaEnabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public mfaEnabled: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "mfaEnabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientUser#presence:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get presence(): "
								},
								{
									"kind": "Reference",
									"text": "ClientPresence",
									"canonicalReference": "discord.js!ClientPresence:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "presence",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ClientUser#setActivity:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setActivity(options?: "
								},
								{
									"kind": "Reference",
									"text": "ActivityOptions",
									"canonicalReference": "discord.js!ActivityOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "ClientPresence",
									"canonicalReference": "discord.js!ClientPresence:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setActivity"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ClientUser#setActivity:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setActivity(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "ActivityOptions",
									"canonicalReference": "discord.js!ActivityOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "ClientPresence",
									"canonicalReference": "discord.js!ClientPresence:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setActivity"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ClientUser#setAFK:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setAFK(afk?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ", shardId?: "
								},
								{
									"kind": "Content",
									"text": "number | number[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "ClientPresence",
									"canonicalReference": "discord.js!ClientPresence:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "afk",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "shardId",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setAFK"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ClientUser#setAvatar:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setAvatar(avatar: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "avatar",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setAvatar"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ClientUser#setPresence:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setPresence(data: "
								},
								{
									"kind": "Reference",
									"text": "PresenceData",
									"canonicalReference": "discord.js!PresenceData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "ClientPresence",
									"canonicalReference": "discord.js!ClientPresence:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setPresence"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ClientUser#setStatus:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setStatus(status: "
								},
								{
									"kind": "Reference",
									"text": "PresenceStatusData",
									"canonicalReference": "discord.js!PresenceStatusData:type"
								},
								{
									"kind": "Content",
									"text": ", shardId?: "
								},
								{
									"kind": "Content",
									"text": "number | number[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "ClientPresence",
									"canonicalReference": "discord.js!ClientPresence:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "status",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "shardId",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setStatus"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ClientUser#setUsername:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setUsername(username: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "username",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setUsername"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientUser#verified:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public verified: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "verified",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ClientUserEditData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ClientUserEditData "
						}
					],
					"releaseTag": "Public",
					"name": "ClientUserEditData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientUserEditData#avatar:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "avatar?: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "avatar",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ClientUserEditData#username:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "username?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "username",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ClientVoiceManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ClientVoiceManager "
						}
					],
					"releaseTag": "Public",
					"name": "ClientVoiceManager",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientVoiceManager#adapters:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public adapters: "
								},
								{
									"kind": "Reference",
									"text": "Map",
									"canonicalReference": "!Map:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "InternalDiscordGatewayAdapterLibraryMethods",
									"canonicalReference": "discord.js!InternalDiscordGatewayAdapterLibraryMethods:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "adapters",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ClientVoiceManager#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!cloneObject:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function cloneObject(obj: "
						},
						{
							"kind": "Content",
							"text": "unknown"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "unknown"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "obj",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "cloneObject"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CloseEvent:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CloseEvent "
						}
					],
					"releaseTag": "Public",
					"name": "CloseEvent",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CloseEvent#code:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "code: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "code",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CloseEvent#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CloseEvent#target:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "target: "
								},
								{
									"kind": "Reference",
									"text": "WebSocket",
									"canonicalReference": "@types/ws!~WebSocket:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "target",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CloseEvent#wasClean:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "wasClean: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "wasClean",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CollectedInteraction:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CollectedInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "SelectMenuInteraction",
							"canonicalReference": "discord.js!SelectMenuInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached>\n  | "
						},
						{
							"kind": "Reference",
							"text": "ButtonInteraction",
							"canonicalReference": "discord.js!ButtonInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached>\n  | "
						},
						{
							"kind": "Reference",
							"text": "ModalSubmitInteraction",
							"canonicalReference": "discord.js!ModalSubmitInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CollectedInteraction",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 6,
						"endIndex": 13
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CollectedMessageInteraction:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CollectedMessageInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> = "
						},
						{
							"kind": "Reference",
							"text": "Exclude",
							"canonicalReference": "!Exclude:type"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "CollectedInteraction",
							"canonicalReference": "discord.js!CollectedInteraction:type"
						},
						{
							"kind": "Content",
							"text": "<Cached>,\n  "
						},
						{
							"kind": "Reference",
							"text": "ModalSubmitInteraction",
							"canonicalReference": "discord.js!ModalSubmitInteraction:class"
						},
						{
							"kind": "Content",
							"text": "\n>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CollectedMessageInteraction",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 6,
						"endIndex": 12
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CollectionSweepFilter:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CollectionSweepFilter<K, V> = "
						},
						{
							"kind": "Content",
							"text": "(value: V, key: K, collection: "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<K, V>) => boolean"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CollectionSweepFilter",
					"typeParameters": [
						{
							"typeParameterName": "K",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "V",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Collector:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export abstract class Collector<K, V, F extends "
						},
						{
							"kind": "Content",
							"text": "unknown[] "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "[]"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "EventEmitter",
							"canonicalReference": "!EventEmitter:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "K",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "V",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "F",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						}
					],
					"name": "Collector",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Collector#[Symbol.asyncIterator]:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ["
								},
								{
									"kind": "Reference",
									"text": "Symbol.asyncIterator",
									"canonicalReference": "!SymbolConstructor#asyncIterator"
								},
								{
									"kind": "Content",
									"text": "](): "
								},
								{
									"kind": "Reference",
									"text": "AsyncIterableIterator",
									"canonicalReference": "!AsyncIterableIterator:interface"
								},
								{
									"kind": "Content",
									"text": "<[V, ...F]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "[Symbol.asyncIterator]"
						},
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!Collector:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `Collector` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "CollectorOptions",
									"canonicalReference": "discord.js!CollectorOptions:interface"
								},
								{
									"kind": "Content",
									"text": "<[V, ...F]>"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Collector#checkEnd:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public checkEnd(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "checkEnd"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Collector#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Collector#collect:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public abstract collect(...args: "
								},
								{
									"kind": "Content",
									"text": "unknown[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "K | null | "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<K | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "args",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "collect"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Collector#collected:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public collected: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<K, V>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "collected",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Collector#dispose:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public abstract dispose(...args: "
								},
								{
									"kind": "Content",
									"text": "unknown[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "K | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "args",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "dispose"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Collector#ended:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ended: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ended",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Collector#endReason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get endReason(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "endReason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Collector#filter:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectorFilter",
									"canonicalReference": "discord.js!CollectorFilter:type"
								},
								{
									"kind": "Content",
									"text": "<[V, ...F]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "filter",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Collector#handleCollect:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public handleCollect(...args: "
								},
								{
									"kind": "Content",
									"text": "unknown[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "args",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "handleCollect"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Collector#handleDispose:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public handleDispose(...args: "
								},
								{
									"kind": "Content",
									"text": "unknown[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "args",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "handleDispose"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Collector#listener:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: any[]) => void"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "listener",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": true
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Collector#next:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get next(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<V>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "next",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Collector#on:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on<EventKey extends "
								},
								{
									"kind": "Content",
									"text": "keyof "
								},
								{
									"kind": "Reference",
									"text": "CollectorEventTypes",
									"canonicalReference": "discord.js!CollectorEventTypes:interface"
								},
								{
									"kind": "Content",
									"text": "<K, V, F>"
								},
								{
									"kind": "Content",
									"text": ">(\n    event: "
								},
								{
									"kind": "Content",
									"text": "EventKey"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: "
								},
								{
									"kind": "Reference",
									"text": "CollectorEventTypes",
									"canonicalReference": "discord.js!CollectorEventTypes:interface"
								},
								{
									"kind": "Content",
									"text": "<K, V, F>[EventKey]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "EventKey",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 13,
								"endIndex": 14
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 12
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Collector#once:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once<EventKey extends "
								},
								{
									"kind": "Content",
									"text": "keyof "
								},
								{
									"kind": "Reference",
									"text": "CollectorEventTypes",
									"canonicalReference": "discord.js!CollectorEventTypes:interface"
								},
								{
									"kind": "Content",
									"text": "<K, V, F>"
								},
								{
									"kind": "Content",
									"text": ">(\n    event: "
								},
								{
									"kind": "Content",
									"text": "EventKey"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: "
								},
								{
									"kind": "Reference",
									"text": "CollectorEventTypes",
									"canonicalReference": "discord.js!CollectorEventTypes:interface"
								},
								{
									"kind": "Content",
									"text": "<K, V, F>[EventKey]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "EventKey",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 13,
								"endIndex": 14
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 12
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Collector#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "CollectorOptions",
									"canonicalReference": "discord.js!CollectorOptions:interface"
								},
								{
									"kind": "Content",
									"text": "<[V, ...F]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Collector#resetTimer:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public resetTimer(options?: "
								},
								{
									"kind": "Reference",
									"text": "CollectorResetTimerOptions",
									"canonicalReference": "discord.js!CollectorResetTimerOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "void"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "resetTimer"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Collector#stop:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public stop(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "void"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "stop"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Collector#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						}
					],
					"extendsTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CollectorEventTypes:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CollectorEventTypes<K, V, F extends "
						},
						{
							"kind": "Content",
							"text": "unknown[] "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "[]"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "K",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "V",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "F",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						}
					],
					"name": "CollectorEventTypes",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CollectorEventTypes#collect:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "collect: "
								},
								{
									"kind": "Content",
									"text": "[V, ...F]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "collect",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CollectorEventTypes#dispose:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "dispose: "
								},
								{
									"kind": "Content",
									"text": "[V, ...F]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "dispose",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CollectorEventTypes#end:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "end: "
								},
								{
									"kind": "Content",
									"text": "[collected: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<K, V>, reason: string]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "end",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CollectorEventTypes#ignore:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ignore: "
								},
								{
									"kind": "Content",
									"text": "[V, ...F]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ignore",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CollectorFilter:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CollectorFilter<T extends "
						},
						{
							"kind": "Content",
							"text": "unknown[]"
						},
						{
							"kind": "Content",
							"text": "> = "
						},
						{
							"kind": "Content",
							"text": "(...args: T) => boolean | "
						},
						{
							"kind": "Reference",
							"text": "Promise",
							"canonicalReference": "!Promise:interface"
						},
						{
							"kind": "Content",
							"text": "<boolean>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CollectorFilter",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 3,
						"endIndex": 6
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CollectorOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CollectorOptions<T extends "
						},
						{
							"kind": "Content",
							"text": "unknown[]"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "CollectorOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CollectorOptions#dispose:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "dispose?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "dispose",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CollectorOptions#filter:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "filter?: "
								},
								{
									"kind": "Reference",
									"text": "CollectorFilter",
									"canonicalReference": "discord.js!CollectorFilter:type"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "filter",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CollectorOptions#idle:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "idle?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "idle",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CollectorOptions#time:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "time?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "time",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CollectorResetTimerOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CollectorResetTimerOptions "
						}
					],
					"releaseTag": "Public",
					"name": "CollectorResetTimerOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CollectorResetTimerOptions#idle:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "idle?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "idle",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CollectorResetTimerOptions#time:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "time?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "time",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ColorResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ColorResolvable =\n  "
						},
						{
							"kind": "Content",
							"text": "| keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "Colors",
							"canonicalReference": "discord.js!Colors:var"
						},
						{
							"kind": "Content",
							"text": "\n  | 'Random'\n  | readonly [red: number, green: number, blue: number]\n  | number\n  | "
						},
						{
							"kind": "Reference",
							"text": "HexColorString",
							"canonicalReference": "discord.js!HexColorString:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ColorResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Variable",
					"canonicalReference": "discord.js!Colors:var",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "Colors: "
						},
						{
							"kind": "Content",
							"text": "{\n  Default: 0x000000;\n  White: 0xffffff;\n  Aqua: 0x1abc9c;\n  Green: 0x57f287;\n  Blue: 0x3498db;\n  Yellow: 0xfee75c;\n  Purple: 0x9b59b6;\n  LuminousVividPink: 0xe91e63;\n  Fuchsia: 0xeb459e;\n  Gold: 0xf1c40f;\n  Orange: 0xe67e22;\n  Red: 0xed4245;\n  Grey: 0x95a5a6;\n  Navy: 0x34495e;\n  DarkAqua: 0x11806a;\n  DarkGreen: 0x1f8b4c;\n  DarkBlue: 0x206694;\n  DarkPurple: 0x71368a;\n  DarkVividPink: 0xad1457;\n  DarkGold: 0xc27c0e;\n  DarkOrange: 0xa84300;\n  DarkRed: 0x992d22;\n  DarkGrey: 0x979c9f;\n  DarkerGrey: 0x7f8c8d;\n  LightGrey: 0xbcc0c0;\n  DarkNavy: 0x2c3e50;\n  Blurple: 0x5865f2;\n  Greyple: 0x99aab5;\n  DarkButNotBlack: 0x2c2f33;\n  NotQuiteBlack: 0x23272a;\n}"
						}
					],
					"isReadonly": true,
					"releaseTag": "Public",
					"name": "Colors",
					"variableTypeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!CommandInteraction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export abstract class CommandInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "BaseInteraction",
							"canonicalReference": "discord.js!BaseInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "CommandInteraction",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#awaitModalSubmit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public awaitModalSubmit(\n    options: "
								},
								{
									"kind": "Reference",
									"text": "AwaitModalSubmitOptions",
									"canonicalReference": "discord.js!AwaitModalSubmitOptions:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalSubmitInteraction:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalSubmitInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "awaitModalSubmit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#command:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get command(): "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "<{ guild: "
								},
								{
									"kind": "Reference",
									"text": "GuildResolvable",
									"canonicalReference": "discord.js!GuildResolvable:type"
								},
								{
									"kind": "Content",
									"text": " }> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "command",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#commandGuildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandGuildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandGuildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#commandId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#commandName:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandName: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandName",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#commandType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandType: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandType",
									"canonicalReference": "discord-api-types!ApplicationCommandType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#deferred:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deferred: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deferred",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#deferReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deferReply(\n    options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferReplyOptions",
									"canonicalReference": "discord.js!InteractionDeferReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "deferReply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#deferReply:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deferReply(options?: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferReplyOptions",
									"canonicalReference": "discord.js!InteractionDeferReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "InteractionResponse",
									"canonicalReference": "discord.js!InteractionResponse:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "deferReply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#deleteReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deleteReply(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "deleteReply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#editReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public editReply(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookEditMessageOptions",
									"canonicalReference": "discord.js!WebhookEditMessageOptions:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "editReply"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#ephemeral:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ephemeral: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ephemeral",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#fetchReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchReply(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchReply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#followUp:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public followUp(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "followUp"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "CommandInteraction",
									"canonicalReference": "discord.js!CommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inCachedGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "CommandInteraction",
									"canonicalReference": "discord.js!CommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "CommandInteraction",
									"canonicalReference": "discord.js!CommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inRawGuild"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "Omit",
									"canonicalReference": "!Omit:type"
								},
								{
									"kind": "Content",
									"text": "<\n    "
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOptionResolver",
									"canonicalReference": "discord.js!CommandInteractionOptionResolver:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>,\n    | 'getMessage'\n    | 'getFocused'\n    | 'getMentionable'\n    | 'getRole'\n    | 'getAttachment'\n    | 'getNumber'\n    | 'getInteger'\n    | 'getString'\n    | 'getChannel'\n    | 'getBoolean'\n    | 'getSubcommandGroup'\n    | 'getSubcommand'\n  >"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#replied:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public replied: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "replied",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#reply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reply(options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "reply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#reply:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reply(\n    options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "InteractionResponse",
									"canonicalReference": "discord.js!InteractionResponse:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "reply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteraction#showModal:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public showModal(\n    modal:\n      "
								},
								{
									"kind": "Content",
									"text": "| "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIModalInteractionResponseCallbackData",
									"canonicalReference": "discord-api-types!APIModalInteractionResponseCallbackData:interface"
								},
								{
									"kind": "Content",
									"text": ">\n      | "
								},
								{
									"kind": "Reference",
									"text": "ModalComponentData",
									"canonicalReference": "discord.js!ModalComponentData:interface"
								},
								{
									"kind": "Content",
									"text": "\n      | "
								},
								{
									"kind": "Reference",
									"text": "APIModalInteractionResponseCallbackData",
									"canonicalReference": "discord-api-types!APIModalInteractionResponseCallbackData:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 10,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "modal",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 9
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "showModal"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "InteractionType.ApplicationCommand",
									"canonicalReference": "discord-api-types!InteractionType.ApplicationCommand:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteraction#webhook:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public webhook: "
								},
								{
									"kind": "Reference",
									"text": "InteractionWebhook",
									"canonicalReference": "discord.js!InteractionWebhook:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "webhook",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CommandInteractionOption:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CommandInteractionOption<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "CommandInteractionOption",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#attachment:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "attachment?: "
								},
								{
									"kind": "Reference",
									"text": "Attachment",
									"canonicalReference": "discord.js!Attachment:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "attachment",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#autocomplete:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "autocomplete?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "autocomplete",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel?: "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "GuildBasedChannel",
									"canonicalReference": "discord.js!GuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIInteractionDataResolvedChannel",
									"canonicalReference": "discord-api-types!APIInteractionDataResolvedChannel:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#focused:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "focused?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "focused",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#member:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "member?: "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIInteractionDataResolvedGuildMember",
									"canonicalReference": "discord-api-types!APIInteractionDataResolvedGuildMember:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "member",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "message?: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "options?: "
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#role:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "role?: "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIRole",
									"canonicalReference": "discord-api-types!APIRole:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "role",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandOptionType",
									"canonicalReference": "discord-api-types!ApplicationCommandOptionType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "user?: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionOption#value:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "value?: "
								},
								{
									"kind": "Content",
									"text": "string | number | boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "value",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!CommandInteractionOptionResolver:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class CommandInteractionOptionResolver<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "CommandInteractionOptionResolver",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#data:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly data: "
								},
								{
									"kind": "Content",
									"text": "readonly "
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "data",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#get:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "get"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#get:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "get"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getAttachment:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getAttachment(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['attachment']>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getAttachment"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getAttachment:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getAttachment(\n    name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n    required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['attachment']> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getAttachment"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getBoolean:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getBoolean(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getBoolean"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getBoolean:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getBoolean(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getBoolean"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getChannel:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getChannel(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['channel']>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getChannel"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getChannel:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getChannel(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['channel']> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getChannel"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getFocused:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getFocused(getFull: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "AutocompleteFocusedOption",
									"canonicalReference": "discord.js!AutocompleteFocusedOption:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "getFull",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getFocused"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getFocused:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getFocused(getFull?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "getFull",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getFocused"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getInteger:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getInteger(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getInteger"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getInteger:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getInteger(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getInteger"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getMember:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getMember(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['member']> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getMember"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getMentionable:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getMentionable(\n    name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n    required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['member' | 'role' | 'user']>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getMentionable"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getMentionable:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getMentionable(\n    name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n    required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['member' | 'role' | 'user']> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getMentionable"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getMessage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getMessage(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['message']>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getMessage"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getMessage:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getMessage(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['message']> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getMessage"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getNumber:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getNumber(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getNumber"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getNumber:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getNumber(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getNumber"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getRole:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getRole(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['role']>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getRole"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getRole:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getRole(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['role']> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getRole"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getString(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getString"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getString:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getString(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getString"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getSubcommand:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getSubcommand(required?: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getSubcommand"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getSubcommand:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getSubcommand(required: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getSubcommand"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getSubcommandGroup:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getSubcommandGroup(required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getSubcommandGroup"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getSubcommandGroup:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getSubcommandGroup(required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getSubcommandGroup"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getUser:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getUser(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['user']>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getUser"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#getUser:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getUser(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['user']> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "required",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getUser"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!CommandInteractionOptionResolver#resolved:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly resolved: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionResolvedData",
									"canonicalReference": "discord.js!CommandInteractionResolvedData:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "resolved",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CommandInteractionResolvedData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CommandInteractionResolvedData<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "CommandInteractionResolvedData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionResolvedData#attachments:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "attachments?: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Attachment",
									"canonicalReference": "discord.js!Attachment:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "attachments",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionResolvedData#channels:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channels?: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "Channel",
									"canonicalReference": "discord.js!Channel:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIInteractionDataResolvedChannel",
									"canonicalReference": "discord-api-types!APIInteractionDataResolvedChannel:interface"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channels",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 11
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionResolvedData#members:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "members?: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIInteractionDataResolvedGuildMember",
									"canonicalReference": "discord-api-types!APIInteractionDataResolvedGuildMember:interface"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "members",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 11
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionResolvedData#messages:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messages?: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIMessage",
									"canonicalReference": "discord-api-types!APIMessage:interface"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "messages",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 11
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionResolvedData#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "roles?: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIRole",
									"canonicalReference": "discord-api-types!APIRole:interface"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 11
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CommandInteractionResolvedData#users:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "users?: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "users",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CommandOptionChannelResolvableType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CommandOptionChannelResolvableType = "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandOptionType.Channel",
							"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Channel:member"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CommandOptionChannelResolvableType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CommandOptionChoiceResolvableType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CommandOptionChoiceResolvableType =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandOptionType.String",
							"canonicalReference": "discord-api-types!ApplicationCommandOptionType.String:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "CommandOptionNumericResolvableType",
							"canonicalReference": "discord.js!CommandOptionNumericResolvableType:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CommandOptionChoiceResolvableType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CommandOptionDataTypeResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CommandOptionDataTypeResolvable = "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandOptionType",
							"canonicalReference": "discord-api-types!ApplicationCommandOptionType:enum"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CommandOptionDataTypeResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CommandOptionNonChoiceResolvableType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CommandOptionNonChoiceResolvableType = "
						},
						{
							"kind": "Reference",
							"text": "Exclude",
							"canonicalReference": "!Exclude:type"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "CommandOptionDataTypeResolvable",
							"canonicalReference": "discord.js!CommandOptionDataTypeResolvable:type"
						},
						{
							"kind": "Content",
							"text": ",\n  "
						},
						{
							"kind": "Reference",
							"text": "CommandOptionChoiceResolvableType",
							"canonicalReference": "discord.js!CommandOptionChoiceResolvableType:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "CommandOptionSubOptionResolvableType",
							"canonicalReference": "discord.js!CommandOptionSubOptionResolvableType:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "CommandOptionChannelResolvableType",
							"canonicalReference": "discord.js!CommandOptionChannelResolvableType:type"
						},
						{
							"kind": "Content",
							"text": "\n>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CommandOptionNonChoiceResolvableType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 11
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CommandOptionNumericResolvableType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CommandOptionNumericResolvableType =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandOptionType.Number",
							"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Number:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandOptionType.Integer",
							"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Integer:member"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CommandOptionNumericResolvableType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!CommandOptionSubOptionResolvableType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type CommandOptionSubOptionResolvableType =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandOptionType.Subcommand",
							"canonicalReference": "discord-api-types!ApplicationCommandOptionType.Subcommand:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandOptionType.SubcommandGroup",
							"canonicalReference": "discord-api-types!ApplicationCommandOptionType.SubcommandGroup:member"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "CommandOptionSubOptionResolvableType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Component:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Component<T extends "
						},
						{
							"kind": "Reference",
							"text": "AnyComponent",
							"canonicalReference": "discord.js!AnyComponent:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "AnyComponent",
							"canonicalReference": "discord.js!AnyComponent:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "Component",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Component#data:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly data: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "data",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Component#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(other: "
								},
								{
									"kind": "Content",
									"text": "this | T"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Component#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "T"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Component#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get type(): "
								},
								{
									"kind": "Content",
									"text": "T['type']"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ComponentData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ComponentData =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "MessageActionRowComponentData",
							"canonicalReference": "discord.js!MessageActionRowComponentData:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ModalActionRowComponentData",
							"canonicalReference": "discord.js!ModalActionRowComponentData:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ActionRowData",
							"canonicalReference": "discord.js!ActionRowData:interface"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "MessageActionRowComponentData",
							"canonicalReference": "discord.js!MessageActionRowComponentData:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ModalActionRowComponentData",
							"canonicalReference": "discord.js!ModalActionRowComponentData:type"
						},
						{
							"kind": "Content",
							"text": ">"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ComponentData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 12
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ComponentEmojiResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ComponentEmojiResolvable = "
						},
						{
							"kind": "Reference",
							"text": "APIMessageComponentEmoji",
							"canonicalReference": "discord-api-types!APIMessageComponentEmoji:interface"
						},
						{
							"kind": "Content",
							"text": " | string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ComponentEmojiResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Variable",
					"canonicalReference": "discord.js!Constants:var",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "Constants: "
						},
						{
							"kind": "Content",
							"text": "{\n  SweeperKeys: "
						},
						{
							"kind": "Reference",
							"text": "SweeperKey",
							"canonicalReference": "discord.js!SweeperKey:type"
						},
						{
							"kind": "Content",
							"text": "[];\n  NonSystemMessageTypes: "
						},
						{
							"kind": "Reference",
							"text": "NonSystemMessageType",
							"canonicalReference": "discord.js!NonSystemMessageType:type"
						},
						{
							"kind": "Content",
							"text": "[];\n  TextBasedChannelTypes: "
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannelTypes",
							"canonicalReference": "discord.js!TextBasedChannelTypes:type"
						},
						{
							"kind": "Content",
							"text": "[];\n  ThreadChannelTypes: "
						},
						{
							"kind": "Reference",
							"text": "ThreadChannelType",
							"canonicalReference": "discord.js!ThreadChannelType:type"
						},
						{
							"kind": "Content",
							"text": "[];\n  VoiceBasedChannelTypes: "
						},
						{
							"kind": "Reference",
							"text": "VoiceBasedChannelTypes",
							"canonicalReference": "discord.js!VoiceBasedChannelTypes:type"
						},
						{
							"kind": "Content",
							"text": "[];\n}"
						}
					],
					"isReadonly": true,
					"releaseTag": "Public",
					"name": "Constants",
					"variableTypeTokenRange": {
						"startIndex": 1,
						"endIndex": 12
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!Constructable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type Constructable<T> = "
						},
						{
							"kind": "Content",
							"text": "abstract new (...args: any[]) => T"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "Constructable",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ContextMenuCommandInteraction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ContextMenuCommandInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "CommandInteraction",
							"canonicalReference": "discord.js!CommandInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "ContextMenuCommandInteraction",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ContextMenuCommandInteraction#commandType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandType: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandType.Message",
									"canonicalReference": "discord-api-types!ApplicationCommandType.Message:member"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandType.User",
									"canonicalReference": "discord-api-types!ApplicationCommandType.User:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ContextMenuCommandInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ContextMenuCommandInteraction",
									"canonicalReference": "discord.js!ContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inCachedGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ContextMenuCommandInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ContextMenuCommandInteraction",
									"canonicalReference": "discord.js!ContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ContextMenuCommandInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ContextMenuCommandInteraction",
									"canonicalReference": "discord.js!ContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inRawGuild"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ContextMenuCommandInteraction#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "Omit",
									"canonicalReference": "!Omit:type"
								},
								{
									"kind": "Content",
									"text": "<\n    "
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOptionResolver",
									"canonicalReference": "discord.js!CommandInteractionOptionResolver:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>,\n    | 'getFocused'\n    | 'getMentionable'\n    | 'getRole'\n    | 'getNumber'\n    | 'getInteger'\n    | 'getString'\n    | 'getChannel'\n    | 'getBoolean'\n    | 'getSubcommandGroup'\n    | 'getSubcommand'\n  >"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ContextMenuCommandInteraction#targetId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public targetId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "targetId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!createChannel:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function createChannel(client: "
						},
						{
							"kind": "Reference",
							"text": "Client",
							"canonicalReference": "discord.js!Client:class"
						},
						{
							"kind": "Content",
							"text": ", data: "
						},
						{
							"kind": "Reference",
							"text": "APIChannel",
							"canonicalReference": "discord-api-types!APIChannel:type"
						},
						{
							"kind": "Content",
							"text": ", options?: "
						},
						{
							"kind": "Reference",
							"text": "CreateChannelOptions",
							"canonicalReference": "discord.js!CreateChannelOptions:interface"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Reference",
							"text": "Channel",
							"canonicalReference": "discord.js!Channel:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 7,
						"endIndex": 8
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "client",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						},
						{
							"parameterName": "data",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"isOptional": false
						},
						{
							"parameterName": "options",
							"parameterTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"isOptional": true
						}
					],
					"name": "createChannel"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CreateChannelOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CreateChannelOptions "
						}
					],
					"releaseTag": "Public",
					"name": "CreateChannelOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateChannelOptions#allowFromUnknownGuild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "allowFromUnknownGuild?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "allowFromUnknownGuild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateChannelOptions#fromInteraction:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "fromInteraction?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "fromInteraction",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!createComponent:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function createComponent<T extends "
						},
						{
							"kind": "Content",
							"text": "keyof "
						},
						{
							"kind": "Reference",
							"text": "MappedComponentTypes",
							"canonicalReference": "discord.js!MappedComponentTypes:interface"
						},
						{
							"kind": "Content",
							"text": ">(\n  data: "
						},
						{
							"kind": "Reference",
							"text": "APIMessageComponent",
							"canonicalReference": "discord-api-types!APIMessageComponent:type"
						},
						{
							"kind": "Content",
							"text": " & { type: T }"
						},
						{
							"kind": "Content",
							"text": ",\n): "
						},
						{
							"kind": "Reference",
							"text": "MappedComponentTypes",
							"canonicalReference": "discord.js!MappedComponentTypes:interface"
						},
						{
							"kind": "Content",
							"text": "[T]"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 7,
						"endIndex": 9
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "data",
							"parameterTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 6
							},
							"isOptional": false
						}
					],
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "createComponent"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!createComponent:function(2)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function createComponent<C extends "
						},
						{
							"kind": "Reference",
							"text": "Component",
							"canonicalReference": "discord.js!Component:class"
						},
						{
							"kind": "Content",
							"text": ">(data: "
						},
						{
							"kind": "Content",
							"text": "C"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "C"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					},
					"releaseTag": "Public",
					"overloadIndex": 2,
					"parameters": [
						{
							"parameterName": "data",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"isOptional": false
						}
					],
					"typeParameters": [
						{
							"typeParameterName": "C",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "createComponent"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!createComponent:function(3)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function createComponent(data: "
						},
						{
							"kind": "Reference",
							"text": "APIMessageComponent",
							"canonicalReference": "discord-api-types!APIMessageComponent:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Component",
							"canonicalReference": "discord.js!Component:class"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Reference",
							"text": "Component",
							"canonicalReference": "discord.js!Component:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					},
					"releaseTag": "Public",
					"overloadIndex": 3,
					"parameters": [
						{
							"parameterName": "data",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isOptional": false
						}
					],
					"name": "createComponent"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!createComponentBuilder:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function createComponentBuilder<T extends "
						},
						{
							"kind": "Content",
							"text": "keyof "
						},
						{
							"kind": "Reference",
							"text": "MappedComponentBuilderTypes",
							"canonicalReference": "discord.js!MappedComponentBuilderTypes:interface"
						},
						{
							"kind": "Content",
							"text": ">(\n  data: "
						},
						{
							"kind": "Reference",
							"text": "APIMessageComponent",
							"canonicalReference": "discord-api-types!APIMessageComponent:type"
						},
						{
							"kind": "Content",
							"text": " & { type: T }"
						},
						{
							"kind": "Content",
							"text": ",\n): "
						},
						{
							"kind": "Reference",
							"text": "MappedComponentBuilderTypes",
							"canonicalReference": "discord.js!MappedComponentBuilderTypes:interface"
						},
						{
							"kind": "Content",
							"text": "[T]"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 7,
						"endIndex": 9
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "data",
							"parameterTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 6
							},
							"isOptional": false
						}
					],
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "createComponentBuilder"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!createComponentBuilder:function(2)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function createComponentBuilder<C extends "
						},
						{
							"kind": "Reference",
							"text": "ComponentBuilder",
							"canonicalReference": "@discordjs/builders!~ComponentBuilder:class"
						},
						{
							"kind": "Content",
							"text": ">(data: "
						},
						{
							"kind": "Content",
							"text": "C"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "C"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					},
					"releaseTag": "Public",
					"overloadIndex": 2,
					"parameters": [
						{
							"parameterName": "data",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"isOptional": false
						}
					],
					"typeParameters": [
						{
							"typeParameterName": "C",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "createComponentBuilder"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!createComponentBuilder:function(3)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function createComponentBuilder(data: "
						},
						{
							"kind": "Reference",
							"text": "APIMessageComponent",
							"canonicalReference": "discord-api-types!APIMessageComponent:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ComponentBuilder",
							"canonicalReference": "@discordjs/builders!~ComponentBuilder:class"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Reference",
							"text": "ComponentBuilder",
							"canonicalReference": "@discordjs/builders!~ComponentBuilder:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					},
					"releaseTag": "Public",
					"overloadIndex": 3,
					"parameters": [
						{
							"parameterName": "data",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isOptional": false
						}
					],
					"name": "createComponentBuilder"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CreateGuildScheduledEventInviteURLOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CreateGuildScheduledEventInviteURLOptions extends "
						},
						{
							"kind": "Reference",
							"text": "CreateInviteOptions",
							"canonicalReference": "discord.js!CreateInviteOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "CreateGuildScheduledEventInviteURLOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateGuildScheduledEventInviteURLOptions#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel?: "
								},
								{
									"kind": "Reference",
									"text": "GuildInvitableChannelResolvable",
									"canonicalReference": "discord.js!GuildInvitableChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CreateInviteOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CreateInviteOptions "
						}
					],
					"releaseTag": "Public",
					"name": "CreateInviteOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateInviteOptions#maxAge:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxAge?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxAge",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateInviteOptions#maxUses:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxUses?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxUses",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateInviteOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateInviteOptions#targetApplication:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "targetApplication?: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationResolvable",
									"canonicalReference": "discord.js!ApplicationResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "targetApplication",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateInviteOptions#targetType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "targetType?: "
								},
								{
									"kind": "Reference",
									"text": "InviteTargetType",
									"canonicalReference": "discord-api-types!InviteTargetType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "targetType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateInviteOptions#targetUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "targetUser?: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "targetUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateInviteOptions#temporary:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "temporary?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "temporary",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateInviteOptions#unique:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "unique?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "unique",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CreateRoleOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CreateRoleOptions extends "
						},
						{
							"kind": "Reference",
							"text": "RoleData",
							"canonicalReference": "discord.js!RoleData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "CreateRoleOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CreateRoleOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!CrosspostedChannel:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface CrosspostedChannel "
						}
					],
					"releaseTag": "Public",
					"name": "CrosspostedChannel",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CrosspostedChannel#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CrosspostedChannel#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CrosspostedChannel#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!CrosspostedChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType",
									"canonicalReference": "discord-api-types!ChannelType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!DataManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export abstract class DataManager<K, Holds, R> extends "
						},
						{
							"kind": "Reference",
							"text": "BaseManager",
							"canonicalReference": "discord.js!BaseManager:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "K",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "Holds",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "R",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "DataManager",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!DataManager:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `DataManager` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", holds: "
								},
								{
									"kind": "Reference",
									"text": "Constructable",
									"canonicalReference": "discord.js!Constructable:type"
								},
								{
									"kind": "Content",
									"text": "<Holds>"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "holds",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!DataManager#cache:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get cache(): "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<K, Holds>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "cache",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!DataManager#holds:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly holds: "
								},
								{
									"kind": "Reference",
									"text": "Constructable",
									"canonicalReference": "discord.js!Constructable:type"
								},
								{
									"kind": "Content",
									"text": "<Holds>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "holds",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DataManager#resolve:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public resolve(resolvable: "
								},
								{
									"kind": "Content",
									"text": "Holds"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "Holds"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "resolvable",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolve"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DataManager#resolve:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public resolve(resolvable: "
								},
								{
									"kind": "Content",
									"text": "R"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "Holds | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "resolvable",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolve"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DataManager#resolveId:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public resolveId(resolvable: "
								},
								{
									"kind": "Content",
									"text": "K | Holds"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "K"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "resolvable",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveId"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DataManager#resolveId:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public resolveId(resolvable: "
								},
								{
									"kind": "Content",
									"text": "R"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "K | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "resolvable",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveId"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DataManager#valueOf:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public valueOf(): "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<K, Holds>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "valueOf"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!DataResolver:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class DataResolver extends "
						},
						{
							"kind": "Content",
							"text": "null "
						}
					],
					"releaseTag": "Public",
					"name": "DataResolver",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DataResolver.resolveBase64:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolveBase64(data: "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveBase64"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DataResolver.resolveCode:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolveCode(data: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", regex: "
								},
								{
									"kind": "Reference",
									"text": "RegExp",
									"canonicalReference": "!RegExp:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "regex",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveCode"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DataResolver.resolveFile:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolveFile(resource: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Stream",
									"canonicalReference": "!internal.Stream:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Buffer",
									"canonicalReference": "!__global.Buffer:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "resource",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveFile"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DataResolver.resolveGuildTemplateCode:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolveGuildTemplateCode(data: "
								},
								{
									"kind": "Reference",
									"text": "GuildTemplateResolvable",
									"canonicalReference": "discord.js!GuildTemplateResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveGuildTemplateCode"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DataResolver.resolveImage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolveImage(resource: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<string | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "resource",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveImage"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DataResolver.resolveInviteCode:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolveInviteCode(data: "
								},
								{
									"kind": "Reference",
									"text": "InviteResolvable",
									"canonicalReference": "discord.js!InviteResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveInviteCode"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!DateResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type DateResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Date",
							"canonicalReference": "!Date:interface"
						},
						{
							"kind": "Content",
							"text": " | number | string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "DateResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!DirectoryChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class DirectoryChannel extends "
						},
						{
							"kind": "Reference",
							"text": "BaseChannel",
							"canonicalReference": "discord.js!BaseChannel:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "DirectoryChannel",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!DirectoryChannel#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "InviteGuild",
									"canonicalReference": "discord.js!InviteGuild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!DirectoryChannel#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!DirectoryChannel#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!DiscordjsError:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class DiscordjsError extends "
						},
						{
							"kind": "Reference",
							"text": "DiscordjsErrorMixin",
							"canonicalReference": "discord.js!DiscordjsErrorMixin"
						},
						{
							"kind": "Content",
							"text": "("
						},
						{
							"kind": "Reference",
							"text": "Error",
							"canonicalReference": "!Error:interface"
						},
						{
							"kind": "Content",
							"text": ", 'Error') "
						}
					],
					"releaseTag": "Public",
					"name": "DiscordjsError",
					"members": [],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Enum",
					"canonicalReference": "discord.js!DiscordjsErrorCodes:enum",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export enum DiscordjsErrorCodes "
						}
					],
					"releaseTag": "Public",
					"name": "DiscordjsErrorCodes",
					"members": [
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ApplicationCommandPermissionsTokenMissing:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ApplicationCommandPermissionsTokenMissing"
								}
							],
							"releaseTag": "Public",
							"name": "ApplicationCommandPermissionsTokenMissing",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.AutocompleteInteractionOptionNoFocusedOption:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "AutocompleteInteractionOptionNoFocusedOption"
								}
							],
							"releaseTag": "Public",
							"name": "AutocompleteInteractionOptionNoFocusedOption",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.BanResolveId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "BanResolveId"
								}
							],
							"releaseTag": "Public",
							"name": "BanResolveId",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.BitFieldInvalid:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "BitFieldInvalid"
								}
							],
							"releaseTag": "Public",
							"name": "BitFieldInvalid",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ButtonCustomId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ButtonCustomId"
								}
							],
							"releaseTag": "Public",
							"name": "ButtonCustomId",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ButtonLabel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ButtonLabel"
								}
							],
							"releaseTag": "Public",
							"name": "ButtonLabel",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ButtonURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ButtonURL"
								}
							],
							"releaseTag": "Public",
							"name": "ButtonURL",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ChannelNotCached:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ChannelNotCached"
								}
							],
							"releaseTag": "Public",
							"name": "ChannelNotCached",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ClientInvalidOption:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ClientInvalidOption"
								}
							],
							"releaseTag": "Public",
							"name": "ClientInvalidOption",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ClientInvalidProvidedShards:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ClientInvalidProvidedShards"
								}
							],
							"releaseTag": "Public",
							"name": "ClientInvalidProvidedShards",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ClientMissingIntents:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ClientMissingIntents"
								}
							],
							"releaseTag": "Public",
							"name": "ClientMissingIntents",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ClientNotReady:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ClientNotReady"
								}
							],
							"releaseTag": "Public",
							"name": "ClientNotReady",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ColorConvert:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ColorConvert"
								}
							],
							"releaseTag": "Public",
							"name": "ColorConvert",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ColorRange:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ColorRange"
								}
							],
							"releaseTag": "Public",
							"name": "ColorRange",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.CommandInteractionOptionEmpty:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "CommandInteractionOptionEmpty"
								}
							],
							"releaseTag": "Public",
							"name": "CommandInteractionOptionEmpty",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.CommandInteractionOptionNoSubcommand:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "CommandInteractionOptionNoSubcommand"
								}
							],
							"releaseTag": "Public",
							"name": "CommandInteractionOptionNoSubcommand",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.CommandInteractionOptionNoSubcommandGroup:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "CommandInteractionOptionNoSubcommandGroup"
								}
							],
							"releaseTag": "Public",
							"name": "CommandInteractionOptionNoSubcommandGroup",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.CommandInteractionOptionNotFound:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "CommandInteractionOptionNotFound"
								}
							],
							"releaseTag": "Public",
							"name": "CommandInteractionOptionNotFound",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.CommandInteractionOptionType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "CommandInteractionOptionType"
								}
							],
							"releaseTag": "Public",
							"name": "CommandInteractionOptionType",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.DeleteGroupDMChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "DeleteGroupDMChannel"
								}
							],
							"releaseTag": "Public",
							"name": "DeleteGroupDMChannel",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.DisallowedIntents:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "DisallowedIntents"
								}
							],
							"releaseTag": "Public",
							"name": "DisallowedIntents",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.EmojiManaged:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "EmojiManaged"
								}
							],
							"releaseTag": "Public",
							"name": "EmojiManaged",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.EmojiType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "EmojiType"
								}
							],
							"releaseTag": "Public",
							"name": "EmojiType",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.FetchBanResolveId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "FetchBanResolveId"
								}
							],
							"releaseTag": "Public",
							"name": "FetchBanResolveId",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.FetchGroupDMChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "FetchGroupDMChannel"
								}
							],
							"releaseTag": "Public",
							"name": "FetchGroupDMChannel",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.FetchOwnerId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "FetchOwnerId"
								}
							],
							"releaseTag": "Public",
							"name": "FetchOwnerId",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.FileNotFound:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "FileNotFound"
								}
							],
							"releaseTag": "Public",
							"name": "FileNotFound",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.GlobalCommandPermissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GlobalCommandPermissions"
								}
							],
							"releaseTag": "Public",
							"name": "GlobalCommandPermissions",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.GuildChannelOrphan:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildChannelOrphan"
								}
							],
							"releaseTag": "Public",
							"name": "GuildChannelOrphan",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.GuildChannelResolve:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildChannelResolve"
								}
							],
							"releaseTag": "Public",
							"name": "GuildChannelResolve",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.GuildChannelUnowned:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildChannelUnowned"
								}
							],
							"releaseTag": "Public",
							"name": "GuildChannelUnowned",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.GuildMembersTimeout:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildMembersTimeout"
								}
							],
							"releaseTag": "Public",
							"name": "GuildMembersTimeout",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.GuildOwned:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildOwned"
								}
							],
							"releaseTag": "Public",
							"name": "GuildOwned",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.GuildScheduledEventResolve:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildScheduledEventResolve"
								}
							],
							"releaseTag": "Public",
							"name": "GuildScheduledEventResolve",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.GuildUncachedEntityResolve:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildUncachedEntityResolve"
								}
							],
							"releaseTag": "Public",
							"name": "GuildUncachedEntityResolve",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.GuildUncachedMe:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildUncachedMe"
								}
							],
							"releaseTag": "Public",
							"name": "GuildUncachedMe",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.GuildVoiceChannelResolve:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildVoiceChannelResolve"
								}
							],
							"releaseTag": "Public",
							"name": "GuildVoiceChannelResolve",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ImageFormat:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ImageFormat"
								}
							],
							"releaseTag": "Public",
							"name": "ImageFormat",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ImageSize:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ImageSize"
								}
							],
							"releaseTag": "Public",
							"name": "ImageSize",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.InteractionAlreadyReplied:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InteractionAlreadyReplied"
								}
							],
							"releaseTag": "Public",
							"name": "InteractionAlreadyReplied",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.InteractionCollectorError:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InteractionCollectorError"
								}
							],
							"releaseTag": "Public",
							"name": "InteractionCollectorError",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.InteractionEphemeralReplied:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InteractionEphemeralReplied"
								}
							],
							"releaseTag": "Public",
							"name": "InteractionEphemeralReplied",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.InteractionNotReplied:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InteractionNotReplied"
								}
							],
							"releaseTag": "Public",
							"name": "InteractionNotReplied",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.InvalidElement:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InvalidElement"
								}
							],
							"releaseTag": "Public",
							"name": "InvalidElement",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.InvalidIntents:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InvalidIntents"
								}
							],
							"releaseTag": "Public",
							"name": "InvalidIntents",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.InvalidMissingScopes:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InvalidMissingScopes"
								}
							],
							"releaseTag": "Public",
							"name": "InvalidMissingScopes",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.InvalidType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InvalidType"
								}
							],
							"releaseTag": "Public",
							"name": "InvalidType",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.InviteNotFound:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InviteNotFound"
								}
							],
							"releaseTag": "Public",
							"name": "InviteNotFound",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.InviteOptionsMissingChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InviteOptionsMissingChannel"
								}
							],
							"releaseTag": "Public",
							"name": "InviteOptionsMissingChannel",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.InviteResolveCode:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InviteResolveCode"
								}
							],
							"releaseTag": "Public",
							"name": "InviteResolveCode",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ManagerDestroyed:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ManagerDestroyed"
								}
							],
							"releaseTag": "Public",
							"name": "ManagerDestroyed",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.MemberFetchNonceLength:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "MemberFetchNonceLength"
								}
							],
							"releaseTag": "Public",
							"name": "MemberFetchNonceLength",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.MessageBulkDeleteType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "MessageBulkDeleteType"
								}
							],
							"releaseTag": "Public",
							"name": "MessageBulkDeleteType",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.MessageContentType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "MessageContentType"
								}
							],
							"releaseTag": "Public",
							"name": "MessageContentType",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.MessageExistingThread:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "MessageExistingThread"
								}
							],
							"releaseTag": "Public",
							"name": "MessageExistingThread",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.MessageNonceType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "MessageNonceType"
								}
							],
							"releaseTag": "Public",
							"name": "MessageNonceType",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.MessageReferenceMissing:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "MessageReferenceMissing"
								}
							],
							"releaseTag": "Public",
							"name": "MessageReferenceMissing",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.MessageThreadParent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "MessageThreadParent"
								}
							],
							"releaseTag": "Public",
							"name": "MessageThreadParent",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.MissingManageEmojisAndStickersPermission:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "MissingManageEmojisAndStickersPermission"
								}
							],
							"releaseTag": "Public",
							"name": "MissingManageEmojisAndStickersPermission",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ModalSubmitInteractionFieldNotFound:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ModalSubmitInteractionFieldNotFound"
								}
							],
							"releaseTag": "Public",
							"name": "ModalSubmitInteractionFieldNotFound",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ModalSubmitInteractionFieldType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ModalSubmitInteractionFieldType"
								}
							],
							"releaseTag": "Public",
							"name": "ModalSubmitInteractionFieldType",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.NotGuildSticker:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "NotGuildSticker"
								}
							],
							"releaseTag": "Public",
							"name": "NotGuildSticker",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.NotImplemented:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "NotImplemented"
								}
							],
							"releaseTag": "Public",
							"name": "NotImplemented",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.PruneDaysType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "PruneDaysType"
								}
							],
							"releaseTag": "Public",
							"name": "PruneDaysType",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ReactionResolveUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ReactionResolveUser"
								}
							],
							"releaseTag": "Public",
							"name": "ReactionResolveUser",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ReqResourceType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ReqResourceType"
								}
							],
							"releaseTag": "Public",
							"name": "ReqResourceType",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.SelectMenuCustomId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "SelectMenuCustomId"
								}
							],
							"releaseTag": "Public",
							"name": "SelectMenuCustomId",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.SelectMenuPlaceholder:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "SelectMenuPlaceholder"
								}
							],
							"releaseTag": "Public",
							"name": "SelectMenuPlaceholder",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.SelectOptionDescription:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "SelectOptionDescription"
								}
							],
							"releaseTag": "Public",
							"name": "SelectOptionDescription",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.SelectOptionLabel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "SelectOptionLabel"
								}
							],
							"releaseTag": "Public",
							"name": "SelectOptionLabel",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.SelectOptionValue:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "SelectOptionValue"
								}
							],
							"releaseTag": "Public",
							"name": "SelectOptionValue",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingAlreadySpawned:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingAlreadySpawned"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingAlreadySpawned",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingInProcess:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingInProcess"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingInProcess",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingInvalid:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingInvalid"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingInvalid",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingInvalidEvalBroadcast:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingInvalidEvalBroadcast"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingInvalidEvalBroadcast",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingNoChildExists:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingNoChildExists"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingNoChildExists",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingNoShards:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingNoShards"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingNoShards",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingProcessExists:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingProcessExists"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingProcessExists",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingReadyDied:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingReadyDied"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingReadyDied",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingReadyDisconnected:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingReadyDisconnected"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingReadyDisconnected",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingReadyTimeout:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingReadyTimeout"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingReadyTimeout",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingRequired:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingRequired"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingRequired",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingShardMiscalculation:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingShardMiscalculation"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingShardMiscalculation",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingShardNotFound:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingShardNotFound"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingShardNotFound",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ShardingWorkerExists:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ShardingWorkerExists"
								}
							],
							"releaseTag": "Public",
							"name": "ShardingWorkerExists",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.SplitMaxLen:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "SplitMaxLen"
								}
							],
							"releaseTag": "Public",
							"name": "SplitMaxLen",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.StageChannelResolve:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "StageChannelResolve"
								}
							],
							"releaseTag": "Public",
							"name": "StageChannelResolve",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.SweepFilterReturn:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "SweepFilterReturn"
								}
							],
							"releaseTag": "Public",
							"name": "SweepFilterReturn",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.ThreadInvitableType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ThreadInvitableType"
								}
							],
							"releaseTag": "Public",
							"name": "ThreadInvitableType",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.TokenInvalid:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "TokenInvalid"
								}
							],
							"releaseTag": "Public",
							"name": "TokenInvalid",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.TokenMissing:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "TokenMissing"
								}
							],
							"releaseTag": "Public",
							"name": "TokenMissing",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.UserBannerNotFetched:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "UserBannerNotFetched"
								}
							],
							"releaseTag": "Public",
							"name": "UserBannerNotFetched",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.UserNoDMChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "UserNoDMChannel"
								}
							],
							"releaseTag": "Public",
							"name": "UserNoDMChannel",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.VanityURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "VanityURL"
								}
							],
							"releaseTag": "Public",
							"name": "VanityURL",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.VoiceNotStageChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "VoiceNotStageChannel"
								}
							],
							"releaseTag": "Public",
							"name": "VoiceNotStageChannel",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.VoiceStateInvalidType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "VoiceStateInvalidType"
								}
							],
							"releaseTag": "Public",
							"name": "VoiceStateInvalidType",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.VoiceStateNotOwn:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "VoiceStateNotOwn"
								}
							],
							"releaseTag": "Public",
							"name": "VoiceStateNotOwn",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.WebhookApplication:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "WebhookApplication"
								}
							],
							"releaseTag": "Public",
							"name": "WebhookApplication",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.WebhookMessage:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "WebhookMessage"
								}
							],
							"releaseTag": "Public",
							"name": "WebhookMessage",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.WebhookTokenUnavailable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "WebhookTokenUnavailable"
								}
							],
							"releaseTag": "Public",
							"name": "WebhookTokenUnavailable",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.WebhookURLInvalid:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "WebhookURLInvalid"
								}
							],
							"releaseTag": "Public",
							"name": "WebhookURLInvalid",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.WSCloseRequested:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "WSCloseRequested"
								}
							],
							"releaseTag": "Public",
							"name": "WSCloseRequested",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.WSConnectionExists:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "WSConnectionExists"
								}
							],
							"releaseTag": "Public",
							"name": "WSConnectionExists",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!DiscordjsErrorCodes.WSNotOpen:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "WSNotOpen"
								}
							],
							"releaseTag": "Public",
							"name": "WSNotOpen",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!DiscordjsErrorFields:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface DiscordjsErrorFields<Name extends "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Name",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "DiscordjsErrorFields",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!DiscordjsErrorFields#code:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "get code(): "
								},
								{
									"kind": "Content",
									"text": "keyof typeof "
								},
								{
									"kind": "Reference",
									"text": "DiscordjsErrorCodes",
									"canonicalReference": "discord.js!DiscordjsErrorCodes:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "code",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!DiscordjsErrorFields#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "readonly name: "
								},
								{
									"kind": "Content",
									"text": "`${Name} [${keyof typeof "
								},
								{
									"kind": "Reference",
									"text": "DiscordjsErrorCodes",
									"canonicalReference": "discord.js!DiscordjsErrorCodes:enum"
								},
								{
									"kind": "Content",
									"text": "}]`"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!DiscordjsErrorMixin:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function DiscordjsErrorMixin<T, N extends "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ">(\n  Base: "
						},
						{
							"kind": "Reference",
							"text": "Constructable",
							"canonicalReference": "discord.js!Constructable:type"
						},
						{
							"kind": "Content",
							"text": "<T>"
						},
						{
							"kind": "Content",
							"text": ",\n  name: "
						},
						{
							"kind": "Content",
							"text": "N"
						},
						{
							"kind": "Content",
							"text": ",\n): "
						},
						{
							"kind": "Reference",
							"text": "Constructable",
							"canonicalReference": "discord.js!Constructable:type"
						},
						{
							"kind": "Content",
							"text": "<T & "
						},
						{
							"kind": "Reference",
							"text": "DiscordjsErrorFields",
							"canonicalReference": "discord.js!DiscordjsErrorFields:interface"
						},
						{
							"kind": "Content",
							"text": "<N>>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 8,
						"endIndex": 12
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "Base",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"isOptional": false
						},
						{
							"parameterName": "name",
							"parameterTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"isOptional": false
						}
					],
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "N",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "DiscordjsErrorMixin"
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!DiscordjsRangeError:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class DiscordjsRangeError extends "
						},
						{
							"kind": "Reference",
							"text": "DiscordjsErrorMixin",
							"canonicalReference": "discord.js!DiscordjsErrorMixin"
						},
						{
							"kind": "Content",
							"text": "("
						},
						{
							"kind": "Reference",
							"text": "RangeError",
							"canonicalReference": "!RangeError:interface"
						},
						{
							"kind": "Content",
							"text": ", 'RangeError') "
						}
					],
					"releaseTag": "Public",
					"name": "DiscordjsRangeError",
					"members": [],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!DiscordjsTypeError:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class DiscordjsTypeError extends "
						},
						{
							"kind": "Reference",
							"text": "DiscordjsErrorMixin",
							"canonicalReference": "discord.js!DiscordjsErrorMixin"
						},
						{
							"kind": "Content",
							"text": "("
						},
						{
							"kind": "Reference",
							"text": "TypeError",
							"canonicalReference": "!TypeError:interface"
						},
						{
							"kind": "Content",
							"text": ", 'TypeError') "
						}
					],
					"releaseTag": "Public",
					"name": "DiscordjsTypeError",
					"members": [],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!discordSort:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function discordSort<K, V extends "
						},
						{
							"kind": "Content",
							"text": "{ rawPosition: number; id: "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " }"
						},
						{
							"kind": "Content",
							"text": ">(\n  collection: "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<K, V>"
						},
						{
							"kind": "Content",
							"text": ",\n): "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<K, V>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 8,
						"endIndex": 10
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "collection",
							"parameterTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"isOptional": false
						}
					],
					"typeParameters": [
						{
							"typeParameterName": "K",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "V",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "discordSort"
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!DMChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class DMChannel extends "
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannelMixin",
							"canonicalReference": "discord.js!TextBasedChannelMixin"
						},
						{
							"kind": "Content",
							"text": "("
						},
						{
							"kind": "Reference",
							"text": "BaseChannel",
							"canonicalReference": "discord.js!BaseChannel:class"
						},
						{
							"kind": "Content",
							"text": ", [\n  'bulkDelete',\n  'fetchWebhooks',\n  'createWebhook',\n  'setRateLimitPerUser',\n  'setNSFW',\n]) "
						}
					],
					"releaseTag": "Public",
					"name": "DMChannel",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DMChannel#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "force",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!DMChannel#recipient:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get recipient(): "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "recipient",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!DMChannel#recipientId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public recipientId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "recipientId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!DMChannel#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Reference",
									"text": "UserMention",
									"canonicalReference": "discord.js!UserMention:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!DMChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.DM",
									"canonicalReference": "discord-api-types!ChannelType.DM:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!EditApplicationCommandPermissionsMixin:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface EditApplicationCommandPermissionsMixin "
						}
					],
					"releaseTag": "Public",
					"name": "EditApplicationCommandPermissionsMixin",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EditApplicationCommandPermissionsMixin#permissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "permissions: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandPermissions",
									"canonicalReference": "discord.js!ApplicationCommandPermissions:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EditApplicationCommandPermissionsMixin#token:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "token: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "token",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!EditGuildTemplateOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface EditGuildTemplateOptions "
						}
					],
					"releaseTag": "Public",
					"name": "EditGuildTemplateOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EditGuildTemplateOptions#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EditGuildTemplateOptions#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!EditRoleOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface EditRoleOptions extends "
						},
						{
							"kind": "Reference",
							"text": "RoleData",
							"canonicalReference": "discord.js!RoleData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "EditRoleOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EditRoleOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Embed:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Embed "
						}
					],
					"releaseTag": "Public",
					"name": "Embed",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#author:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get author(): "
								},
								{
									"kind": "Reference",
									"text": "EmbedAuthorData",
									"canonicalReference": "discord.js!EmbedAuthorData:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "author",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#color:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get color(): "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "color",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#data:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly data: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIEmbed",
									"canonicalReference": "discord-api-types!APIEmbed:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "data",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get description(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Embed#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(other: "
								},
								{
									"kind": "Reference",
									"text": "Embed",
									"canonicalReference": "discord.js!Embed:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIEmbed",
									"canonicalReference": "discord-api-types!APIEmbed:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#fields:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get fields(): "
								},
								{
									"kind": "Reference",
									"text": "APIEmbedField",
									"canonicalReference": "discord-api-types!APIEmbedField:interface"
								},
								{
									"kind": "Content",
									"text": "[] | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "fields",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#footer:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get footer(): "
								},
								{
									"kind": "Reference",
									"text": "EmbedFooterData",
									"canonicalReference": "discord.js!EmbedFooterData:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "footer",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#hexColor:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get hexColor(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "hexColor",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#image:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get image(): "
								},
								{
									"kind": "Reference",
									"text": "EmbedImageData",
									"canonicalReference": "discord.js!EmbedImageData:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "image",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#length:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get length(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "length",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#provider:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get provider(): "
								},
								{
									"kind": "Reference",
									"text": "EmbedProviderData",
									"canonicalReference": "discord.js!EmbedProviderData:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "provider",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#thumbnail:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get thumbnail(): "
								},
								{
									"kind": "Reference",
									"text": "EmbedImageData",
									"canonicalReference": "discord.js!EmbedImageData:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "thumbnail",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#timestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get timestamp(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "timestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#title:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get title(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "title",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Embed#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Reference",
									"text": "APIEmbed",
									"canonicalReference": "discord-api-types!APIEmbed:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get url(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Embed#video:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get video(): "
								},
								{
									"kind": "Reference",
									"text": "EmbedVideoData",
									"canonicalReference": "discord.js!EmbedVideoData:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "video",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!EmbedAuthorData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type EmbedAuthorData = "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APIEmbedAuthor",
							"canonicalReference": "discord-api-types!APIEmbedAuthor:interface"
						},
						{
							"kind": "Content",
							"text": ", 'icon_url' | 'proxy_icon_url'> & "
						},
						{
							"kind": "Reference",
							"text": "IconData",
							"canonicalReference": "discord.js!IconData:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "EmbedAuthorData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!EmbedBuilder:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class EmbedBuilder extends "
						},
						{
							"kind": "Reference",
							"text": "BuildersEmbed",
							"canonicalReference": "@discordjs/builders!~EmbedBuilder:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "EmbedBuilder",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!EmbedBuilder:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `EmbedBuilder` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(data?: "
								},
								{
									"kind": "Reference",
									"text": "EmbedData",
									"canonicalReference": "discord.js!EmbedData:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIEmbed",
									"canonicalReference": "discord-api-types!APIEmbed:interface"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!EmbedBuilder.from:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static from(other: "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIEmbed",
									"canonicalReference": "discord-api-types!APIEmbed:interface"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "APIEmbed",
									"canonicalReference": "discord-api-types!APIEmbed:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "EmbedBuilder",
									"canonicalReference": "discord.js!EmbedBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "from"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!EmbedBuilder#setColor:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public override setColor(color: "
								},
								{
									"kind": "Reference",
									"text": "ColorResolvable",
									"canonicalReference": "discord.js!ColorResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "color",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setColor"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!EmbedData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface EmbedData "
						}
					],
					"releaseTag": "Public",
					"name": "EmbedData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#author:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "author?: "
								},
								{
									"kind": "Reference",
									"text": "EmbedAuthorData",
									"canonicalReference": "discord.js!EmbedAuthorData:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "author",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#color:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "color?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "color",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#fields:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "fields?: "
								},
								{
									"kind": "Reference",
									"text": "EmbedFieldData",
									"canonicalReference": "discord.js!EmbedFieldData:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "fields",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#footer:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "footer?: "
								},
								{
									"kind": "Reference",
									"text": "EmbedFooterData",
									"canonicalReference": "discord.js!EmbedFooterData:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "footer",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#image:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "image?: "
								},
								{
									"kind": "Reference",
									"text": "EmbedImageData",
									"canonicalReference": "discord.js!EmbedImageData:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "image",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#provider:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "provider?: "
								},
								{
									"kind": "Reference",
									"text": "EmbedProviderData",
									"canonicalReference": "discord.js!EmbedProviderData:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "provider",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#thumbnail:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "thumbnail?: "
								},
								{
									"kind": "Reference",
									"text": "EmbedImageData",
									"canonicalReference": "discord.js!EmbedImageData:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "thumbnail",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#timestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "timestamp?: "
								},
								{
									"kind": "Content",
									"text": "string | number | "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "timestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#title:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "title?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "title",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Reference",
									"text": "EmbedType",
									"canonicalReference": "discord-api-types!EmbedType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "url?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedData#video:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "video?: "
								},
								{
									"kind": "Reference",
									"text": "EmbedVideoData",
									"canonicalReference": "discord.js!EmbedVideoData:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "video",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!EmbedField:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface EmbedField "
						}
					],
					"releaseTag": "Public",
					"name": "EmbedField",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedField#inline:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "inline: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "inline",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedField#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedField#value:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "value: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "value",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!EmbedFieldData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface EmbedFieldData "
						}
					],
					"releaseTag": "Public",
					"name": "EmbedFieldData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedFieldData#inline:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "inline?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "inline",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedFieldData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedFieldData#value:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "value: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "value",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!EmbedFooterData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type EmbedFooterData = "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APIEmbedFooter",
							"canonicalReference": "discord-api-types!APIEmbedFooter:interface"
						},
						{
							"kind": "Content",
							"text": ", 'icon_url' | 'proxy_icon_url'> & "
						},
						{
							"kind": "Reference",
							"text": "IconData",
							"canonicalReference": "discord.js!IconData:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "EmbedFooterData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!EmbedImageData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface EmbedImageData extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APIEmbedImage",
							"canonicalReference": "discord-api-types!APIEmbedImage:interface"
						},
						{
							"kind": "Content",
							"text": ", 'proxy_url'> "
						}
					],
					"releaseTag": "Public",
					"name": "EmbedImageData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedImageData#proxyURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "proxyURL?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "proxyURL",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!EmbedProviderData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface EmbedProviderData "
						}
					],
					"releaseTag": "Public",
					"name": "EmbedProviderData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedProviderData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedProviderData#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "url?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!EmbedVideoData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface EmbedVideoData extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APIEmbedVideo",
							"canonicalReference": "discord-api-types!APIEmbedVideo:interface"
						},
						{
							"kind": "Content",
							"text": ", 'proxy_url'> "
						}
					],
					"releaseTag": "Public",
					"name": "EmbedVideoData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EmbedVideoData#proxyURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "proxyURL?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "proxyURL",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Emoji:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Emoji extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Emoji",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!Emoji:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `Emoji` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", emoji: "
								},
								{
									"kind": "Reference",
									"text": "RawEmojiData",
									"canonicalReference": "discord.js!RawEmojiData:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "emoji",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Emoji#animated:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public animated: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "animated",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Emoji#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Emoji#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Emoji#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Emoji#identifier:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get identifier(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "identifier",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Emoji#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Emoji#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Emoji#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Emoji#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get url(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!EmojiIdentifierResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type EmojiIdentifierResolvable = "
						},
						{
							"kind": "Content",
							"text": "string | "
						},
						{
							"kind": "Reference",
							"text": "EmojiResolvable",
							"canonicalReference": "discord.js!EmojiResolvable:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "EmojiIdentifierResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!EmojiResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type EmojiResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "GuildEmoji",
							"canonicalReference": "discord.js!GuildEmoji:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ReactionEmoji",
							"canonicalReference": "discord.js!ReactionEmoji:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "EmojiResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!EnumLike:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type EnumLike<E, V> = "
						},
						{
							"kind": "Reference",
							"text": "Record",
							"canonicalReference": "!Record:type"
						},
						{
							"kind": "Content",
							"text": "<keyof E, V>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "EnumLike",
					"typeParameters": [
						{
							"typeParameterName": "E",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "V",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ErrorEvent:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ErrorEvent "
						}
					],
					"releaseTag": "Public",
					"name": "ErrorEvent",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ErrorEvent#error:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "error: "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "error",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ErrorEvent#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "message: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ErrorEvent#target:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "target: "
								},
								{
									"kind": "Reference",
									"text": "WebSocket",
									"canonicalReference": "@types/ws!~WebSocket:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "target",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ErrorEvent#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!escapeBold:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function escapeBold(text: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "text",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "escapeBold"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!escapeCodeBlock:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function escapeCodeBlock(text: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "text",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "escapeCodeBlock"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!escapeInlineCode:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function escapeInlineCode(text: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "text",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "escapeInlineCode"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!escapeItalic:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function escapeItalic(text: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "text",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "escapeItalic"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!escapeMarkdown:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function escapeMarkdown(text: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ", options?: "
						},
						{
							"kind": "Reference",
							"text": "EscapeMarkdownOptions",
							"canonicalReference": "discord.js!EscapeMarkdownOptions:interface"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "text",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						},
						{
							"parameterName": "options",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"isOptional": true
						}
					],
					"name": "escapeMarkdown"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!EscapeMarkdownOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface EscapeMarkdownOptions "
						}
					],
					"releaseTag": "Public",
					"name": "EscapeMarkdownOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EscapeMarkdownOptions#bold:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "bold?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "bold",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EscapeMarkdownOptions#codeBlock:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "codeBlock?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "codeBlock",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EscapeMarkdownOptions#codeBlockContent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "codeBlockContent?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "codeBlockContent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EscapeMarkdownOptions#inlineCode:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "inlineCode?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "inlineCode",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EscapeMarkdownOptions#inlineCodeContent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "inlineCodeContent?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "inlineCodeContent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EscapeMarkdownOptions#italic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "italic?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "italic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EscapeMarkdownOptions#spoiler:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "spoiler?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "spoiler",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EscapeMarkdownOptions#strikethrough:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "strikethrough?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "strikethrough",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!EscapeMarkdownOptions#underline:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "underline?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "underline",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!escapeSpoiler:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function escapeSpoiler(text: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "text",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "escapeSpoiler"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!escapeStrikethrough:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function escapeStrikethrough(text: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "text",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "escapeStrikethrough"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!escapeUnderline:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function escapeUnderline(text: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "text",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "escapeUnderline"
				},
				{
					"kind": "Variable",
					"canonicalReference": "discord.js!Events:var",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "Events: "
						},
						{
							"kind": "Content",
							"text": "{\n  ApplicationCommandPermissionsUpdate: 'applicationCommandPermissionsUpdate';\n  ClientReady: 'ready';\n  GuildCreate: 'guildCreate';\n  GuildDelete: 'guildDelete';\n  GuildUpdate: 'guildUpdate';\n  GuildUnavailable: 'guildUnavailable';\n  GuildMemberAdd: 'guildMemberAdd';\n  GuildMemberRemove: 'guildMemberRemove';\n  GuildMemberUpdate: 'guildMemberUpdate';\n  GuildMemberAvailable: 'guildMemberAvailable';\n  GuildMembersChunk: 'guildMembersChunk';\n  GuildIntegrationsUpdate: 'guildIntegrationsUpdate';\n  GuildRoleCreate: 'roleCreate';\n  GuildRoleDelete: 'roleDelete';\n  InviteCreate: 'inviteCreate';\n  InviteDelete: 'inviteDelete';\n  GuildRoleUpdate: 'roleUpdate';\n  GuildEmojiCreate: 'emojiCreate';\n  GuildEmojiDelete: 'emojiDelete';\n  GuildEmojiUpdate: 'emojiUpdate';\n  GuildBanAdd: 'guildBanAdd';\n  GuildBanRemove: 'guildBanRemove';\n  ChannelCreate: 'channelCreate';\n  ChannelDelete: 'channelDelete';\n  ChannelUpdate: 'channelUpdate';\n  ChannelPinsUpdate: 'channelPinsUpdate';\n  MessageCreate: 'messageCreate';\n  MessageDelete: 'messageDelete';\n  MessageUpdate: 'messageUpdate';\n  MessageBulkDelete: 'messageDeleteBulk';\n  MessageReactionAdd: 'messageReactionAdd';\n  MessageReactionRemove: 'messageReactionRemove';\n  MessageReactionRemoveAll: 'messageReactionRemoveAll';\n  MessageReactionRemoveEmoji: 'messageReactionRemoveEmoji';\n  ThreadCreate: 'threadCreate';\n  ThreadDelete: 'threadDelete';\n  ThreadUpdate: 'threadUpdate';\n  ThreadListSync: 'threadListSync';\n  ThreadMemberUpdate: 'threadMemberUpdate';\n  ThreadMembersUpdate: 'threadMembersUpdate';\n  UserUpdate: 'userUpdate';\n  PresenceUpdate: 'presenceUpdate';\n  VoiceServerUpdate: 'voiceServerUpdate';\n  VoiceStateUpdate: 'voiceStateUpdate';\n  TypingStart: 'typingStart';\n  WebhooksUpdate: 'webhookUpdate';\n  InteractionCreate: 'interactionCreate';\n  Error: 'error';\n  Warn: 'warn';\n  Debug: 'debug';\n  CacheSweep: 'cacheSweep';\n  ShardDisconnect: 'shardDisconnect';\n  ShardError: 'shardError';\n  ShardReconnecting: 'shardReconnecting';\n  ShardReady: 'shardReady';\n  ShardResume: 'shardResume';\n  Invalidated: 'invalidated';\n  Raw: 'raw';\n  StageInstanceCreate: 'stageInstanceCreate';\n  StageInstanceUpdate: 'stageInstanceUpdate';\n  StageInstanceDelete: 'stageInstanceDelete';\n  GuildStickerCreate: 'stickerCreate';\n  GuildStickerDelete: 'stickerDelete';\n  GuildStickerUpdate: 'stickerUpdate';\n  GuildScheduledEventCreate: 'guildScheduledEventCreate';\n  GuildScheduledEventUpdate: 'guildScheduledEventUpdate';\n  GuildScheduledEventDelete: 'guildScheduledEventDelete';\n  GuildScheduledEventUserAdd: 'guildScheduledEventUserAdd';\n  GuildScheduledEventUserRemove: 'guildScheduledEventUserRemove';\n}"
						}
					],
					"isReadonly": true,
					"releaseTag": "Public",
					"name": "Events",
					"variableTypeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchApplicationCommandOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchApplicationCommandOptions extends "
						},
						{
							"kind": "Reference",
							"text": "BaseFetchOptions",
							"canonicalReference": "discord.js!BaseFetchOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "FetchApplicationCommandOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchApplicationCommandOptions#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchApplicationCommandOptions#locale:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "locale?: "
								},
								{
									"kind": "Reference",
									"text": "LocaleString",
									"canonicalReference": "discord-api-types!LocaleString:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "locale",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchApplicationCommandOptions#withLocalizations:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "withLocalizations?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "withLocalizations",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchArchivedThreadOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchArchivedThreadOptions "
						}
					],
					"releaseTag": "Public",
					"name": "FetchArchivedThreadOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchArchivedThreadOptions#before:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "before?: "
								},
								{
									"kind": "Reference",
									"text": "ThreadChannelResolvable",
									"canonicalReference": "discord.js!ThreadChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "DateResolvable",
									"canonicalReference": "discord.js!DateResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "before",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchArchivedThreadOptions#fetchAll:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "fetchAll?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "fetchAll",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchArchivedThreadOptions#limit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "limit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "limit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchArchivedThreadOptions#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Content",
									"text": "'public' | 'private'"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchBanOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchBanOptions extends "
						},
						{
							"kind": "Reference",
							"text": "BaseFetchOptions",
							"canonicalReference": "discord.js!BaseFetchOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "FetchBanOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchBanOptions#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchBansOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchBansOptions "
						}
					],
					"releaseTag": "Public",
					"name": "FetchBansOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchBansOptions#after:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "after?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "after",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchBansOptions#before:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "before?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "before",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchBansOptions#cache:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "cache",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchBansOptions#limit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "limit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "limit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchChannelOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchChannelOptions extends "
						},
						{
							"kind": "Reference",
							"text": "BaseFetchOptions",
							"canonicalReference": "discord.js!BaseFetchOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "FetchChannelOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchChannelOptions#allowUnknownGuild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "allowUnknownGuild?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "allowUnknownGuild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchedThreads:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchedThreads "
						}
					],
					"releaseTag": "Public",
					"name": "FetchedThreads",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchedThreads#hasMore:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "hasMore?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "hasMore",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchedThreads#threads:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "threads: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threads",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!FetchGuildApplicationCommandFetchOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type FetchGuildApplicationCommandFetchOptions = "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "FetchApplicationCommandOptions",
							"canonicalReference": "discord.js!FetchApplicationCommandOptions:interface"
						},
						{
							"kind": "Content",
							"text": ", 'guildId'>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "FetchGuildApplicationCommandFetchOptions",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchGuildOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchGuildOptions extends "
						},
						{
							"kind": "Reference",
							"text": "BaseFetchOptions",
							"canonicalReference": "discord.js!BaseFetchOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "FetchGuildOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchGuildOptions#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guild: "
								},
								{
									"kind": "Reference",
									"text": "GuildResolvable",
									"canonicalReference": "discord.js!GuildResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchGuildOptions#withCounts:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "withCounts?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "withCounts",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchGuildScheduledEventOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchGuildScheduledEventOptions extends "
						},
						{
							"kind": "Reference",
							"text": "BaseFetchOptions",
							"canonicalReference": "discord.js!BaseFetchOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "FetchGuildScheduledEventOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchGuildScheduledEventOptions#guildScheduledEvent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventResolvable",
									"canonicalReference": "discord.js!GuildScheduledEventResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildScheduledEvent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchGuildScheduledEventOptions#withUserCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "withUserCount?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "withUserCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchGuildScheduledEventsOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchGuildScheduledEventsOptions "
						}
					],
					"releaseTag": "Public",
					"name": "FetchGuildScheduledEventsOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchGuildScheduledEventsOptions#cache:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "cache",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchGuildScheduledEventsOptions#withUserCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "withUserCount?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "withUserCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchGuildScheduledEventSubscribersOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchGuildScheduledEventSubscribersOptions "
						}
					],
					"releaseTag": "Public",
					"name": "FetchGuildScheduledEventSubscribersOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchGuildScheduledEventSubscribersOptions#limit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "limit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "limit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchGuildScheduledEventSubscribersOptions#withMember:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "withMember?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "withMember",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchGuildsOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchGuildsOptions "
						}
					],
					"releaseTag": "Public",
					"name": "FetchGuildsOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchGuildsOptions#after:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "after?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "after",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchGuildsOptions#before:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "before?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "before",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchGuildsOptions#limit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "limit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "limit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchMemberOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchMemberOptions extends "
						},
						{
							"kind": "Reference",
							"text": "BaseFetchOptions",
							"canonicalReference": "discord.js!BaseFetchOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "FetchMemberOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMemberOptions#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchMembersOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchMembersOptions "
						}
					],
					"releaseTag": "Public",
					"name": "FetchMembersOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMembersOptions#force:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "force",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMembersOptions#limit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "limit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "limit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMembersOptions#nonce:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "nonce?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "nonce",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMembersOptions#query:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "query?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "query",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMembersOptions#time:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "time?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "time",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMembersOptions#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "user?: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMembersOptions#withPresences:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "withPresences?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "withPresences",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchMessageOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchMessageOptions extends "
						},
						{
							"kind": "Reference",
							"text": "BaseFetchOptions",
							"canonicalReference": "discord.js!BaseFetchOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "FetchMessageOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMessageOptions#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "message: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchMessagesOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchMessagesOptions "
						}
					],
					"releaseTag": "Public",
					"name": "FetchMessagesOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMessagesOptions#after:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "after?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "after",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMessagesOptions#around:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "around?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "around",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMessagesOptions#before:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "before?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "before",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMessagesOptions#cache:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "cache",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchMessagesOptions#limit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "limit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "limit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchReactionUsersOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchReactionUsersOptions "
						}
					],
					"releaseTag": "Public",
					"name": "FetchReactionUsersOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchReactionUsersOptions#after:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "after?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "after",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchReactionUsersOptions#limit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "limit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "limit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!fetchRecommendedShards:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function fetchRecommendedShards(token: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ", options?: "
						},
						{
							"kind": "Reference",
							"text": "FetchRecommendedShardsOptions",
							"canonicalReference": "discord.js!FetchRecommendedShardsOptions:interface"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Reference",
							"text": "Promise",
							"canonicalReference": "!Promise:interface"
						},
						{
							"kind": "Content",
							"text": "<number>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 5,
						"endIndex": 7
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "token",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						},
						{
							"parameterName": "options",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"isOptional": true
						}
					],
					"name": "fetchRecommendedShards"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchRecommendedShardsOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchRecommendedShardsOptions "
						}
					],
					"releaseTag": "Public",
					"name": "FetchRecommendedShardsOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchRecommendedShardsOptions#guildsPerShard:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildsPerShard?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "guildsPerShard",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchRecommendedShardsOptions#multipleOf:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "multipleOf?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "multipleOf",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchThreadMemberOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchThreadMemberOptions extends "
						},
						{
							"kind": "Reference",
							"text": "BaseFetchOptions",
							"canonicalReference": "discord.js!BaseFetchOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "FetchThreadMemberOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchThreadMemberOptions#member:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "member: "
								},
								{
									"kind": "Reference",
									"text": "ThreadMemberResolvable",
									"canonicalReference": "discord.js!ThreadMemberResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "member",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchThreadMembersOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchThreadMembersOptions "
						}
					],
					"releaseTag": "Public",
					"name": "FetchThreadMembersOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchThreadMembersOptions#cache:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "cache",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!FetchThreadsOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface FetchThreadsOptions "
						}
					],
					"releaseTag": "Public",
					"name": "FetchThreadsOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchThreadsOptions#active:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "active?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "active",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!FetchThreadsOptions#archived:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "archived?: "
								},
								{
									"kind": "Reference",
									"text": "FetchArchivedThreadOptions",
									"canonicalReference": "discord.js!FetchArchivedThreadOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "archived",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!flatten:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function flatten(obj: "
						},
						{
							"kind": "Content",
							"text": "unknown"
						},
						{
							"kind": "Content",
							"text": ", ...props: "
						},
						{
							"kind": "Reference",
							"text": "Record",
							"canonicalReference": "!Record:type"
						},
						{
							"kind": "Content",
							"text": "<string, boolean | string>[]"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "unknown"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "obj",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						},
						{
							"parameterName": "props",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"isOptional": false
						}
					],
					"name": "flatten"
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Formatters:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Formatters extends "
						},
						{
							"kind": "Content",
							"text": "null "
						}
					],
					"releaseTag": "Public",
					"name": "Formatters",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.blockQuote:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static blockQuote: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "blockQuote",
									"canonicalReference": "@discordjs/builders!~blockQuote:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "blockQuote",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.bold:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static bold: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "bold",
									"canonicalReference": "@discordjs/builders!~bold:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "bold",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.channelMention:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static channelMention: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "channelMention",
									"canonicalReference": "@discordjs/builders!~channelMention:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelMention",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.codeBlock:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static codeBlock: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "codeBlock",
									"canonicalReference": "@discordjs/builders!~codeBlock:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "codeBlock",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.formatEmoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static formatEmoji: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "formatEmoji",
									"canonicalReference": "@discordjs/builders!~formatEmoji:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "formatEmoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.hideLinkEmbed:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static hideLinkEmbed: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "hideLinkEmbed",
									"canonicalReference": "@discordjs/builders!~hideLinkEmbed:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "hideLinkEmbed",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.hyperlink:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static hyperlink: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "hyperlink",
									"canonicalReference": "@discordjs/builders!~hyperlink:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "hyperlink",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.inlineCode:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static inlineCode: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "inlineCode",
									"canonicalReference": "@discordjs/builders!~inlineCode:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "inlineCode",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.italic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static italic: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "italic",
									"canonicalReference": "@discordjs/builders!~italic:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "italic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.quote:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static quote: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "quote",
									"canonicalReference": "@discordjs/builders!~quote:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "quote",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.roleMention:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static roleMention: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "roleMention",
									"canonicalReference": "@discordjs/builders!~roleMention:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "roleMention",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.spoiler:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static spoiler: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "spoiler",
									"canonicalReference": "@discordjs/builders!~spoiler:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "spoiler",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.strikethrough:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static strikethrough: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "strikethrough",
									"canonicalReference": "@discordjs/builders!~strikethrough:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "strikethrough",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.time:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static time: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "time",
									"canonicalReference": "@discordjs/builders!~time:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "time",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.TimestampStyles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static TimestampStyles: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "TimestampStyles",
									"canonicalReference": "@discordjs/builders!~TimestampStyles:var"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "TimestampStyles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.TimestampStylesString:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static TimestampStylesString: "
								},
								{
									"kind": "Reference",
									"text": "TimestampStylesString",
									"canonicalReference": "@discordjs/builders!~TimestampStylesString:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "TimestampStylesString",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.underscore:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static underscore: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "underscore",
									"canonicalReference": "@discordjs/builders!~underscore:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "underscore",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Formatters.userMention:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static userMention: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "userMention",
									"canonicalReference": "@discordjs/builders!~userMention:function"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "userMention",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GatewayIntentsString:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GatewayIntentsString = "
						},
						{
							"kind": "Content",
							"text": "keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "GatewayIntentBits",
							"canonicalReference": "discord-api-types!GatewayIntentBits:enum"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GatewayIntentsString",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GlobalSweepFilter:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GlobalSweepFilter<K, V> = "
						},
						{
							"kind": "Content",
							"text": "() => ((value: V, key: K, collection: "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<K, V>) => boolean) | null"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GlobalSweepFilter",
					"typeParameters": [
						{
							"typeParameterName": "K",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "V",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Guild:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Guild extends "
						},
						{
							"kind": "Reference",
							"text": "AnonymousGuild",
							"canonicalReference": "discord.js!AnonymousGuild:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Guild",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#afkChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get afkChannel(): "
								},
								{
									"kind": "Reference",
									"text": "VoiceChannel",
									"canonicalReference": "discord.js!VoiceChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "afkChannel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#afkChannelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public afkChannelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "afkChannelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#afkTimeout:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public afkTimeout: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "afkTimeout",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#applicationId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public applicationId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "applicationId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#approximateMemberCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public approximateMemberCount: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "approximateMemberCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#approximatePresenceCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public approximatePresenceCount: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "approximatePresenceCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#available:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public available: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "available",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#bans:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public bans: "
								},
								{
									"kind": "Reference",
									"text": "GuildBanManager",
									"canonicalReference": "discord.js!GuildBanManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "bans",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#channels:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channels: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelManager",
									"canonicalReference": "discord.js!GuildChannelManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channels",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#commands:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commands: "
								},
								{
									"kind": "Reference",
									"text": "GuildApplicationCommandManager",
									"canonicalReference": "discord.js!GuildApplicationCommandManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commands",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#createTemplate:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createTemplate(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", description?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildTemplate",
									"canonicalReference": "discord.js!GuildTemplate:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "description",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "createTemplate"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#defaultMessageNotifications:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public defaultMessageNotifications: "
								},
								{
									"kind": "Reference",
									"text": "GuildDefaultMessageNotifications",
									"canonicalReference": "discord-api-types!GuildDefaultMessageNotifications:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "defaultMessageNotifications",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#discoverySplash:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public discoverySplash: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "discoverySplash",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#discoverySplashURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public discoverySplashURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "discoverySplashURL"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(data: "
								},
								{
									"kind": "Reference",
									"text": "GuildEditData",
									"canonicalReference": "discord.js!GuildEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#editWelcomeScreen:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public editWelcomeScreen(data: "
								},
								{
									"kind": "Reference",
									"text": "WelcomeScreenEditData",
									"canonicalReference": "discord.js!WelcomeScreenEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "WelcomeScreen",
									"canonicalReference": "discord.js!WelcomeScreen:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "editWelcomeScreen"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#emojis:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public emojis: "
								},
								{
									"kind": "Reference",
									"text": "GuildEmojiManager",
									"canonicalReference": "discord.js!GuildEmojiManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emojis",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "guild",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#explicitContentFilter:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public explicitContentFilter: "
								},
								{
									"kind": "Reference",
									"text": "GuildExplicitContentFilter",
									"canonicalReference": "discord-api-types!GuildExplicitContentFilter:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "explicitContentFilter",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#fetchAuditLogs:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchAuditLogs<T extends "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsResolvable",
									"canonicalReference": "discord.js!GuildAuditLogsResolvable:type"
								},
								{
									"kind": "Content",
									"text": " "
								},
								{
									"kind": "Content",
									"text": "= "
								},
								{
									"kind": "Content",
									"text": "null"
								},
								{
									"kind": "Content",
									"text": ">(\n    options?: "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsFetchOptions",
									"canonicalReference": "discord.js!GuildAuditLogsFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogs",
									"canonicalReference": "discord.js!GuildAuditLogs:class"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 8
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchAuditLogs"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#fetchIntegrations:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchIntegrations(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | string, "
								},
								{
									"kind": "Reference",
									"text": "Integration",
									"canonicalReference": "discord.js!Integration:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchIntegrations"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#fetchMe:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchMe(options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchMe"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#fetchOwner:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchOwner(options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchOwner"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#fetchPreview:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchPreview(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildPreview",
									"canonicalReference": "discord.js!GuildPreview:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchPreview"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#fetchTemplates:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchTemplates(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildTemplate",
									"canonicalReference": "discord.js!GuildTemplate:class"
								},
								{
									"kind": "Content",
									"text": "['code'], "
								},
								{
									"kind": "Reference",
									"text": "GuildTemplate",
									"canonicalReference": "discord.js!GuildTemplate:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchTemplates"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#fetchVanityData:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchVanityData(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Vanity",
									"canonicalReference": "discord.js!Vanity:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchVanityData"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#fetchWebhooks:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchWebhooks(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Webhook",
									"canonicalReference": "discord.js!Webhook:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchWebhooks"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#fetchWelcomeScreen:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchWelcomeScreen(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "WelcomeScreen",
									"canonicalReference": "discord.js!WelcomeScreen:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchWelcomeScreen"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#fetchWidget:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchWidget(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Widget",
									"canonicalReference": "discord.js!Widget:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchWidget"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#fetchWidgetSettings:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchWidgetSettings(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildWidgetSettings",
									"canonicalReference": "discord.js!GuildWidgetSettings:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchWidgetSettings"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#invites:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public invites: "
								},
								{
									"kind": "Reference",
									"text": "GuildInviteManager",
									"canonicalReference": "discord.js!GuildInviteManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "invites",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#joinedAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get joinedAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "joinedAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#joinedTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public joinedTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "joinedTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#large:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public large: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "large",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#leave:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public leave(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "leave"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#maximumBitrate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get maximumBitrate(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "maximumBitrate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#maximumMembers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public maximumMembers: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "maximumMembers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#maximumPresences:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public maximumPresences: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "maximumPresences",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#memberCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public memberCount: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "memberCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#members:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public members: "
								},
								{
									"kind": "Reference",
									"text": "GuildMemberManager",
									"canonicalReference": "discord.js!GuildMemberManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "members",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#mfaLevel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public mfaLevel: "
								},
								{
									"kind": "Reference",
									"text": "GuildMFALevel",
									"canonicalReference": "discord-api-types!GuildMFALevel:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "mfaLevel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#ownerId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ownerId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ownerId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#preferredLocale:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public preferredLocale: "
								},
								{
									"kind": "Reference",
									"text": "Locale",
									"canonicalReference": "discord-api-types!Locale:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "preferredLocale",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#premiumProgressBarEnabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public premiumProgressBarEnabled: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "premiumProgressBarEnabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#premiumTier:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public premiumTier: "
								},
								{
									"kind": "Reference",
									"text": "GuildPremiumTier",
									"canonicalReference": "discord-api-types!GuildPremiumTier:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "premiumTier",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#presences:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public presences: "
								},
								{
									"kind": "Reference",
									"text": "PresenceManager",
									"canonicalReference": "discord.js!PresenceManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "presences",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#publicUpdatesChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get publicUpdatesChannel(): "
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "publicUpdatesChannel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#publicUpdatesChannelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public publicUpdatesChannelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "publicUpdatesChannelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public roles: "
								},
								{
									"kind": "Reference",
									"text": "RoleManager",
									"canonicalReference": "discord.js!RoleManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#rulesChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get rulesChannel(): "
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rulesChannel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#rulesChannelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public rulesChannelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rulesChannelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#scheduledEvents:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public scheduledEvents: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventManager",
									"canonicalReference": "discord.js!GuildScheduledEventManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "scheduledEvents",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setAFKChannel:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setAFKChannel(afkChannel: "
								},
								{
									"kind": "Reference",
									"text": "VoiceChannelResolvable",
									"canonicalReference": "discord.js!VoiceChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "afkChannel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setAFKChannel"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setAFKTimeout:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setAFKTimeout(afkTimeout: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "afkTimeout",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setAFKTimeout"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setBanner:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setBanner(banner: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "banner",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 7
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setBanner"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setDefaultMessageNotifications:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setDefaultMessageNotifications(\n    defaultMessageNotifications: "
								},
								{
									"kind": "Reference",
									"text": "GuildDefaultMessageNotifications",
									"canonicalReference": "discord-api-types!GuildDefaultMessageNotifications:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ",\n    reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "defaultMessageNotifications",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setDefaultMessageNotifications"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setDiscoverySplash:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setDiscoverySplash(\n    discoverySplash: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ",\n    reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "discoverySplash",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 7
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setDiscoverySplash"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setExplicitContentFilter:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setExplicitContentFilter(\n    explicitContentFilter: "
								},
								{
									"kind": "Reference",
									"text": "GuildExplicitContentFilter",
									"canonicalReference": "discord-api-types!GuildExplicitContentFilter:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ",\n    reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "explicitContentFilter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setExplicitContentFilter"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setIcon:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setIcon(icon: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "icon",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 7
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setIcon"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setMFALevel:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setMFALevel(level: "
								},
								{
									"kind": "Reference",
									"text": "GuildMFALevel",
									"canonicalReference": "discord-api-types!GuildMFALevel:enum"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "level",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setMFALevel"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setName:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setName(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setName"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setOwner:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setOwner(owner: "
								},
								{
									"kind": "Reference",
									"text": "GuildMemberResolvable",
									"canonicalReference": "discord.js!GuildMemberResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "owner",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setOwner"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setPreferredLocale:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setPreferredLocale(preferredLocale: "
								},
								{
									"kind": "Reference",
									"text": "Locale",
									"canonicalReference": "discord-api-types!Locale:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "preferredLocale",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setPreferredLocale"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setPremiumProgressBarEnabled:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setPremiumProgressBarEnabled(enabled?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "enabled",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setPremiumProgressBarEnabled"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setPublicUpdatesChannel:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setPublicUpdatesChannel(publicUpdatesChannel: "
								},
								{
									"kind": "Reference",
									"text": "TextChannelResolvable",
									"canonicalReference": "discord.js!TextChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "publicUpdatesChannel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setPublicUpdatesChannel"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setRulesChannel:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setRulesChannel(rulesChannel: "
								},
								{
									"kind": "Reference",
									"text": "TextChannelResolvable",
									"canonicalReference": "discord.js!TextChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "rulesChannel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setRulesChannel"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setSplash:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setSplash(splash: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "splash",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 7
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setSplash"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setSystemChannel:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setSystemChannel(systemChannel: "
								},
								{
									"kind": "Reference",
									"text": "TextChannelResolvable",
									"canonicalReference": "discord.js!TextChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "systemChannel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setSystemChannel"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setSystemChannelFlags:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setSystemChannelFlags(systemChannelFlags: "
								},
								{
									"kind": "Reference",
									"text": "SystemChannelFlagsResolvable",
									"canonicalReference": "discord.js!SystemChannelFlagsResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "systemChannelFlags",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setSystemChannelFlags"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setVerificationLevel:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setVerificationLevel(verificationLevel: "
								},
								{
									"kind": "Reference",
									"text": "GuildVerificationLevel",
									"canonicalReference": "discord-api-types!GuildVerificationLevel:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "verificationLevel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setVerificationLevel"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#setWidgetSettings:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setWidgetSettings(settings: "
								},
								{
									"kind": "Reference",
									"text": "GuildWidgetSettingsData",
									"canonicalReference": "discord.js!GuildWidgetSettingsData:interface"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "settings",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setWidgetSettings"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#shard:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get shard(): "
								},
								{
									"kind": "Reference",
									"text": "WebSocketShard",
									"canonicalReference": "discord.js!WebSocketShard:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shard",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#shardId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public shardId: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shardId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#stageInstances:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public stageInstances: "
								},
								{
									"kind": "Reference",
									"text": "StageInstanceManager",
									"canonicalReference": "discord.js!StageInstanceManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stageInstances",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#stickers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public stickers: "
								},
								{
									"kind": "Reference",
									"text": "GuildStickerManager",
									"canonicalReference": "discord.js!GuildStickerManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stickers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#systemChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get systemChannel(): "
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "systemChannel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#systemChannelFlags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public systemChannelFlags: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SystemChannelFlagsBitField",
									"canonicalReference": "discord.js!SystemChannelFlagsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "systemChannelFlags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#systemChannelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public systemChannelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "systemChannelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Guild#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#vanityURLUses:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public vanityURLUses: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "vanityURLUses",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#voiceAdapterCreator:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get voiceAdapterCreator(): "
								},
								{
									"kind": "Reference",
									"text": "InternalDiscordGatewayAdapterCreator",
									"canonicalReference": "discord.js!InternalDiscordGatewayAdapterCreator:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "voiceAdapterCreator",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#voiceStates:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public voiceStates: "
								},
								{
									"kind": "Reference",
									"text": "VoiceStateManager",
									"canonicalReference": "discord.js!VoiceStateManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "voiceStates",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#widgetChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get widgetChannel(): "
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "widgetChannel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#widgetChannelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public widgetChannelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "widgetChannelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Guild#widgetEnabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public widgetEnabled: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "widgetEnabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildApplicationCommandManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildApplicationCommandManager extends "
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommandManager",
							"canonicalReference": "discord.js!ApplicationCommandManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "ApplicationCommand",
							"canonicalReference": "discord.js!ApplicationCommand:class"
						},
						{
							"kind": "Content",
							"text": ", {}, "
						},
						{
							"kind": "Reference",
							"text": "Guild",
							"canonicalReference": "discord.js!Guild:class"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildApplicationCommandManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildApplicationCommandManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(command: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandDataResolvable",
									"canonicalReference": "discord.js!ApplicationCommandDataResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "command",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildApplicationCommandManager#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(command: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandResolvable",
									"canonicalReference": "discord.js!ApplicationCommandResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "command",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildApplicationCommandManager#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(\n    command: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandResolvable",
									"canonicalReference": "discord.js!ApplicationCommandResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    data: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandDataResolvable",
									"canonicalReference": "discord.js!ApplicationCommandDataResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "command",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildApplicationCommandManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchGuildApplicationCommandFetchOptions",
									"canonicalReference": "discord.js!FetchGuildApplicationCommandFetchOptions:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildApplicationCommandManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options: "
								},
								{
									"kind": "Reference",
									"text": "FetchGuildApplicationCommandFetchOptions",
									"canonicalReference": "discord.js!FetchGuildApplicationCommandFetchOptions:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildApplicationCommandManager#fetch:member(3)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(\n    id?: "
								},
								{
									"kind": "Content",
									"text": "undefined"
								},
								{
									"kind": "Content",
									"text": ",\n    options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchGuildApplicationCommandFetchOptions",
									"canonicalReference": "discord.js!FetchGuildApplicationCommandFetchOptions:type"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 3,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildApplicationCommandManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildApplicationCommandManager#set:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public set(commands: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandDataResolvable",
									"canonicalReference": "discord.js!ApplicationCommandDataResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "commands",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "set"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildAuditLogs:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildAuditLogs<T extends "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsResolvable",
							"canonicalReference": "discord.js!GuildAuditLogsResolvable:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "null"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "GuildAuditLogs",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogs#entries:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public entries: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsEntry",
									"canonicalReference": "discord.js!GuildAuditLogsEntry:class"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "entries",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogs.Entry:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Entry: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsEntry",
									"canonicalReference": "discord.js!GuildAuditLogsEntry:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Entry",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildAuditLogs#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildAuditLogsActionType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildAuditLogsActionType = "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsTypes",
							"canonicalReference": "discord.js!~GuildAuditLogsTypes:interface"
						},
						{
							"kind": "Content",
							"text": "[keyof "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsTypes",
							"canonicalReference": "discord.js!~GuildAuditLogsTypes:interface"
						},
						{
							"kind": "Content",
							"text": "][1] | 'All'"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildAuditLogsActionType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildAuditLogsEntry:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildAuditLogsEntry<\n  TAction extends "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsResolvable",
							"canonicalReference": "discord.js!GuildAuditLogsResolvable:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "null"
						},
						{
							"kind": "Content",
							"text": ",\n  TActionType extends "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsActionType",
							"canonicalReference": "discord.js!GuildAuditLogsActionType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "TAction extends keyof "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsTypes",
							"canonicalReference": "discord.js!~GuildAuditLogsTypes:interface"
						},
						{
							"kind": "Content",
							"text": "\n    ? "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsTypes",
							"canonicalReference": "discord.js!~GuildAuditLogsTypes:interface"
						},
						{
							"kind": "Content",
							"text": "[TAction][1]\n    : 'All'"
						},
						{
							"kind": "Content",
							"text": ",\n  TTargetType extends "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsTargetType",
							"canonicalReference": "discord.js!GuildAuditLogsTargetType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "TAction extends keyof "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsTypes",
							"canonicalReference": "discord.js!~GuildAuditLogsTypes:interface"
						},
						{
							"kind": "Content",
							"text": "\n    ? "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsTypes",
							"canonicalReference": "discord.js!~GuildAuditLogsTypes:interface"
						},
						{
							"kind": "Content",
							"text": "[TAction][0]\n    : 'Unknown'"
						},
						{
							"kind": "Content",
							"text": ",\n> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "TAction",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						},
						{
							"typeParameterName": "TActionType",
							"constraintTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"defaultTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 14
							}
						},
						{
							"typeParameterName": "TTargetType",
							"constraintTokenRange": {
								"startIndex": 15,
								"endIndex": 16
							},
							"defaultTypeTokenRange": {
								"startIndex": 18,
								"endIndex": 23
							}
						}
					],
					"name": "GuildAuditLogsEntry",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#action:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public action: "
								},
								{
									"kind": "Content",
									"text": "TAction"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "action",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildAuditLogsEntry.actionType:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static actionType(action: "
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent",
									"canonicalReference": "discord-api-types!AuditLogEvent:enum"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsActionType",
									"canonicalReference": "discord.js!GuildAuditLogsActionType:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "action",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "actionType"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#actionType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public actionType: "
								},
								{
									"kind": "Content",
									"text": "TActionType"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "actionType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#changes:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public changes: "
								},
								{
									"kind": "Reference",
									"text": "AuditLogChange",
									"canonicalReference": "discord.js!AuditLogChange:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "changes",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#executor:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public executor: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "executor",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#extra:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public extra: "
								},
								{
									"kind": "Content",
									"text": "TAction extends keyof "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsEntryExtraField",
									"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField:interface"
								},
								{
									"kind": "Content",
									"text": " ? "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsEntryExtraField",
									"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField:interface"
								},
								{
									"kind": "Content",
									"text": "[TAction] : null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "extra",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reason: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#target:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public target: "
								},
								{
									"kind": "Content",
									"text": "TTargetType extends keyof "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsEntryTargetField",
									"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField:interface"
								},
								{
									"kind": "Content",
									"text": "<TActionType>\n    ? "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsEntryTargetField",
									"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField:interface"
								},
								{
									"kind": "Content",
									"text": "<TActionType>[TTargetType]\n    : "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " } | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "target",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 12
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry.Targets:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Targets: "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsTargets",
									"canonicalReference": "discord.js!GuildAuditLogsTargets:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Targets",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildAuditLogsEntry.targetType:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static targetType(target: "
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent",
									"canonicalReference": "discord-api-types!AuditLogEvent:enum"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsTargetType",
									"canonicalReference": "discord.js!GuildAuditLogsTargetType:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "target",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "targetType"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#targetType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public targetType: "
								},
								{
									"kind": "Content",
									"text": "TTargetType"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "targetType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildAuditLogsEntry#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildAuditLogsEntryExtraField "
						}
					],
					"releaseTag": "Public",
					"name": "GuildAuditLogsEntryExtraField",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"121\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.ApplicationCommandPermissionUpdate",
									"canonicalReference": "discord-api-types!AuditLogEvent.ApplicationCommandPermissionUpdate:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Content",
									"text": "{ applicationId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "; guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " } }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"121\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 10
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"13\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.ChannelOverwriteCreate",
									"canonicalReference": "discord-api-types!AuditLogEvent.ChannelOverwriteCreate:member"
								},
								{
									"kind": "Content",
									"text": "]:\n    "
								},
								{
									"kind": "Content",
									"text": "| "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": "\n    | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "; name: string; type: 'Role' }\n    | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "; type: 'Member' }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"13\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 12
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"14\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.ChannelOverwriteUpdate",
									"canonicalReference": "discord-api-types!AuditLogEvent.ChannelOverwriteUpdate:member"
								},
								{
									"kind": "Content",
									"text": "]:\n    "
								},
								{
									"kind": "Content",
									"text": "| "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": "\n    | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "; name: string; type: 'Role' }\n    | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "; type: 'Member' }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"14\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 12
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"15\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.ChannelOverwriteDelete",
									"canonicalReference": "discord-api-types!AuditLogEvent.ChannelOverwriteDelete:member"
								},
								{
									"kind": "Content",
									"text": "]:\n    "
								},
								{
									"kind": "Content",
									"text": "| "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": "\n    | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "; name: string; type: "
								},
								{
									"kind": "Reference",
									"text": "OverwriteType.Role",
									"canonicalReference": "discord-api-types!OverwriteType.Role:member"
								},
								{
									"kind": "Content",
									"text": " }\n    | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "; type: "
								},
								{
									"kind": "Reference",
									"text": "OverwriteType.Member",
									"canonicalReference": "discord-api-types!OverwriteType.Member:member"
								},
								{
									"kind": "Content",
									"text": " }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"15\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 16
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"21\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.MemberPrune",
									"canonicalReference": "discord-api-types!AuditLogEvent.MemberPrune:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Content",
									"text": "{ removed: number; days: number }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"21\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"26\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.MemberMove",
									"canonicalReference": "discord-api-types!AuditLogEvent.MemberMove:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Content",
									"text": "{ channel: "
								},
								{
									"kind": "Reference",
									"text": "VoiceBasedChannel",
									"canonicalReference": "discord.js!VoiceBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " }; count: number }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"26\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 8
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"27\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.MemberDisconnect",
									"canonicalReference": "discord-api-types!AuditLogEvent.MemberDisconnect:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Content",
									"text": "{ count: number }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"27\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"72\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.MessageDelete",
									"canonicalReference": "discord-api-types!AuditLogEvent.MessageDelete:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Content",
									"text": "{ channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildTextBasedChannel",
									"canonicalReference": "discord.js!GuildTextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " }; count: number }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"72\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 8
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"73\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.MessageBulkDelete",
									"canonicalReference": "discord-api-types!AuditLogEvent.MessageBulkDelete:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Content",
									"text": "{ channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildTextBasedChannel",
									"canonicalReference": "discord.js!GuildTextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " }; count: number }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"73\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 8
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"74\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.MessagePin",
									"canonicalReference": "discord-api-types!AuditLogEvent.MessagePin:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Content",
									"text": "{ channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildTextBasedChannel",
									"canonicalReference": "discord.js!GuildTextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " }; messageId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"74\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 10
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"75\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.MessageUnpin",
									"canonicalReference": "discord-api-types!AuditLogEvent.MessageUnpin:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Content",
									"text": "{ channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildTextBasedChannel",
									"canonicalReference": "discord.js!GuildTextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " }; messageId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"75\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 10
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"83\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.StageInstanceCreate",
									"canonicalReference": "discord-api-types!AuditLogEvent.StageInstanceCreate:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "StageChannel",
									"canonicalReference": "discord.js!StageChannel:class"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"83\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"84\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.StageInstanceUpdate",
									"canonicalReference": "discord-api-types!AuditLogEvent.StageInstanceUpdate:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "StageChannel",
									"canonicalReference": "discord.js!StageChannel:class"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"84\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryExtraField#\"85\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.StageInstanceDelete",
									"canonicalReference": "discord-api-types!AuditLogEvent.StageInstanceDelete:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "StageChannel",
									"canonicalReference": "discord.js!StageChannel:class"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"85\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildAuditLogsEntryTargetField<TActionType extends "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsActionType",
							"canonicalReference": "discord.js!GuildAuditLogsActionType:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "TActionType",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "GuildAuditLogsEntryTargetField",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#ApplicationCommand:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ApplicationCommand: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ApplicationCommand",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#Channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Channel: "
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "; [x: string]: unknown }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#Guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#GuildScheduledEvent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "GuildScheduledEvent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#Integration:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Integration: "
								},
								{
									"kind": "Reference",
									"text": "Integration",
									"canonicalReference": "discord.js!Integration:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Integration",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#Invite:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Invite: "
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Invite",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#Message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Message: "
								},
								{
									"kind": "Content",
									"text": "TActionType extends "
								},
								{
									"kind": "Reference",
									"text": "AuditLogEvent.MessageBulkDelete",
									"canonicalReference": "discord-api-types!AuditLogEvent.MessageBulkDelete:member"
								},
								{
									"kind": "Content",
									"text": " ? "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " } : "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#StageInstance:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "StageInstance: "
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "StageInstance",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#Sticker:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Sticker: "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Sticker",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#Thread:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Thread: "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": " | { id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "; [x: string]: unknown }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Thread",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#User:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "User: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "User",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsEntryTargetField#Webhook:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Webhook: "
								},
								{
									"kind": "Reference",
									"text": "Webhook",
									"canonicalReference": "discord.js!Webhook:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Webhook",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildAuditLogsFetchOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildAuditLogsFetchOptions<T extends "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsResolvable",
							"canonicalReference": "discord.js!GuildAuditLogsResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "GuildAuditLogsFetchOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsFetchOptions#before:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "before?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "GuildAuditLogsEntry",
									"canonicalReference": "discord.js!GuildAuditLogsEntry:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "before",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsFetchOptions#limit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "limit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "limit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsFetchOptions#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Content",
									"text": "T"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildAuditLogsFetchOptions#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "user?: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildAuditLogsResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildAuditLogsResolvable = "
						},
						{
							"kind": "Reference",
							"text": "AuditLogEvent",
							"canonicalReference": "discord-api-types!AuditLogEvent:enum"
						},
						{
							"kind": "Content",
							"text": " | null"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildAuditLogsResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildAuditLogsTargets:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildAuditLogsTargets = "
						},
						{
							"kind": "Content",
							"text": "{\n  [key in "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsTargetType",
							"canonicalReference": "discord.js!GuildAuditLogsTargetType:type"
						},
						{
							"kind": "Content",
							"text": "]: "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsTargetType",
							"canonicalReference": "discord.js!GuildAuditLogsTargetType:type"
						},
						{
							"kind": "Content",
							"text": ";\n}"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildAuditLogsTargets",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildAuditLogsTargetType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildAuditLogsTargetType = "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsTypes",
							"canonicalReference": "discord.js!~GuildAuditLogsTypes:interface"
						},
						{
							"kind": "Content",
							"text": "[keyof "
						},
						{
							"kind": "Reference",
							"text": "GuildAuditLogsTypes",
							"canonicalReference": "discord.js!~GuildAuditLogsTypes:interface"
						},
						{
							"kind": "Content",
							"text": "][0] | 'All' | 'Unknown'"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildAuditLogsTargetType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildBan:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildBan extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "GuildBan",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildBan#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildBan",
									"canonicalReference": "discord.js!GuildBan:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "force",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildBan#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildBan#partial:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get partial(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "partial",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildBan#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reason?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildBan#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildBanManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildBanManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "GuildBan",
							"canonicalReference": "discord.js!GuildBan:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "GuildBanResolvable",
							"canonicalReference": "discord.js!GuildBanResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildBanManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildBanManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BanOptions",
									"canonicalReference": "discord.js!BanOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildBanManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "FetchBanOptions",
									"canonicalReference": "discord.js!FetchBanOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildBan",
									"canonicalReference": "discord.js!GuildBan:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildBanManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchBansOptions",
									"canonicalReference": "discord.js!FetchBansOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildBan",
									"canonicalReference": "discord.js!GuildBan:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildBanManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildBanManager#remove:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public remove(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "remove"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildBanResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildBanResolvable = "
						},
						{
							"kind": "Reference",
							"text": "GuildBan",
							"canonicalReference": "discord.js!GuildBan:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "UserResolvable",
							"canonicalReference": "discord.js!UserResolvable:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildBanResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildBasedChannel:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildBasedChannel = "
						},
						{
							"kind": "Reference",
							"text": "Extract",
							"canonicalReference": "!Extract:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Channel",
							"canonicalReference": "discord.js!Channel:type"
						},
						{
							"kind": "Content",
							"text": ", { guild: "
						},
						{
							"kind": "Reference",
							"text": "Guild",
							"canonicalReference": "discord.js!Guild:class"
						},
						{
							"kind": "Content",
							"text": " }>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildBasedChannel",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 7
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildCacheMessage:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildCacheMessage<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> = "
						},
						{
							"kind": "Reference",
							"text": "CacheTypeReducer",
							"canonicalReference": "discord.js!CacheTypeReducer:type"
						},
						{
							"kind": "Content",
							"text": "<\n  Cached,\n  "
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": "<true>,\n  "
						},
						{
							"kind": "Reference",
							"text": "APIMessage",
							"canonicalReference": "discord-api-types!APIMessage:interface"
						},
						{
							"kind": "Content",
							"text": ",\n  "
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "APIMessage",
							"canonicalReference": "discord-api-types!APIMessage:interface"
						},
						{
							"kind": "Content",
							"text": ",\n  "
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "APIMessage",
							"canonicalReference": "discord-api-types!APIMessage:interface"
						},
						{
							"kind": "Content",
							"text": "\n>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildCacheMessage",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 3,
						"endIndex": 17
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export abstract class GuildChannel extends "
						},
						{
							"kind": "Reference",
							"text": "BaseChannel",
							"canonicalReference": "discord.js!BaseChannel:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "GuildChannel",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!GuildChannel:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `GuildChannel` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ", data?: "
								},
								{
									"kind": "Reference",
									"text": "RawGuildChannelData",
									"canonicalReference": "discord.js!RawGuildChannelData:type"
								},
								{
									"kind": "Content",
									"text": ", client?: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", immediatePatch?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "guild",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								},
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								},
								{
									"parameterName": "immediatePatch",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 8
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#clone:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public clone(options?: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelCloneOptions",
									"canonicalReference": "discord.js!GuildChannelCloneOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "clone"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#deletable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get deletable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deletable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(data: "
								},
								{
									"kind": "Reference",
									"text": "ChannelEditData",
									"canonicalReference": "discord.js!ChannelEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannel",
									"canonicalReference": "discord.js!GuildChannel:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#isTextBased:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isTextBased(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "GuildBasedChannel",
									"canonicalReference": "discord.js!GuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " & "
								},
								{
									"kind": "Reference",
									"text": "TextBasedChannel",
									"canonicalReference": "discord.js!TextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isTextBased"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#lockPermissions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public lockPermissions(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "lockPermissions"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#manageable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get manageable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "manageable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#members:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get members(): "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "members",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#parent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get parent(): "
								},
								{
									"kind": "Reference",
									"text": "CategoryChannel",
									"canonicalReference": "discord.js!CategoryChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "parent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#parentId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public parentId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "parentId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#permissionOverwrites:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissionOverwrites: "
								},
								{
									"kind": "Reference",
									"text": "PermissionOverwriteManager",
									"canonicalReference": "discord.js!PermissionOverwriteManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permissionOverwrites",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#permissionsFor:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissionsFor(memberOrRole: "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ", checkAdmin?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "memberOrRole",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "checkAdmin",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "permissionsFor"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#permissionsFor:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissionsFor(\n    memberOrRole: "
								},
								{
									"kind": "Reference",
									"text": "GuildMemberResolvable",
									"canonicalReference": "discord.js!GuildMemberResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    checkAdmin?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": "> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "memberOrRole",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "checkAdmin",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "permissionsFor"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#permissionsLocked:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get permissionsLocked(): "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permissionsLocked",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#position:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get position(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "position",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#rawPosition:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public rawPosition: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rawPosition",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#setName:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setName(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setName"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#setParent:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setParent(channel: "
								},
								{
									"kind": "Reference",
									"text": "CategoryChannelResolvable",
									"canonicalReference": "discord.js!CategoryChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "SetParentOptions",
									"canonicalReference": "discord.js!SetParentOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setParent"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#setPosition:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setPosition(position: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "SetChannelPositionOptions",
									"canonicalReference": "discord.js!SetChannelPositionOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "position",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setPosition"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannel#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Reference",
									"text": "ChannelMention",
									"canonicalReference": "discord.js!ChannelMention:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ChannelType",
									"canonicalReference": "discord-api-types!ChannelType:enum"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.DM",
									"canonicalReference": "discord-api-types!ChannelType.DM:member"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GroupDM",
									"canonicalReference": "discord-api-types!ChannelType.GroupDM:member"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannel#viewable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get viewable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "viewable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildChannelCloneOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildChannelCloneOptions extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "GuildChannelCreateOptions",
							"canonicalReference": "discord.js!GuildChannelCreateOptions:interface"
						},
						{
							"kind": "Content",
							"text": ", 'name'> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildChannelCloneOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildChannelCloneOptions#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildChannelCreateOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildChannelCreateOptions extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "CategoryCreateChannelOptions",
							"canonicalReference": "discord.js!CategoryCreateChannelOptions:interface"
						},
						{
							"kind": "Content",
							"text": ", 'type'> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildChannelCreateOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildChannelCreateOptions#parent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "parent?: "
								},
								{
									"kind": "Reference",
									"text": "CategoryChannelResolvable",
									"canonicalReference": "discord.js!CategoryChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "parent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildChannelCreateOptions#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<\n    "
								},
								{
									"kind": "Reference",
									"text": "ChannelType",
									"canonicalReference": "discord-api-types!ChannelType:enum"
								},
								{
									"kind": "Content",
									"text": ",\n    | "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.DM",
									"canonicalReference": "discord-api-types!ChannelType.DM:member"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GroupDM",
									"canonicalReference": "discord-api-types!ChannelType.GroupDM:member"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildPublicThread",
									"canonicalReference": "discord-api-types!ChannelType.GuildPublicThread:member"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildNewsThread",
									"canonicalReference": "discord-api-types!ChannelType.GuildNewsThread:member"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildPrivateThread",
									"canonicalReference": "discord-api-types!ChannelType.GuildPrivateThread:member"
								},
								{
									"kind": "Content",
									"text": "\n  >"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 15
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildChannelManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildChannelManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "GuildBasedChannel",
							"canonicalReference": "discord.js!GuildBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "GuildChannelResolvable",
							"canonicalReference": "discord.js!GuildChannelResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildChannelManager",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannelManager#channelCountWithoutThreads:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get channelCountWithoutThreads(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelCountWithoutThreads",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannelManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create<T extends "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelTypes",
									"canonicalReference": "discord.js!GuildChannelTypes:type"
								},
								{
									"kind": "Content",
									"text": ">(\n    options: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelCreateOptions",
									"canonicalReference": "discord.js!GuildChannelCreateOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { type: T }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MappedGuildChannelTypes",
									"canonicalReference": "discord.js!MappedGuildChannelTypes:type"
								},
								{
									"kind": "Content",
									"text": "[T]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannelManager#create:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(options: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelCreateOptions",
									"canonicalReference": "discord.js!GuildChannelCreateOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannelManager#createWebhook:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createWebhook(options: "
								},
								{
									"kind": "Reference",
									"text": "WebhookCreateOptions",
									"canonicalReference": "discord.js!WebhookCreateOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Webhook",
									"canonicalReference": "discord.js!Webhook:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "createWebhook"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannelManager#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelResolvable",
									"canonicalReference": "discord.js!GuildChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannelManager#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelResolvable",
									"canonicalReference": "discord.js!GuildChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", data: "
								},
								{
									"kind": "Reference",
									"text": "ChannelEditData",
									"canonicalReference": "discord.js!ChannelEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildChannel",
									"canonicalReference": "discord.js!GuildChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannelManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannelManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(id?: "
								},
								{
									"kind": "Content",
									"text": "undefined"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannelManager#fetchActiveThreads:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchActiveThreads(cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "FetchedThreads",
									"canonicalReference": "discord.js!FetchedThreads:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "cache",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchActiveThreads"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannelManager#fetchWebhooks:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchWebhooks(channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelResolvable",
									"canonicalReference": "discord.js!GuildChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Webhook",
									"canonicalReference": "discord.js!Webhook:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchWebhooks"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildChannelManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannelManager#setPosition:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setPosition(\n    channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelResolvable",
									"canonicalReference": "discord.js!GuildChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    position: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ",\n    options?: "
								},
								{
									"kind": "Reference",
									"text": "SetChannelPositionOptions",
									"canonicalReference": "discord.js!SetChannelPositionOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildChannel",
									"canonicalReference": "discord.js!GuildChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "position",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setPosition"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildChannelManager#setPositions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setPositions(channelPositions: "
								},
								{
									"kind": "Content",
									"text": "readonly "
								},
								{
									"kind": "Reference",
									"text": "ChannelPosition",
									"canonicalReference": "discord.js!ChannelPosition:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channelPositions",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setPositions"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildChannelOverwriteOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildChannelOverwriteOptions "
						}
					],
					"releaseTag": "Public",
					"name": "GuildChannelOverwriteOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildChannelOverwriteOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildChannelOverwriteOptions#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildChannelResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildChannelResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "GuildBasedChannel",
							"canonicalReference": "discord.js!GuildBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildChannelResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildChannelTypes:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildChannelTypes = "
						},
						{
							"kind": "Reference",
							"text": "CategoryChannelType",
							"canonicalReference": "discord.js!CategoryChannelType:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildCategory",
							"canonicalReference": "discord-api-types!ChannelType.GuildCategory:member"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildChannelTypes",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildCreateOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildCreateOptions "
						}
					],
					"releaseTag": "Public",
					"name": "GuildCreateOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildCreateOptions#afkChannelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "afkChannelId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "afkChannelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildCreateOptions#afkTimeout:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "afkTimeout?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "afkTimeout",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildCreateOptions#channels:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channels?: "
								},
								{
									"kind": "Reference",
									"text": "PartialChannelData",
									"canonicalReference": "discord.js!PartialChannelData:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channels",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildCreateOptions#defaultMessageNotifications:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "defaultMessageNotifications?: "
								},
								{
									"kind": "Reference",
									"text": "GuildDefaultMessageNotifications",
									"canonicalReference": "discord-api-types!GuildDefaultMessageNotifications:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "defaultMessageNotifications",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildCreateOptions#explicitContentFilter:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "explicitContentFilter?: "
								},
								{
									"kind": "Reference",
									"text": "GuildExplicitContentFilter",
									"canonicalReference": "discord-api-types!GuildExplicitContentFilter:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "explicitContentFilter",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildCreateOptions#icon:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "icon?: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "icon",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildCreateOptions#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildCreateOptions#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "roles?: "
								},
								{
									"kind": "Reference",
									"text": "PartialRoleData",
									"canonicalReference": "discord.js!PartialRoleData:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildCreateOptions#systemChannelFlags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "systemChannelFlags?: "
								},
								{
									"kind": "Reference",
									"text": "SystemChannelFlagsResolvable",
									"canonicalReference": "discord.js!SystemChannelFlagsResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "systemChannelFlags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildCreateOptions#systemChannelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "systemChannelId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "systemChannelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildCreateOptions#verificationLevel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "verificationLevel?: "
								},
								{
									"kind": "Reference",
									"text": "GuildVerificationLevel",
									"canonicalReference": "discord-api-types!GuildVerificationLevel:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "verificationLevel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildEditData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildEditData "
						}
					],
					"releaseTag": "Public",
					"name": "GuildEditData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#afkChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "afkChannel?: "
								},
								{
									"kind": "Reference",
									"text": "VoiceChannelResolvable",
									"canonicalReference": "discord.js!VoiceChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "afkChannel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#afkTimeout:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "afkTimeout?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "afkTimeout",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#banner:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "banner?: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "banner",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#defaultMessageNotifications:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "defaultMessageNotifications?: "
								},
								{
									"kind": "Reference",
									"text": "GuildDefaultMessageNotifications",
									"canonicalReference": "discord-api-types!GuildDefaultMessageNotifications:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "defaultMessageNotifications",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#discoverySplash:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "discoverySplash?: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "discoverySplash",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#explicitContentFilter:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "explicitContentFilter?: "
								},
								{
									"kind": "Reference",
									"text": "GuildExplicitContentFilter",
									"canonicalReference": "discord-api-types!GuildExplicitContentFilter:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "explicitContentFilter",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#features:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "features?: "
								},
								{
									"kind": "Reference",
									"text": "GuildFeature",
									"canonicalReference": "discord-api-types!GuildFeature:enum"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "features",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#icon:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "icon?: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "icon",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#owner:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "owner?: "
								},
								{
									"kind": "Reference",
									"text": "GuildMemberResolvable",
									"canonicalReference": "discord.js!GuildMemberResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "owner",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#preferredLocale:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "preferredLocale?: "
								},
								{
									"kind": "Reference",
									"text": "Locale",
									"canonicalReference": "discord-api-types!Locale:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "preferredLocale",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#premiumProgressBarEnabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "premiumProgressBarEnabled?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "premiumProgressBarEnabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#publicUpdatesChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "publicUpdatesChannel?: "
								},
								{
									"kind": "Reference",
									"text": "TextChannelResolvable",
									"canonicalReference": "discord.js!TextChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "publicUpdatesChannel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#rulesChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "rulesChannel?: "
								},
								{
									"kind": "Reference",
									"text": "TextChannelResolvable",
									"canonicalReference": "discord.js!TextChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "rulesChannel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#splash:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "splash?: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "splash",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#systemChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "systemChannel?: "
								},
								{
									"kind": "Reference",
									"text": "TextChannelResolvable",
									"canonicalReference": "discord.js!TextChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "systemChannel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#systemChannelFlags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "systemChannelFlags?: "
								},
								{
									"kind": "Reference",
									"text": "SystemChannelFlagsResolvable",
									"canonicalReference": "discord.js!SystemChannelFlagsResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "systemChannelFlags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEditData#verificationLevel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "verificationLevel?: "
								},
								{
									"kind": "Reference",
									"text": "GuildVerificationLevel",
									"canonicalReference": "discord-api-types!GuildVerificationLevel:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "verificationLevel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildEmoji:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildEmoji extends "
						},
						{
							"kind": "Reference",
							"text": "BaseGuildEmoji",
							"canonicalReference": "discord.js!BaseGuildEmoji:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "GuildEmoji",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildEmoji#author:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public author: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "author",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildEmoji#deletable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get deletable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deletable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmoji#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmoji#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(data: "
								},
								{
									"kind": "Reference",
									"text": "GuildEmojiEditData",
									"canonicalReference": "discord.js!GuildEmojiEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmoji#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(other: "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": " | unknown"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmoji#fetchAuthor:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchAuthor(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchAuthor"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildEmoji#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildEmoji#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get roles(): "
								},
								{
									"kind": "Reference",
									"text": "GuildEmojiRoleManager",
									"canonicalReference": "discord.js!GuildEmojiRoleManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmoji#setName:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setName(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setName"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildEmoji#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get url(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildEmojiCreateOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildEmojiCreateOptions "
						}
					],
					"releaseTag": "Public",
					"name": "GuildEmojiCreateOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEmojiCreateOptions#attachment:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "attachment: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "attachment",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEmojiCreateOptions#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEmojiCreateOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEmojiCreateOptions#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "roles?: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildEmojiEditData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildEmojiEditData "
						}
					],
					"releaseTag": "Public",
					"name": "GuildEmojiEditData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEmojiEditData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEmojiEditData#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildEmojiEditData#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "roles?: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildEmojiManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildEmojiManager extends "
						},
						{
							"kind": "Reference",
							"text": "BaseGuildEmojiManager",
							"canonicalReference": "discord.js!BaseGuildEmojiManager:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "GuildEmojiManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmojiManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(options: "
								},
								{
									"kind": "Reference",
									"text": "GuildEmojiCreateOptions",
									"canonicalReference": "discord.js!GuildEmojiCreateOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmojiManager#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(emoji: "
								},
								{
									"kind": "Reference",
									"text": "EmojiResolvable",
									"canonicalReference": "discord.js!EmojiResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "emoji",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmojiManager#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(emoji: "
								},
								{
									"kind": "Reference",
									"text": "EmojiResolvable",
									"canonicalReference": "discord.js!EmojiResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", data: "
								},
								{
									"kind": "Reference",
									"text": "GuildEmojiEditData",
									"canonicalReference": "discord.js!GuildEmojiEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "emoji",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmojiManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmojiManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(id?: "
								},
								{
									"kind": "Content",
									"text": "undefined"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmojiManager#fetchAuthor:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchAuthor(emoji: "
								},
								{
									"kind": "Reference",
									"text": "EmojiResolvable",
									"canonicalReference": "discord.js!EmojiResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "emoji",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchAuthor"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildEmojiManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildEmojiRoleManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildEmojiRoleManager extends "
						},
						{
							"kind": "Reference",
							"text": "DataManager",
							"canonicalReference": "discord.js!DataManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Role",
							"canonicalReference": "discord.js!Role:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "RoleResolvable",
							"canonicalReference": "discord.js!RoleResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildEmojiRoleManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmojiRoleManager#add:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public add(\n    roleOrRoles: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | readonly "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[] | "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 16
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "roleOrRoles",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "add"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildEmojiRoleManager#emoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public emoji: "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildEmojiRoleManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmojiRoleManager#remove:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public remove(\n    roleOrRoles: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | readonly "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[] | "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 16
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "roleOrRoles",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "remove"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildEmojiRoleManager#set:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public set(roles: "
								},
								{
									"kind": "Content",
									"text": "readonly "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[] | "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 11,
								"endIndex": 15
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "roles",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 10
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "set"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildInvitableChannelResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildInvitableChannelResolvable = "
						},
						{
							"kind": "Reference",
							"text": "TextChannel",
							"canonicalReference": "discord.js!TextChannel:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "VoiceChannel",
							"canonicalReference": "discord.js!VoiceChannel:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "NewsChannel",
							"canonicalReference": "discord.js!NewsChannel:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "StageChannel",
							"canonicalReference": "discord.js!StageChannel:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildInvitableChannelResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 10
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildInviteManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildInviteManager extends "
						},
						{
							"kind": "Reference",
							"text": "DataManager",
							"canonicalReference": "discord.js!DataManager:class"
						},
						{
							"kind": "Content",
							"text": "<string, "
						},
						{
							"kind": "Reference",
							"text": "Invite",
							"canonicalReference": "discord.js!Invite:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "InviteResolvable",
							"canonicalReference": "discord.js!InviteResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildInviteManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildInviteManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildInvitableChannelResolvable",
									"canonicalReference": "discord.js!GuildInvitableChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "CreateInviteOptions",
									"canonicalReference": "discord.js!CreateInviteOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildInviteManager#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(invite: "
								},
								{
									"kind": "Reference",
									"text": "InviteResolvable",
									"canonicalReference": "discord.js!InviteResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "invite",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildInviteManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options: "
								},
								{
									"kind": "Reference",
									"text": "InviteResolvable",
									"canonicalReference": "discord.js!InviteResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "FetchInviteOptions",
									"canonicalReference": "discord.js!~FetchInviteOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildInviteManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchInvitesOptions",
									"canonicalReference": "discord.js!~FetchInvitesOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<string, "
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildInviteManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildListMembersOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildListMembersOptions "
						}
					],
					"releaseTag": "Public",
					"name": "GuildListMembersOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildListMembersOptions#after:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "after?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "after",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildListMembersOptions#cache:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "cache",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildListMembersOptions#limit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "limit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "limit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Guild",
							"canonicalReference": "discord.js!Guild:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "GuildResolvable",
							"canonicalReference": "discord.js!GuildResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(options: "
								},
								{
									"kind": "Reference",
									"text": "GuildCreateOptions",
									"canonicalReference": "discord.js!GuildCreateOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "FetchGuildOptions",
									"canonicalReference": "discord.js!FetchGuildOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchGuildsOptions",
									"canonicalReference": "discord.js!FetchGuildsOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "OAuth2Guild",
									"canonicalReference": "discord.js!OAuth2Guild:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildMember:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildMember extends "
						},
						{
							"kind": "Reference",
							"text": "PartialTextBasedChannel",
							"canonicalReference": "discord.js!PartialTextBasedChannel"
						},
						{
							"kind": "Content",
							"text": "("
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": ") "
						}
					],
					"releaseTag": "Public",
					"name": "GuildMember",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#avatar:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public avatar: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "avatar",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#avatarURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public avatarURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "avatarURL"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#ban:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ban(options?: "
								},
								{
									"kind": "Reference",
									"text": "BanOptions",
									"canonicalReference": "discord.js!BanOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "ban"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#bannable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get bannable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "bannable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#communicationDisabledUntil:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get communicationDisabledUntil(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "communicationDisabledUntil",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#communicationDisabledUntilTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public communicationDisabledUntilTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "communicationDisabledUntilTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#createDM:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createDM(force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "DMChannel",
									"canonicalReference": "discord.js!DMChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "force",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "createDM"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#deleteDM:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deleteDM(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "DMChannel",
									"canonicalReference": "discord.js!DMChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "deleteDM"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#disableCommunicationUntil:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public disableCommunicationUntil(timeout: "
								},
								{
									"kind": "Reference",
									"text": "DateResolvable",
									"canonicalReference": "discord.js!DateResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "timeout",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "disableCommunicationUntil"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#displayAvatarURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public displayAvatarURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "displayAvatarURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#displayColor:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get displayColor(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "displayColor",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#displayHexColor:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get displayHexColor(): "
								},
								{
									"kind": "Reference",
									"text": "HexColorString",
									"canonicalReference": "discord.js!HexColorString:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "displayHexColor",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#displayName:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get displayName(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "displayName",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(data: "
								},
								{
									"kind": "Reference",
									"text": "GuildMemberEditData",
									"canonicalReference": "discord.js!GuildMemberEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "force",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get id(): "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#isCommunicationDisabled:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isCommunicationDisabled(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " & {\n    communicationDisabledUntilTimestamp: number;\n    readonly communicationDisabledUntil: "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";\n  }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isCommunicationDisabled"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#joinedAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get joinedAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "joinedAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#joinedTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public joinedTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "joinedTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#kick:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public kick(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "kick"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#kickable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get kickable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "kickable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#manageable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get manageable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "manageable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#moderatable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get moderatable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "moderatable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#nickname:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public nickname: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "nickname",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#partial:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get partial(): "
								},
								{
									"kind": "Content",
									"text": "false"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "partial",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#pending:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public pending: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "pending",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#permissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get permissions(): "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#permissionsIn:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissionsIn(channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelResolvable",
									"canonicalReference": "discord.js!GuildChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "permissionsIn"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#premiumSince:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get premiumSince(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "premiumSince",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#premiumSinceTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public premiumSinceTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "premiumSinceTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#presence:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get presence(): "
								},
								{
									"kind": "Reference",
									"text": "Presence",
									"canonicalReference": "discord.js!Presence:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "presence",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get roles(): "
								},
								{
									"kind": "Reference",
									"text": "GuildMemberRoleManager",
									"canonicalReference": "discord.js!GuildMemberRoleManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#setNickname:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setNickname(nickname: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "nickname",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setNickname"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#timeout:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public timeout(timeout: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "timeout",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "timeout"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Reference",
									"text": "UserMention",
									"canonicalReference": "discord.js!UserMention:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMember#valueOf:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public valueOf(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "valueOf"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMember#voice:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get voice(): "
								},
								{
									"kind": "Reference",
									"text": "VoiceState",
									"canonicalReference": "discord.js!VoiceState:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "voice",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildMemberEditData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildMemberEditData "
						}
					],
					"releaseTag": "Public",
					"name": "GuildMemberEditData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildMemberEditData#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel?: "
								},
								{
									"kind": "Reference",
									"text": "GuildVoiceChannelResolvable",
									"canonicalReference": "discord.js!GuildVoiceChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildMemberEditData#communicationDisabledUntil:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "communicationDisabledUntil?: "
								},
								{
									"kind": "Reference",
									"text": "DateResolvable",
									"canonicalReference": "discord.js!DateResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "communicationDisabledUntil",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildMemberEditData#deaf:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deaf?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "deaf",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildMemberEditData#mute:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "mute?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "mute",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildMemberEditData#nick:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "nick?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "nick",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildMemberEditData#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildMemberEditData#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "roles?: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": "> | readonly "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildMemberManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildMemberManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "GuildMember",
							"canonicalReference": "discord.js!GuildMember:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "GuildMemberResolvable",
							"canonicalReference": "discord.js!GuildMemberResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildMemberManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#add:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public add(\n    user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Reference",
									"text": "AddGuildMemberOptions",
									"canonicalReference": "discord.js!AddGuildMemberOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { fetchWhenExisting: false }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "add"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#add:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public add(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options: "
								},
								{
									"kind": "Reference",
									"text": "AddGuildMemberOptions",
									"canonicalReference": "discord.js!AddGuildMemberOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "add"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#ban:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ban(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BanOptions",
									"canonicalReference": "discord.js!BanOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "ban"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", data: "
								},
								{
									"kind": "Reference",
									"text": "GuildMemberEditData",
									"canonicalReference": "discord.js!GuildMemberEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(\n    options: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "FetchMemberOptions",
									"canonicalReference": "discord.js!FetchMemberOptions:interface"
								},
								{
									"kind": "Content",
									"text": " | ("
								},
								{
									"kind": "Reference",
									"text": "FetchMembersOptions",
									"canonicalReference": "discord.js!FetchMembersOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": " })"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 10,
								"endIndex": 14
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 9
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchMembersOptions",
									"canonicalReference": "discord.js!FetchMembersOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMemberManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#kick:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public kick(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "kick"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#list:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public list(options?: "
								},
								{
									"kind": "Reference",
									"text": "GuildListMembersOptions",
									"canonicalReference": "discord.js!GuildListMembersOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "list"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMemberManager#me:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get me(): "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "me",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#prune:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public prune(options: "
								},
								{
									"kind": "Reference",
									"text": "GuildPruneMembersOptions",
									"canonicalReference": "discord.js!GuildPruneMembersOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { dry?: false; count: false }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "prune"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#prune:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public prune(options?: "
								},
								{
									"kind": "Reference",
									"text": "GuildPruneMembersOptions",
									"canonicalReference": "discord.js!GuildPruneMembersOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<number>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "prune"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#search:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public search(options: "
								},
								{
									"kind": "Reference",
									"text": "GuildSearchMembersOptions",
									"canonicalReference": "discord.js!GuildSearchMembersOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "search"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberManager#unban:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public unban(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "unban"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildMemberResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildMemberResolvable = "
						},
						{
							"kind": "Reference",
							"text": "GuildMember",
							"canonicalReference": "discord.js!GuildMember:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "UserResolvable",
							"canonicalReference": "discord.js!UserResolvable:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildMemberResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildMemberRoleManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildMemberRoleManager extends "
						},
						{
							"kind": "Reference",
							"text": "DataManager",
							"canonicalReference": "discord.js!DataManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Role",
							"canonicalReference": "discord.js!Role:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "RoleResolvable",
							"canonicalReference": "discord.js!RoleResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildMemberRoleManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberRoleManager#add:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public add(\n    roleOrRoles: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | readonly "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[] | "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n    reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 14,
								"endIndex": 18
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "roleOrRoles",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 11
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 12,
										"endIndex": 13
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "add"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMemberRoleManager#botRole:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get botRole(): "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "botRole",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMemberRoleManager#color:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get color(): "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "color",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMemberRoleManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMemberRoleManager#highest:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get highest(): "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "highest",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMemberRoleManager#hoist:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get hoist(): "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "hoist",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMemberRoleManager#icon:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get icon(): "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "icon",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMemberRoleManager#member:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public member: "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "member",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildMemberRoleManager#premiumSubscriberRole:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get premiumSubscriberRole(): "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "premiumSubscriberRole",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberRoleManager#remove:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public remove(\n    roleOrRoles: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | readonly "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[] | "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n    reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 14,
								"endIndex": 18
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "roleOrRoles",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 11
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 12,
										"endIndex": 13
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "remove"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildMemberRoleManager#set:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public set(roles: "
								},
								{
									"kind": "Content",
									"text": "readonly "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[] | "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 13,
								"endIndex": 17
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "roles",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 10
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 11,
										"endIndex": 12
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "set"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildPreview:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildPreview extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "GuildPreview",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#approximateMemberCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public approximateMemberCount: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "approximateMemberCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#approximatePresenceCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public approximatePresenceCount: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "approximatePresenceCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#discoverySplash:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public discoverySplash: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "discoverySplash",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildPreview#discoverySplashURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public discoverySplashURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "discoverySplashURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#emojis:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public emojis: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildPreviewEmoji",
									"canonicalReference": "discord.js!GuildPreviewEmoji:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emojis",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#features:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public features: "
								},
								{
									"kind": "Reference",
									"text": "GuildFeature",
									"canonicalReference": "discord-api-types!GuildFeature:enum"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "features",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildPreview#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildPreview",
									"canonicalReference": "discord.js!GuildPreview:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#icon:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public icon: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "icon",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildPreview#iconURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public iconURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "iconURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#splash:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public splash: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "splash",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildPreview#splashURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public splashURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "splashURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreview#stickers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public stickers: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stickers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildPreview#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildPreview#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildPreviewEmoji:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildPreviewEmoji extends "
						},
						{
							"kind": "Reference",
							"text": "BaseGuildEmoji",
							"canonicalReference": "discord.js!BaseGuildEmoji:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "GuildPreviewEmoji",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreviewEmoji#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "GuildPreview",
									"canonicalReference": "discord.js!GuildPreview:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildPreviewEmoji#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public roles: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildPruneMembersOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildPruneMembersOptions "
						}
					],
					"releaseTag": "Public",
					"name": "GuildPruneMembersOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildPruneMembersOptions#count:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "count?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "count",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildPruneMembersOptions#days:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "days?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "days",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildPruneMembersOptions#dry:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "dry?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "dry",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildPruneMembersOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildPruneMembersOptions#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "roles?: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Guild",
							"canonicalReference": "discord.js!Guild:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "NonThreadGuildBasedChannel",
							"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "GuildMember",
							"canonicalReference": "discord.js!GuildMember:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "GuildEmoji",
							"canonicalReference": "discord.js!GuildEmoji:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Invite",
							"canonicalReference": "discord.js!Invite:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Role",
							"canonicalReference": "discord.js!Role:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 14
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildScheduledEvent:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildScheduledEvent<S extends "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventStatus",
							"canonicalReference": "discord-api-types!GuildScheduledEventStatus:enum"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventStatus",
							"canonicalReference": "discord-api-types!GuildScheduledEventStatus:enum"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "S",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "GuildScheduledEvent",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get channel(): "
								},
								{
									"kind": "Reference",
									"text": "VoiceChannel",
									"canonicalReference": "discord.js!VoiceChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "StageChannel",
									"canonicalReference": "discord.js!StageChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#coverImageURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public coverImageURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BaseImageURLOptions",
									"canonicalReference": "@discordjs/rest!~BaseImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "coverImageURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#createInviteURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createInviteURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "CreateGuildScheduledEventInviteURLOptions",
									"canonicalReference": "discord.js!CreateGuildScheduledEventInviteURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<string>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "createInviteURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#creator:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public creator: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "creator",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#creatorId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public creatorId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "creatorId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<S>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit<T extends "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventSetStatusArg",
									"canonicalReference": "discord.js!GuildScheduledEventSetStatusArg:type"
								},
								{
									"kind": "Content",
									"text": "<S>"
								},
								{
									"kind": "Content",
									"text": ">(\n    options: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventEditOptions",
									"canonicalReference": "discord.js!GuildScheduledEventEditOptions:interface"
								},
								{
									"kind": "Content",
									"text": "<S, T>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#entityId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public entityId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "entityId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#entityMetadata:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public entityMetadata: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventEntityMetadata",
									"canonicalReference": "discord.js!GuildScheduledEventEntityMetadata:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "entityMetadata",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#entityType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public entityType: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventEntityType",
									"canonicalReference": "discord-api-types!GuildScheduledEventEntityType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "entityType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#fetchSubscribers:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchSubscribers<T extends "
								},
								{
									"kind": "Reference",
									"text": "FetchGuildScheduledEventSubscribersOptions",
									"canonicalReference": "discord.js!FetchGuildScheduledEventSubscribersOptions:interface"
								},
								{
									"kind": "Content",
									"text": ">(\n    options?: "
								},
								{
									"kind": "Content",
									"text": "T"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventManagerFetchSubscribersResult",
									"canonicalReference": "discord.js!GuildScheduledEventManagerFetchSubscribersResult:type"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchSubscribers"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guild(): "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#image:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public image: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "image",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#isActive:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isActive(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventStatus.Active",
									"canonicalReference": "discord-api-types!GuildScheduledEventStatus.Active:member"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isActive"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#isCanceled:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isCanceled(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventStatus.Canceled",
									"canonicalReference": "discord-api-types!GuildScheduledEventStatus.Canceled:member"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isCanceled"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#isCompleted:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isCompleted(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventStatus.Completed",
									"canonicalReference": "discord-api-types!GuildScheduledEventStatus.Completed:member"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isCompleted"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#isScheduled:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isScheduled(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventStatus.Scheduled",
									"canonicalReference": "discord-api-types!GuildScheduledEventStatus.Scheduled:member"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isScheduled"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#privacyLevel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public privacyLevel: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventPrivacyLevel",
									"canonicalReference": "discord-api-types!GuildScheduledEventPrivacyLevel:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "privacyLevel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#scheduledEndAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get scheduledEndAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "scheduledEndAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#scheduledEndTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public scheduledEndTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "scheduledEndTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#scheduledStartAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get scheduledStartAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "scheduledStartAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#scheduledStartTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public scheduledStartTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "scheduledStartTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#setDescription:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setDescription(description: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<S>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "description",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setDescription"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#setLocation:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setLocation(location: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<S>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "location",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setLocation"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#setName:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setName(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<S>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setName"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#setScheduledEndTime:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setScheduledEndTime(scheduledEndTime: "
								},
								{
									"kind": "Reference",
									"text": "DateResolvable",
									"canonicalReference": "discord.js!DateResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<S>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "scheduledEndTime",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setScheduledEndTime"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#setScheduledStartTime:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setScheduledStartTime(scheduledStartTime: "
								},
								{
									"kind": "Reference",
									"text": "DateResolvable",
									"canonicalReference": "discord.js!DateResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<S>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "scheduledStartTime",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setScheduledStartTime"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#setStatus:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setStatus<T extends "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventSetStatusArg",
									"canonicalReference": "discord.js!GuildScheduledEventSetStatusArg:type"
								},
								{
									"kind": "Content",
									"text": "<S>"
								},
								{
									"kind": "Content",
									"text": ">(\n    status: "
								},
								{
									"kind": "Content",
									"text": "T"
								},
								{
									"kind": "Content",
									"text": ",\n    reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "status",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 7
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setStatus"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#status:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public status: "
								},
								{
									"kind": "Content",
									"text": "S"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "status",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEvent#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get url(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEvent#userCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public userCount: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "userCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildScheduledEventCreateOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildScheduledEventCreateOptions "
						}
					],
					"releaseTag": "Public",
					"name": "GuildScheduledEventCreateOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventCreateOptions#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel?: "
								},
								{
									"kind": "Reference",
									"text": "GuildVoiceChannelResolvable",
									"canonicalReference": "discord.js!GuildVoiceChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventCreateOptions#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventCreateOptions#entityMetadata:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "entityMetadata?: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventEntityMetadataOptions",
									"canonicalReference": "discord.js!GuildScheduledEventEntityMetadataOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "entityMetadata",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventCreateOptions#entityType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "entityType: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventEntityType",
									"canonicalReference": "discord-api-types!GuildScheduledEventEntityType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "entityType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventCreateOptions#image:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "image?: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "image",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventCreateOptions#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventCreateOptions#privacyLevel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "privacyLevel: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventPrivacyLevel",
									"canonicalReference": "discord-api-types!GuildScheduledEventPrivacyLevel:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "privacyLevel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventCreateOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventCreateOptions#scheduledEndTime:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "scheduledEndTime?: "
								},
								{
									"kind": "Reference",
									"text": "DateResolvable",
									"canonicalReference": "discord.js!DateResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "scheduledEndTime",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventCreateOptions#scheduledStartTime:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "scheduledStartTime: "
								},
								{
									"kind": "Reference",
									"text": "DateResolvable",
									"canonicalReference": "discord.js!DateResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "scheduledStartTime",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildScheduledEventEditOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildScheduledEventEditOptions<\n  S extends "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventStatus",
							"canonicalReference": "discord-api-types!GuildScheduledEventStatus:enum"
						},
						{
							"kind": "Content",
							"text": ",\n  T extends "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventSetStatusArg",
							"canonicalReference": "discord.js!GuildScheduledEventSetStatusArg:type"
						},
						{
							"kind": "Content",
							"text": "<S>"
						},
						{
							"kind": "Content",
							"text": ",\n> extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Partial",
							"canonicalReference": "!Partial:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventCreateOptions",
							"canonicalReference": "discord.js!GuildScheduledEventCreateOptions:interface"
						},
						{
							"kind": "Content",
							"text": ">, 'channel'> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "S",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "GuildScheduledEventEditOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventEditOptions#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel?: "
								},
								{
									"kind": "Reference",
									"text": "GuildVoiceChannelResolvable",
									"canonicalReference": "discord.js!GuildVoiceChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventEditOptions#status:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "status?: "
								},
								{
									"kind": "Content",
									"text": "T"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "status",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 6,
							"endIndex": 11
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildScheduledEventEntityMetadata:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildScheduledEventEntityMetadata "
						}
					],
					"releaseTag": "Public",
					"name": "GuildScheduledEventEntityMetadata",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventEntityMetadata#location:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "location: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "location",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildScheduledEventEntityMetadataOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildScheduledEventEntityMetadataOptions "
						}
					],
					"releaseTag": "Public",
					"name": "GuildScheduledEventEntityMetadataOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventEntityMetadataOptions#location:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "location?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "location",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildScheduledEventManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildScheduledEventManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ",\n  "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEvent",
							"canonicalReference": "discord.js!GuildScheduledEvent:class"
						},
						{
							"kind": "Content",
							"text": ",\n  "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventResolvable",
							"canonicalReference": "discord.js!GuildScheduledEventResolvable:type"
						},
						{
							"kind": "Content",
							"text": "\n> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildScheduledEventManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEventManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(options: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventCreateOptions",
									"canonicalReference": "discord.js!GuildScheduledEventCreateOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEventManager#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(guildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventResolvable",
									"canonicalReference": "discord.js!GuildScheduledEventResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "guildScheduledEvent",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEventManager#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit<S extends "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventStatus",
									"canonicalReference": "discord-api-types!GuildScheduledEventStatus:enum"
								},
								{
									"kind": "Content",
									"text": ", T extends "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventSetStatusArg",
									"canonicalReference": "discord.js!GuildScheduledEventSetStatusArg:type"
								},
								{
									"kind": "Content",
									"text": "<S>"
								},
								{
									"kind": "Content",
									"text": ">(\n    guildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventResolvable",
									"canonicalReference": "discord.js!GuildScheduledEventResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventEditOptions",
									"canonicalReference": "discord.js!GuildScheduledEventEditOptions:interface"
								},
								{
									"kind": "Content",
									"text": "<S, T>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "S",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								},
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 11,
								"endIndex": 15
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "guildScheduledEvent",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 7
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 8,
										"endIndex": 10
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEventManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEventManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch<\n    T extends "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventResolvable",
									"canonicalReference": "discord.js!GuildScheduledEventResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "FetchGuildScheduledEventOptions",
									"canonicalReference": "discord.js!FetchGuildScheduledEventOptions:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "FetchGuildScheduledEventsOptions",
									"canonicalReference": "discord.js!FetchGuildScheduledEventsOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  >(options?: "
								},
								{
									"kind": "Content",
									"text": "T"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventManagerFetchResult",
									"canonicalReference": "discord.js!GuildScheduledEventManagerFetchResult:type"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 8
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildScheduledEventManager#fetchSubscribers:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchSubscribers<T extends "
								},
								{
									"kind": "Reference",
									"text": "FetchGuildScheduledEventSubscribersOptions",
									"canonicalReference": "discord.js!FetchGuildScheduledEventSubscribersOptions:interface"
								},
								{
									"kind": "Content",
									"text": ">(\n    guildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventResolvable",
									"canonicalReference": "discord.js!GuildScheduledEventResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    options?: "
								},
								{
									"kind": "Content",
									"text": "T"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEventManagerFetchSubscribersResult",
									"canonicalReference": "discord.js!GuildScheduledEventManagerFetchSubscribersResult:type"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "guildScheduledEvent",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchSubscribers"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildScheduledEventManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildScheduledEventManagerFetchResult:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildScheduledEventManagerFetchResult<\n  T extends "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventResolvable",
							"canonicalReference": "discord.js!GuildScheduledEventResolvable:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "FetchGuildScheduledEventOptions",
							"canonicalReference": "discord.js!FetchGuildScheduledEventOptions:interface"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "FetchGuildScheduledEventsOptions",
							"canonicalReference": "discord.js!FetchGuildScheduledEventsOptions:interface"
						},
						{
							"kind": "Content",
							"text": ",\n> = "
						},
						{
							"kind": "Content",
							"text": "T extends "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventResolvable",
							"canonicalReference": "discord.js!GuildScheduledEventResolvable:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "FetchGuildScheduledEventOptions",
							"canonicalReference": "discord.js!FetchGuildScheduledEventOptions:interface"
						},
						{
							"kind": "Content",
							"text": "\n  ? "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEvent",
							"canonicalReference": "discord.js!GuildScheduledEvent:class"
						},
						{
							"kind": "Content",
							"text": "\n  : "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEvent",
							"canonicalReference": "discord.js!GuildScheduledEvent:class"
						},
						{
							"kind": "Content",
							"text": ">"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildScheduledEventManagerFetchResult",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 7,
						"endIndex": 20
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildScheduledEventManagerFetchSubscribersResult:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildScheduledEventManagerFetchSubscribersResult<T extends "
						},
						{
							"kind": "Reference",
							"text": "FetchGuildScheduledEventSubscribersOptions",
							"canonicalReference": "discord.js!FetchGuildScheduledEventSubscribersOptions:interface"
						},
						{
							"kind": "Content",
							"text": "> =\n  "
						},
						{
							"kind": "Content",
							"text": "T extends { withMember: true }\n    ? "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventUser",
							"canonicalReference": "discord.js!GuildScheduledEventUser:interface"
						},
						{
							"kind": "Content",
							"text": "<true>>\n    : "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventUser",
							"canonicalReference": "discord.js!GuildScheduledEventUser:interface"
						},
						{
							"kind": "Content",
							"text": "<false>>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildScheduledEventManagerFetchSubscribersResult",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 3,
						"endIndex": 16
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildScheduledEventResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildScheduledEventResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEvent",
							"canonicalReference": "discord.js!GuildScheduledEvent:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildScheduledEventResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildScheduledEventSetStatusArg:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildScheduledEventSetStatusArg<T extends "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventStatus",
							"canonicalReference": "discord-api-types!GuildScheduledEventStatus:enum"
						},
						{
							"kind": "Content",
							"text": "> =\n  "
						},
						{
							"kind": "Content",
							"text": "T extends "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventStatus.Scheduled",
							"canonicalReference": "discord-api-types!GuildScheduledEventStatus.Scheduled:member"
						},
						{
							"kind": "Content",
							"text": "\n    ? "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventStatus.Active",
							"canonicalReference": "discord-api-types!GuildScheduledEventStatus.Active:member"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventStatus.Canceled",
							"canonicalReference": "discord-api-types!GuildScheduledEventStatus.Canceled:member"
						},
						{
							"kind": "Content",
							"text": "\n    : T extends "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventStatus.Active",
							"canonicalReference": "discord-api-types!GuildScheduledEventStatus.Active:member"
						},
						{
							"kind": "Content",
							"text": "\n    ? "
						},
						{
							"kind": "Reference",
							"text": "GuildScheduledEventStatus.Completed",
							"canonicalReference": "discord-api-types!GuildScheduledEventStatus.Completed:member"
						},
						{
							"kind": "Content",
							"text": "\n    : never"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildScheduledEventSetStatusArg",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 3,
						"endIndex": 14
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildScheduledEventUser:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildScheduledEventUser<T> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "GuildScheduledEventUser",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventUser#guildScheduledEventId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildScheduledEventId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildScheduledEventId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventUser#member:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "member: "
								},
								{
									"kind": "Content",
									"text": "T extends true ? "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " : null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "member",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildScheduledEventUser#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildSearchMembersOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildSearchMembersOptions "
						}
					],
					"releaseTag": "Public",
					"name": "GuildSearchMembersOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildSearchMembersOptions#cache:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "cache",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildSearchMembersOptions#limit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "limit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "limit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildSearchMembersOptions#query:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "query: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "query",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildStickerCreateOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildStickerCreateOptions "
						}
					],
					"releaseTag": "Public",
					"name": "GuildStickerCreateOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildStickerCreateOptions#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildStickerCreateOptions#file:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "file: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Stream",
									"canonicalReference": "!internal.Stream:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "AttachmentPayload",
									"canonicalReference": "discord.js!AttachmentPayload:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AttachmentBuilder",
									"canonicalReference": "discord.js!AttachmentBuilder:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "file",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 11
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildStickerCreateOptions#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildStickerCreateOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildStickerCreateOptions#tags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "tags: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "tags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildStickerEditData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildStickerEditData "
						}
					],
					"releaseTag": "Public",
					"name": "GuildStickerEditData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildStickerEditData#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildStickerEditData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildStickerEditData#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildStickerEditData#tags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "tags?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "tags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildStickerManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildStickerManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Sticker",
							"canonicalReference": "discord.js!Sticker:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "StickerResolvable",
							"canonicalReference": "discord.js!StickerResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "GuildStickerManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildStickerManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(options: "
								},
								{
									"kind": "Reference",
									"text": "GuildStickerCreateOptions",
									"canonicalReference": "discord.js!GuildStickerCreateOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildStickerManager#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(sticker: "
								},
								{
									"kind": "Reference",
									"text": "StickerResolvable",
									"canonicalReference": "discord.js!StickerResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "sticker",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildStickerManager#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(sticker: "
								},
								{
									"kind": "Reference",
									"text": "StickerResolvable",
									"canonicalReference": "discord.js!StickerResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", data?: "
								},
								{
									"kind": "Reference",
									"text": "GuildStickerEditData",
									"canonicalReference": "discord.js!GuildStickerEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "sticker",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildStickerManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildStickerManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(id?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildStickerManager#fetchUser:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchUser(sticker: "
								},
								{
									"kind": "Reference",
									"text": "StickerResolvable",
									"canonicalReference": "discord.js!StickerResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "sticker",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchUser"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildStickerManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!GuildTemplate:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class GuildTemplate extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "GuildTemplate",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#code:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public code: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "code",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createdTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildTemplate#createGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createGuild(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", icon?: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "icon",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 6
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "createGuild"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#creator:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public creator: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "creator",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#creatorId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public creatorId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "creatorId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildTemplate#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildTemplate",
									"canonicalReference": "discord.js!GuildTemplate:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildTemplate#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(options?: "
								},
								{
									"kind": "Reference",
									"text": "EditGuildTemplateOptions",
									"canonicalReference": "discord.js!EditGuildTemplateOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildTemplate",
									"canonicalReference": "discord.js!GuildTemplate:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guild(): "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate.GuildTemplatesPattern:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static GuildTemplatesPattern: "
								},
								{
									"kind": "Reference",
									"text": "RegExp",
									"canonicalReference": "!RegExp:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "GuildTemplatesPattern",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#serializedGuild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public serializedGuild: "
								},
								{
									"kind": "Reference",
									"text": "APITemplateSerializedSourceGuild",
									"canonicalReference": "discord-api-types!APITemplateSerializedSourceGuild:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "serializedGuild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!GuildTemplate#sync:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sync(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildTemplate",
									"canonicalReference": "discord.js!GuildTemplate:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "sync"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#unSynced:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public unSynced: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "unSynced",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#updatedAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get updatedAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "updatedAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#updatedTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public updatedTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "updatedTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get url(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!GuildTemplate#usageCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public usageCount: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "usageCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildTemplateResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildTemplateResolvable = "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildTemplateResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildTextBasedChannel:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildTextBasedChannel = "
						},
						{
							"kind": "Reference",
							"text": "Extract",
							"canonicalReference": "!Extract:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "GuildBasedChannel",
							"canonicalReference": "discord.js!GuildBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannel",
							"canonicalReference": "discord.js!TextBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": ">"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildTextBasedChannel",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 7
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildTextChannelResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildTextChannelResolvable = "
						},
						{
							"kind": "Reference",
							"text": "TextChannel",
							"canonicalReference": "discord.js!TextChannel:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "NewsChannel",
							"canonicalReference": "discord.js!NewsChannel:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildTextChannelResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!GuildVoiceChannelResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type GuildVoiceChannelResolvable = "
						},
						{
							"kind": "Reference",
							"text": "VoiceBasedChannel",
							"canonicalReference": "discord.js!VoiceBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "GuildVoiceChannelResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildWidgetSettings:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildWidgetSettings "
						}
					],
					"releaseTag": "Public",
					"name": "GuildWidgetSettings",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildWidgetSettings#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel: "
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildWidgetSettings#enabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "enabled: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "enabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!GuildWidgetSettingsData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface GuildWidgetSettingsData "
						}
					],
					"releaseTag": "Public",
					"name": "GuildWidgetSettingsData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildWidgetSettingsData#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelResolvable",
									"canonicalReference": "discord.js!GuildChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!GuildWidgetSettingsData#enabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "enabled: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "enabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!HexColorString:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type HexColorString = "
						},
						{
							"kind": "Content",
							"text": "`#${string}`"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "HexColorString",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!IconData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface IconData "
						}
					],
					"releaseTag": "Public",
					"name": "IconData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!IconData#iconURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "iconURL?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "iconURL",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!IconData#proxyIconURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "proxyIconURL?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "proxyIconURL",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!If:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type If<T extends "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": ", A, B = "
						},
						{
							"kind": "Content",
							"text": "null"
						},
						{
							"kind": "Content",
							"text": "> = "
						},
						{
							"kind": "Content",
							"text": "T extends true ? A : T extends false ? B : A | B"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "If",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "A",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "B",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Integration:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Integration extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Integration",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#account:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public account: "
								},
								{
									"kind": "Reference",
									"text": "IntegrationAccount",
									"canonicalReference": "discord.js!IntegrationAccount:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "account",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#application:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public application: "
								},
								{
									"kind": "Reference",
									"text": "IntegrationApplication",
									"canonicalReference": "discord.js!IntegrationApplication:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "application",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Integration#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Integration",
									"canonicalReference": "discord.js!Integration:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#enabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public enabled: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "enabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#enableEmoticons:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public enableEmoticons: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "enableEmoticons",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#expireBehavior:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public expireBehavior: "
								},
								{
									"kind": "Reference",
									"text": "IntegrationExpireBehavior",
									"canonicalReference": "discord-api-types!IntegrationExpireBehavior:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "expireBehavior",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#expireGracePeriod:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public expireGracePeriod: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "expireGracePeriod",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#revoked:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public revoked: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "revoked",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#role:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public role: "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "role",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get roles(): "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#subscriberCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public subscriberCount: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "subscriberCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#syncedAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get syncedAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "syncedAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#syncedTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public syncedTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "syncedTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#syncing:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public syncing: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "syncing",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "IntegrationType",
									"canonicalReference": "discord.js!IntegrationType:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Integration#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!IntegrationAccount:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface IntegrationAccount "
						}
					],
					"releaseTag": "Public",
					"name": "IntegrationAccount",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!IntegrationAccount#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!IntegrationAccount#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!IntegrationApplication:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class IntegrationApplication extends "
						},
						{
							"kind": "Reference",
							"text": "Application",
							"canonicalReference": "discord.js!Application:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "IntegrationApplication",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!IntegrationApplication#bot:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public bot: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "bot",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!IntegrationApplication#cover:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public cover: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "cover",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!IntegrationApplication#hook:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public hook: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "hook",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!IntegrationApplication#privacyPolicyURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public privacyPolicyURL: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "privacyPolicyURL",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!IntegrationApplication#rpcOrigins:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public rpcOrigins: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rpcOrigins",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!IntegrationApplication#termsOfServiceURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public termsOfServiceURL: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "termsOfServiceURL",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!IntegrationApplication#verifyKey:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public verifyKey: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "verifyKey",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!IntegrationType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type IntegrationType = "
						},
						{
							"kind": "Content",
							"text": "'twitch' | 'youtube' | 'discord'"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "IntegrationType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!IntentsBitField:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class IntentsBitField extends "
						},
						{
							"kind": "Reference",
							"text": "BitField",
							"canonicalReference": "discord.js!BitField:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "GatewayIntentsString",
							"canonicalReference": "discord.js!GatewayIntentsString:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "IntentsBitField",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!IntentsBitField.Flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Flags: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "GatewayIntentBits",
									"canonicalReference": "discord-api-types!GatewayIntentBits:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!IntentsBitField.resolve:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolve(bit?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GatewayIntentsString",
									"canonicalReference": "discord.js!GatewayIntentsString:type"
								},
								{
									"kind": "Content",
									"text": ", number>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "resolve"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!Interaction:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type Interaction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "ChatInputCommandInteraction",
							"canonicalReference": "discord.js!ChatInputCommandInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached>\n  | "
						},
						{
							"kind": "Reference",
							"text": "MessageContextMenuCommandInteraction",
							"canonicalReference": "discord.js!MessageContextMenuCommandInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached>\n  | "
						},
						{
							"kind": "Reference",
							"text": "UserContextMenuCommandInteraction",
							"canonicalReference": "discord.js!UserContextMenuCommandInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached>\n  | "
						},
						{
							"kind": "Reference",
							"text": "SelectMenuInteraction",
							"canonicalReference": "discord.js!SelectMenuInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached>\n  | "
						},
						{
							"kind": "Reference",
							"text": "ButtonInteraction",
							"canonicalReference": "discord.js!ButtonInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached>\n  | "
						},
						{
							"kind": "Reference",
							"text": "AutocompleteInteraction",
							"canonicalReference": "discord.js!AutocompleteInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached>\n  | "
						},
						{
							"kind": "Reference",
							"text": "ModalSubmitInteraction",
							"canonicalReference": "discord.js!ModalSubmitInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "Interaction",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 6,
						"endIndex": 21
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!InteractionButtonComponentData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface InteractionButtonComponentData extends "
						},
						{
							"kind": "Reference",
							"text": "BaseButtonComponentData",
							"canonicalReference": "discord.js!BaseButtonComponentData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "InteractionButtonComponentData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionButtonComponentData#customId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "customId: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "customId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionButtonComponentData#style:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "style: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ButtonStyle",
									"canonicalReference": "discord-api-types!ButtonStyle:enum"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ButtonStyle.Link",
									"canonicalReference": "discord-api-types!ButtonStyle.Link:member"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "style",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!InteractionCollector:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class InteractionCollector<T extends "
						},
						{
							"kind": "Reference",
							"text": "CollectedInteraction",
							"canonicalReference": "discord.js!CollectedInteraction:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "Collector",
							"canonicalReference": "discord.js!Collector:class"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ",\n  T,\n  ["
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", T>]\n> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "InteractionCollector",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!InteractionCollector:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `InteractionCollector` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "InteractionCollectorOptions",
									"canonicalReference": "discord.js!InteractionCollectorOptions:interface"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionCollector#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionCollector#collect:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public collect(interaction: "
								},
								{
									"kind": "Reference",
									"text": "Interaction",
									"canonicalReference": "discord.js!Interaction:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "interaction",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "collect"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionCollector#componentType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public componentType: "
								},
								{
									"kind": "Reference",
									"text": "ComponentType",
									"canonicalReference": "discord-api-types!ComponentType:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "componentType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionCollector#dispose:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public dispose(interaction: "
								},
								{
									"kind": "Reference",
									"text": "Interaction",
									"canonicalReference": "discord.js!Interaction:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "interaction",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "dispose"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionCollector#empty:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public empty(): "
								},
								{
									"kind": "Content",
									"text": "void"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "empty"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionCollector#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionCollector#interactionType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public interactionType: "
								},
								{
									"kind": "Reference",
									"text": "InteractionType",
									"canonicalReference": "discord-api-types!InteractionType:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "interactionType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionCollector#messageId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public messageId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionCollector#messageInteractionId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public messageInteractionId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageInteractionId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionCollector#on:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on(event: "
								},
								{
									"kind": "Content",
									"text": "'collect' | 'dispose' | 'ignore'"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(interaction: T) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionCollector#on:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on(event: "
								},
								{
									"kind": "Content",
									"text": "'end'"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(collected: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", T>, reason: string) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 11,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 10
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionCollector#on:member(3)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on(event: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: any[]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 3,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionCollector#once:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once(event: "
								},
								{
									"kind": "Content",
									"text": "'collect' | 'dispose' | 'ignore'"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(interaction: T) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionCollector#once:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once(event: "
								},
								{
									"kind": "Content",
									"text": "'end'"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(collected: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", T>, reason: string) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 11,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 10
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionCollector#once:member(3)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once(event: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: any[]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 3,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionCollector#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionCollectorOptions",
									"canonicalReference": "discord.js!InteractionCollectorOptions:interface"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionCollector#total:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public total: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "total",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionCollector#users:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public users: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "users",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 3,
						"endIndex": 10
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!InteractionCollectorOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface InteractionCollectorOptions<T extends "
						},
						{
							"kind": "Reference",
							"text": "CollectedInteraction",
							"canonicalReference": "discord.js!CollectedInteraction:type"
						},
						{
							"kind": "Content",
							"text": ", Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": ">\n  extends "
						},
						{
							"kind": "Reference",
							"text": "CollectorOptions",
							"canonicalReference": "discord.js!CollectorOptions:interface"
						},
						{
							"kind": "Content",
							"text": "<[T, "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", T>]> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"defaultTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							}
						}
					],
					"name": "InteractionCollectorOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionCollectorOptions#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel?: "
								},
								{
									"kind": "Reference",
									"text": "TextBasedChannelResolvable",
									"canonicalReference": "discord.js!TextBasedChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionCollectorOptions#componentType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "componentType?: "
								},
								{
									"kind": "Reference",
									"text": "ComponentType",
									"canonicalReference": "discord-api-types!ComponentType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "componentType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionCollectorOptions#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guild?: "
								},
								{
									"kind": "Reference",
									"text": "GuildResolvable",
									"canonicalReference": "discord.js!GuildResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionCollectorOptions#interactionResponse:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "interactionResponse?: "
								},
								{
									"kind": "Reference",
									"text": "InteractionResponse",
									"canonicalReference": "discord.js!InteractionResponse:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "interactionResponse",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionCollectorOptions#interactionType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "interactionType?: "
								},
								{
									"kind": "Reference",
									"text": "InteractionType",
									"canonicalReference": "discord-api-types!InteractionType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "interactionType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionCollectorOptions#max:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "max?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "max",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionCollectorOptions#maxComponents:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxComponents?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxComponents",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionCollectorOptions#maxUsers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxUsers?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxUsers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionCollectorOptions#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "message?: "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIMessage",
									"canonicalReference": "discord-api-types!APIMessage:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 8,
							"endIndex": 13
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!InteractionDeferReplyOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface InteractionDeferReplyOptions "
						}
					],
					"releaseTag": "Public",
					"name": "InteractionDeferReplyOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionDeferReplyOptions#ephemeral:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ephemeral?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "ephemeral",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionDeferReplyOptions#fetchReply:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "fetchReply?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "fetchReply",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!InteractionDeferUpdateOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type InteractionDeferUpdateOptions = "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "InteractionDeferReplyOptions",
							"canonicalReference": "discord.js!InteractionDeferReplyOptions:interface"
						},
						{
							"kind": "Content",
							"text": ", 'ephemeral'>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "InteractionDeferUpdateOptions",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!InteractionReplyOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface InteractionReplyOptions extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "WebhookMessageOptions",
							"canonicalReference": "discord.js!WebhookMessageOptions:interface"
						},
						{
							"kind": "Content",
							"text": ", 'username' | 'avatarURL' | 'flags'> "
						}
					],
					"releaseTag": "Public",
					"name": "InteractionReplyOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionReplyOptions#ephemeral:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ephemeral?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "ephemeral",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionReplyOptions#fetchReply:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "fetchReply?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "fetchReply",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionReplyOptions#flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "flags?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Extract",
									"canonicalReference": "!Extract:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageFlagsString",
									"canonicalReference": "discord.js!MessageFlagsString:type"
								},
								{
									"kind": "Content",
									"text": ", 'SuppressEmbeds' | 'Ephemeral'>, number>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!InteractionResponse:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class InteractionResponse<Cached extends "
						},
						{
							"kind": "Content",
							"text": "boolean "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						}
					],
					"name": "InteractionResponse",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionResponse#awaitMessageComponent:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public awaitMessageComponent<T extends "
								},
								{
									"kind": "Reference",
									"text": "MessageComponentType",
									"canonicalReference": "discord.js!MessageComponentType:type"
								},
								{
									"kind": "Content",
									"text": ">(\n    options?: "
								},
								{
									"kind": "Reference",
									"text": "AwaitMessageCollectorOptionsParams",
									"canonicalReference": "discord.js!AwaitMessageCollectorOptionsParams:type"
								},
								{
									"kind": "Content",
									"text": "<T, Cached>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MappedInteractionTypes",
									"canonicalReference": "discord.js!MappedInteractionTypes:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>[T]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "awaitMessageComponent"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionResponse#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionResponse#createMessageComponentCollector:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createMessageComponentCollector<T extends "
								},
								{
									"kind": "Reference",
									"text": "MessageComponentType",
									"canonicalReference": "discord.js!MessageComponentType:type"
								},
								{
									"kind": "Content",
									"text": ">(\n    options?: "
								},
								{
									"kind": "Reference",
									"text": "MessageCollectorOptionsParams",
									"canonicalReference": "discord.js!MessageCollectorOptionsParams:type"
								},
								{
									"kind": "Content",
									"text": "<T, Cached>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "InteractionCollector",
									"canonicalReference": "discord.js!InteractionCollector:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MappedInteractionTypes",
									"canonicalReference": "discord.js!MappedInteractionTypes:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>[T]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "createMessageComponentCollector"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionResponse#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionResponse#interaction:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public interaction: "
								},
								{
									"kind": "Reference",
									"text": "Interaction",
									"canonicalReference": "discord.js!Interaction:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "WrapBooleanCache",
									"canonicalReference": "discord.js!WrapBooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "interaction",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!InteractionResponseFields:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface InteractionResponseFields<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "InteractionResponseFields",
					"members": [
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!InteractionResponseFields#awaitModalSubmit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "awaitModalSubmit(options: "
								},
								{
									"kind": "Reference",
									"text": "AwaitModalSubmitOptions",
									"canonicalReference": "discord.js!AwaitModalSubmitOptions:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalSubmitInteraction:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalSubmitInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"name": "awaitModalSubmit"
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionResponseFields#deferred:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deferred: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deferred",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!InteractionResponseFields#deferReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deferReply(options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferReplyOptions",
									"canonicalReference": "discord.js!InteractionDeferReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"name": "deferReply"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!InteractionResponseFields#deferReply:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deferReply(options?: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferReplyOptions",
									"canonicalReference": "discord.js!InteractionDeferReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"name": "deferReply"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!InteractionResponseFields#deleteReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deleteReply(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [],
							"name": "deleteReply"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!InteractionResponseFields#editReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "editReply(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookEditMessageOptions",
									"canonicalReference": "discord.js!WebhookEditMessageOptions:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"name": "editReply"
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionResponseFields#ephemeral:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ephemeral: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ephemeral",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!InteractionResponseFields#fetchReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "fetchReply(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [],
							"name": "fetchReply"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!InteractionResponseFields#followUp:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "followUp(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"name": "followUp"
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionResponseFields#replied:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "replied: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "replied",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!InteractionResponseFields#reply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reply(options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"name": "reply"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!InteractionResponseFields#reply:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reply(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"name": "reply"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!InteractionResponseFields#showModal:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "showModal(\n    modal:\n      "
								},
								{
									"kind": "Content",
									"text": "| "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIModalInteractionResponseCallbackData",
									"canonicalReference": "discord-api-types!APIModalInteractionResponseCallbackData:interface"
								},
								{
									"kind": "Content",
									"text": ">\n      | "
								},
								{
									"kind": "Reference",
									"text": "ModalComponentData",
									"canonicalReference": "discord.js!ModalComponentData:interface"
								},
								{
									"kind": "Content",
									"text": "\n      | "
								},
								{
									"kind": "Reference",
									"text": "APIModalInteractionResponseCallbackData",
									"canonicalReference": "discord-api-types!APIModalInteractionResponseCallbackData:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 10,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "modal",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 9
									},
									"isOptional": false
								}
							],
							"name": "showModal"
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionResponseFields#webhook:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "webhook: "
								},
								{
									"kind": "Reference",
									"text": "InteractionWebhook",
									"canonicalReference": "discord.js!InteractionWebhook:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "webhook",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!InteractionUpdateOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface InteractionUpdateOptions extends "
						},
						{
							"kind": "Reference",
							"text": "MessageEditOptions",
							"canonicalReference": "discord.js!MessageEditOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "InteractionUpdateOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InteractionUpdateOptions#fetchReply:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "fetchReply?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "fetchReply",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!InteractionWebhook:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class InteractionWebhook extends "
						},
						{
							"kind": "Reference",
							"text": "PartialWebhookMixin",
							"canonicalReference": "discord.js!PartialWebhookMixin"
						},
						{
							"kind": "Content",
							"text": "() "
						}
					],
					"releaseTag": "Public",
					"name": "InteractionWebhook",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!InteractionWebhook:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `InteractionWebhook` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", token: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "token",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionWebhook#editMessage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public editMessage(\n    message: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookEditMessageOptions",
									"canonicalReference": "discord.js!WebhookEditMessageOptions:type"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "editMessage"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionWebhook#fetchMessage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchMessage(message: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchMessage"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!InteractionWebhook#send:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public send(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "send"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InteractionWebhook#token:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public token: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "token",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Invite:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Invite extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Invite",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channel: "
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialGroupDMChannel",
									"canonicalReference": "discord.js!PartialGroupDMChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#code:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public code: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "code",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createdTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#deletable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get deletable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deletable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Invite#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#expiresAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get expiresAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "expiresAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#expiresTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get expiresTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "expiresTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "InviteGuild",
									"canonicalReference": "discord.js!InviteGuild:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#guildScheduledEvent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildScheduledEvent: "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildScheduledEvent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#inviter:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get inviter(): "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "inviter",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#inviterId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inviterId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "inviterId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite.InvitesPattern:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static InvitesPattern: "
								},
								{
									"kind": "Reference",
									"text": "RegExp",
									"canonicalReference": "!RegExp:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "InvitesPattern",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#maxAge:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public maxAge: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "maxAge",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#maxUses:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public maxUses: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "maxUses",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#memberCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public memberCount: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "memberCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#presenceCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public presenceCount: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "presenceCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#stageInstance:member",
							"docComment": "/**\n * @deprecated\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public stageInstance: "
								},
								{
									"kind": "Reference",
									"text": "InviteStageInstance",
									"canonicalReference": "discord.js!InviteStageInstance:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stageInstance",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#targetApplication:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public targetApplication: "
								},
								{
									"kind": "Reference",
									"text": "IntegrationApplication",
									"canonicalReference": "discord.js!IntegrationApplication:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "targetApplication",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#targetType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public targetType: "
								},
								{
									"kind": "Reference",
									"text": "InviteTargetType",
									"canonicalReference": "discord-api-types!InviteTargetType:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "targetType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#targetUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public targetUser: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "targetUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#temporary:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public temporary: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "temporary",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Invite#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Invite#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get url(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Invite#uses:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public uses: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "uses",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!InviteGenerationOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface InviteGenerationOptions "
						}
					],
					"releaseTag": "Public",
					"name": "InviteGenerationOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InviteGenerationOptions#disableGuildSelect:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "disableGuildSelect?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "disableGuildSelect",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InviteGenerationOptions#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guild?: "
								},
								{
									"kind": "Reference",
									"text": "GuildResolvable",
									"canonicalReference": "discord.js!GuildResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InviteGenerationOptions#permissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "permissions?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "permissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!InviteGenerationOptions#scopes:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "scopes: "
								},
								{
									"kind": "Reference",
									"text": "OAuth2Scopes",
									"canonicalReference": "discord-api-types!OAuth2Scopes:enum"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "scopes",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!InviteGuild:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class InviteGuild extends "
						},
						{
							"kind": "Reference",
							"text": "AnonymousGuild",
							"canonicalReference": "discord.js!AnonymousGuild:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "InviteGuild",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InviteGuild#welcomeScreen:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public welcomeScreen: "
								},
								{
									"kind": "Reference",
									"text": "WelcomeScreen",
									"canonicalReference": "discord.js!WelcomeScreen:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "welcomeScreen",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!InviteResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type InviteResolvable = "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "InviteResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!InviteStageInstance:class",
					"docComment": "/**\n * @deprecated\n */\n",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class InviteStageInstance extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "InviteStageInstance",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InviteStageInstance#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get channel(): "
								},
								{
									"kind": "Reference",
									"text": "StageChannel",
									"canonicalReference": "discord.js!StageChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InviteStageInstance#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InviteStageInstance#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guild(): "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InviteStageInstance#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InviteStageInstance#members:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public members: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "members",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InviteStageInstance#participantCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public participantCount: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "participantCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InviteStageInstance#speakerCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public speakerCount: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "speakerCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!InviteStageInstance#topic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public topic: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "topic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!LifetimeFilterOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface LifetimeFilterOptions<K, V> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "K",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "V",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "LifetimeFilterOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!LifetimeFilterOptions#excludeFromSweep:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "excludeFromSweep?: "
								},
								{
									"kind": "Content",
									"text": "(value: V, key: K, collection: "
								},
								{
									"kind": "Reference",
									"text": "LimitedCollection",
									"canonicalReference": "discord.js!LimitedCollection:class"
								},
								{
									"kind": "Content",
									"text": "<K, V>) => boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "excludeFromSweep",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!LifetimeFilterOptions#getComparisonTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "getComparisonTimestamp?: "
								},
								{
									"kind": "Content",
									"text": "(value: V, key: K, collection: "
								},
								{
									"kind": "Reference",
									"text": "LimitedCollection",
									"canonicalReference": "discord.js!LimitedCollection:class"
								},
								{
									"kind": "Content",
									"text": "<K, V>) => number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "getComparisonTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!LifetimeFilterOptions#lifetime:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "lifetime?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "lifetime",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!LifetimeSweepOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface LifetimeSweepOptions "
						}
					],
					"releaseTag": "Public",
					"name": "LifetimeSweepOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!LifetimeSweepOptions#filter:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "filter?: "
								},
								{
									"kind": "Content",
									"text": "never"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "filter",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!LifetimeSweepOptions#interval:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "interval: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "interval",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!LifetimeSweepOptions#lifetime:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "lifetime: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "lifetime",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!LimitedCollection:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class LimitedCollection<K, V> extends "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<K, V> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "K",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "V",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "LimitedCollection",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!LimitedCollection:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `LimitedCollection` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(options?: "
								},
								{
									"kind": "Reference",
									"text": "LimitedCollectionOptions",
									"canonicalReference": "discord.js!LimitedCollectionOptions:interface"
								},
								{
									"kind": "Content",
									"text": "<K, V>"
								},
								{
									"kind": "Content",
									"text": ", iterable?: "
								},
								{
									"kind": "Reference",
									"text": "Iterable",
									"canonicalReference": "!Iterable:interface"
								},
								{
									"kind": "Content",
									"text": "<readonly [K, V]>"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": true
								},
								{
									"parameterName": "iterable",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 6
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!LimitedCollection#keepOverLimit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public keepOverLimit: "
								},
								{
									"kind": "Content",
									"text": "((value: V, key: K, collection: this) => boolean) | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "keepOverLimit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!LimitedCollection#maxSize:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public maxSize: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "maxSize",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!LimitedCollectionOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface LimitedCollectionOptions<K, V> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "K",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "V",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "LimitedCollectionOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!LimitedCollectionOptions#keepOverLimit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "keepOverLimit?: "
								},
								{
									"kind": "Content",
									"text": "(value: V, key: K, collection: "
								},
								{
									"kind": "Reference",
									"text": "LimitedCollection",
									"canonicalReference": "discord.js!LimitedCollection:class"
								},
								{
									"kind": "Content",
									"text": "<K, V>) => boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "keepOverLimit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!LimitedCollectionOptions#maxSize:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxSize?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxSize",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!LinkButtonComponentData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface LinkButtonComponentData extends "
						},
						{
							"kind": "Reference",
							"text": "BaseButtonComponentData",
							"canonicalReference": "discord.js!BaseButtonComponentData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "LinkButtonComponentData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!LinkButtonComponentData#style:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "style: "
								},
								{
									"kind": "Reference",
									"text": "ButtonStyle.Link",
									"canonicalReference": "discord-api-types!ButtonStyle.Link:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "style",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!LinkButtonComponentData#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "url: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!makeError:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function makeError(obj: "
						},
						{
							"kind": "Reference",
							"text": "MakeErrorOptions",
							"canonicalReference": "discord.js!MakeErrorOptions:interface"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Reference",
							"text": "Error",
							"canonicalReference": "!Error:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "obj",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "makeError"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MakeErrorOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MakeErrorOptions "
						}
					],
					"releaseTag": "Public",
					"name": "MakeErrorOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MakeErrorOptions#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "message: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MakeErrorOptions#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MakeErrorOptions#stack:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "stack: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stack",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!makePlainError:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function makePlainError(err: "
						},
						{
							"kind": "Reference",
							"text": "Error",
							"canonicalReference": "!Error:interface"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Reference",
							"text": "MakeErrorOptions",
							"canonicalReference": "discord.js!MakeErrorOptions:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "err",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "makePlainError"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MappedChannelCategoryTypes:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MappedChannelCategoryTypes "
						}
					],
					"releaseTag": "Public",
					"name": "MappedChannelCategoryTypes",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedChannelCategoryTypes#\"0\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildText",
									"canonicalReference": "discord-api-types!ChannelType.GuildText:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"0\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedChannelCategoryTypes#\"13\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildStageVoice",
									"canonicalReference": "discord-api-types!ChannelType.GuildStageVoice:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "StageChannel",
									"canonicalReference": "discord.js!StageChannel:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"13\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedChannelCategoryTypes#\"15\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildForum",
									"canonicalReference": "discord-api-types!ChannelType.GuildForum:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Content",
									"text": "never"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"15\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedChannelCategoryTypes#\"2\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildVoice",
									"canonicalReference": "discord-api-types!ChannelType.GuildVoice:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "VoiceChannel",
									"canonicalReference": "discord.js!VoiceChannel:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"2\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedChannelCategoryTypes#\"5\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildNews",
									"canonicalReference": "discord-api-types!ChannelType.GuildNews:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "NewsChannel",
									"canonicalReference": "discord.js!NewsChannel:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"5\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MappedComponentBuilderTypes:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MappedComponentBuilderTypes "
						}
					],
					"releaseTag": "Public",
					"name": "MappedComponentBuilderTypes",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedComponentBuilderTypes#\"1\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ComponentType.ActionRow",
									"canonicalReference": "discord-api-types!ComponentType.ActionRow:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "ActionRowBuilder",
									"canonicalReference": "discord.js!ActionRowBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"1\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedComponentBuilderTypes#\"2\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ComponentType.Button",
									"canonicalReference": "discord-api-types!ComponentType.Button:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "ButtonBuilder",
									"canonicalReference": "discord.js!ButtonBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"2\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedComponentBuilderTypes#\"3\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ComponentType.SelectMenu",
									"canonicalReference": "discord-api-types!ComponentType.SelectMenu:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuBuilder",
									"canonicalReference": "discord.js!SelectMenuBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"3\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedComponentBuilderTypes#\"4\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ComponentType.TextInput",
									"canonicalReference": "discord-api-types!ComponentType.TextInput:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "TextInputBuilder",
									"canonicalReference": "discord.js!TextInputBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"4\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MappedComponentTypes:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MappedComponentTypes "
						}
					],
					"releaseTag": "Public",
					"name": "MappedComponentTypes",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedComponentTypes#\"1\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ComponentType.ActionRow",
									"canonicalReference": "discord-api-types!ComponentType.ActionRow:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "ActionRowComponent",
									"canonicalReference": "discord.js!ActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"1\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedComponentTypes#\"2\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ComponentType.Button",
									"canonicalReference": "discord-api-types!ComponentType.Button:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "ButtonComponent",
									"canonicalReference": "discord.js!ButtonComponent:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"2\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedComponentTypes#\"3\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ComponentType.SelectMenu",
									"canonicalReference": "discord-api-types!ComponentType.SelectMenu:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuComponent",
									"canonicalReference": "discord.js!SelectMenuComponent:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"3\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedComponentTypes#\"4\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ComponentType.TextInput",
									"canonicalReference": "discord-api-types!ComponentType.TextInput:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "TextInputComponent",
									"canonicalReference": "discord.js!TextInputComponent:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"4\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MappedGuildChannelTypes:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MappedGuildChannelTypes = "
						},
						{
							"kind": "Content",
							"text": "{\n  ["
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildCategory",
							"canonicalReference": "discord-api-types!ChannelType.GuildCategory:member"
						},
						{
							"kind": "Content",
							"text": "]: "
						},
						{
							"kind": "Reference",
							"text": "CategoryChannel",
							"canonicalReference": "discord.js!CategoryChannel:class"
						},
						{
							"kind": "Content",
							"text": ";\n} & "
						},
						{
							"kind": "Reference",
							"text": "MappedChannelCategoryTypes",
							"canonicalReference": "discord.js!MappedChannelCategoryTypes:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MappedGuildChannelTypes",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 7
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MappedInteractionTypes:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MappedInteractionTypes<Cached extends "
						},
						{
							"kind": "Content",
							"text": "boolean "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						}
					],
					"name": "MappedInteractionTypes",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedInteractionTypes#\"2\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ComponentType.Button",
									"canonicalReference": "discord-api-types!ComponentType.Button:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "ButtonInteraction",
									"canonicalReference": "discord.js!ButtonInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "WrapBooleanCache",
									"canonicalReference": "discord.js!WrapBooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"2\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MappedInteractionTypes#\"3\":member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "ComponentType.SelectMenu",
									"canonicalReference": "discord-api-types!ComponentType.SelectMenu:member"
								},
								{
									"kind": "Content",
									"text": "]: "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuInteraction",
									"canonicalReference": "discord.js!SelectMenuInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "WrapBooleanCache",
									"canonicalReference": "discord.js!WrapBooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "\"3\"",
							"propertyTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MemberMention:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MemberMention = "
						},
						{
							"kind": "Reference",
							"text": "UserMention",
							"canonicalReference": "discord.js!UserMention:type"
						},
						{
							"kind": "Content",
							"text": " | `<@!${"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": "}>`"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MemberMention",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!mergeDefault:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function mergeDefault(def: "
						},
						{
							"kind": "Content",
							"text": "unknown"
						},
						{
							"kind": "Content",
							"text": ", given: "
						},
						{
							"kind": "Content",
							"text": "unknown"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "unknown"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "def",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						},
						{
							"parameterName": "given",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"isOptional": false
						}
					],
					"name": "mergeDefault"
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Message:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Message<Cached extends "
						},
						{
							"kind": "Content",
							"text": "boolean "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							}
						}
					],
					"name": "Message",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#activity:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public activity: "
								},
								{
									"kind": "Reference",
									"text": "MessageActivity",
									"canonicalReference": "discord.js!MessageActivity:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "activity",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#applicationId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public applicationId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "applicationId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#attachments:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public attachments: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Attachment",
									"canonicalReference": "discord.js!Attachment:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "attachments",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#author:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public author: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "author",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#awaitMessageComponent:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public awaitMessageComponent<T extends "
								},
								{
									"kind": "Reference",
									"text": "MessageComponentType",
									"canonicalReference": "discord.js!MessageComponentType:type"
								},
								{
									"kind": "Content",
									"text": ">(\n    options?: "
								},
								{
									"kind": "Reference",
									"text": "AwaitMessageCollectorOptionsParams",
									"canonicalReference": "discord.js!AwaitMessageCollectorOptionsParams:type"
								},
								{
									"kind": "Content",
									"text": "<T, Cached>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MappedInteractionTypes",
									"canonicalReference": "discord.js!MappedInteractionTypes:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>[T]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "awaitMessageComponent"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#awaitReactions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public awaitReactions(options?: "
								},
								{
									"kind": "Reference",
									"text": "AwaitReactionsOptions",
									"canonicalReference": "discord.js!AwaitReactionsOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | string, "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "awaitReactions"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get channel(): "
								},
								{
									"kind": "Reference",
									"text": "If",
									"canonicalReference": "discord.js!If:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "GuildTextBasedChannel",
									"canonicalReference": "discord.js!GuildTextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "TextBasedChannel",
									"canonicalReference": "discord.js!TextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#cleanContent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get cleanContent(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "cleanContent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#components:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public components: "
								},
								{
									"kind": "Reference",
									"text": "ActionRow",
									"canonicalReference": "discord.js!ActionRow:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageActionRowComponent",
									"canonicalReference": "discord.js!MessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "components",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#content:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public content: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "content",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createdTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#createMessageComponentCollector:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createMessageComponentCollector<T extends "
								},
								{
									"kind": "Reference",
									"text": "MessageComponentType",
									"canonicalReference": "discord.js!MessageComponentType:type"
								},
								{
									"kind": "Content",
									"text": ">(\n    options?: "
								},
								{
									"kind": "Reference",
									"text": "MessageCollectorOptionsParams",
									"canonicalReference": "discord.js!MessageCollectorOptionsParams:type"
								},
								{
									"kind": "Content",
									"text": "<T, Cached>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "InteractionCollector",
									"canonicalReference": "discord.js!InteractionCollector:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MappedInteractionTypes",
									"canonicalReference": "discord.js!MappedInteractionTypes:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>[T]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "createMessageComponentCollector"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#createReactionCollector:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createReactionCollector(options?: "
								},
								{
									"kind": "Reference",
									"text": "ReactionCollectorOptions",
									"canonicalReference": "discord.js!ReactionCollectorOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "ReactionCollector",
									"canonicalReference": "discord.js!ReactionCollector:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "createReactionCollector"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#crosspost:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public crosspost(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "crosspost"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#crosspostable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get crosspostable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "crosspostable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#deletable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get deletable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deletable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(content: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessageEditOptions",
									"canonicalReference": "discord.js!MessageEditOptions:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "content",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#editable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get editable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "editable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#editedAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get editedAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "editedAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#editedTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public editedTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "editedTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#embeds:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public embeds: "
								},
								{
									"kind": "Reference",
									"text": "Embed",
									"canonicalReference": "discord.js!Embed:class"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "embeds",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ", rawData: "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "rawData",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "force",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#fetchReference:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchReference(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchReference"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#fetchWebhook:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchWebhook(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Webhook",
									"canonicalReference": "discord.js!Webhook:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchWebhook"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public flags: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageFlagsBitField",
									"canonicalReference": "discord.js!MessageFlagsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#groupActivityApplication:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public groupActivityApplication: "
								},
								{
									"kind": "Reference",
									"text": "ClientApplication",
									"canonicalReference": "discord.js!ClientApplication:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "groupActivityApplication",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guild(): "
								},
								{
									"kind": "Reference",
									"text": "If",
									"canonicalReference": "discord.js!If:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "If",
									"canonicalReference": "discord.js!If:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#hasThread:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get hasThread(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "hasThread",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<true> & this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#interaction:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public interaction: "
								},
								{
									"kind": "Reference",
									"text": "MessageInteraction",
									"canonicalReference": "discord.js!MessageInteraction:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "interaction",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#member:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get member(): "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "member",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#mentions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public mentions: "
								},
								{
									"kind": "Reference",
									"text": "MessageMentions",
									"canonicalReference": "discord.js!MessageMentions:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "mentions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#nonce:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public nonce: "
								},
								{
									"kind": "Content",
									"text": "string | number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "nonce",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#partial:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get partial(): "
								},
								{
									"kind": "Content",
									"text": "false"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "partial",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#pin:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public pin(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "pin"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#pinnable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get pinnable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "pinnable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#pinned:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public pinned: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "pinned",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#react:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public react(emoji: "
								},
								{
									"kind": "Reference",
									"text": "EmojiIdentifierResolvable",
									"canonicalReference": "discord.js!EmojiIdentifierResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "emoji",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "react"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#reactions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reactions: "
								},
								{
									"kind": "Reference",
									"text": "ReactionManager",
									"canonicalReference": "discord.js!ReactionManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "reactions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#reference:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reference: "
								},
								{
									"kind": "Reference",
									"text": "MessageReference",
									"canonicalReference": "discord.js!MessageReference:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "reference",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#removeAttachments:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public removeAttachments(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "removeAttachments"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#reply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reply(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ReplyMessageOptions",
									"canonicalReference": "discord.js!ReplyMessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "reply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#resolveComponent:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public resolveComponent(customId: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "MessageActionRowComponent",
									"canonicalReference": "discord.js!MessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "customId",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveComponent"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#startThread:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public startThread(options: "
								},
								{
									"kind": "Reference",
									"text": "StartThreadOptions",
									"canonicalReference": "discord.js!StartThreadOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "startThread"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#stickers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public stickers: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stickers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#suppressEmbeds:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public suppressEmbeds(suppress?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "suppress",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "suppressEmbeds"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#system:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public system: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "system",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#thread:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get thread(): "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "thread",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#tts:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public tts: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "tts",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "MessageType",
									"canonicalReference": "discord-api-types!MessageType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Message#unpin:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public unpin(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "unpin"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get url(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Message#webhookId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public webhookId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "webhookId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 5,
						"endIndex": 6
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageActionRowComponent:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageActionRowComponent = "
						},
						{
							"kind": "Reference",
							"text": "ButtonComponent",
							"canonicalReference": "discord.js!ButtonComponent:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "SelectMenuComponent",
							"canonicalReference": "discord.js!SelectMenuComponent:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageActionRowComponent",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageActionRowComponentData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageActionRowComponentData =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "JSONEncodable",
							"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APIMessageActionRowComponent",
							"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
						},
						{
							"kind": "Content",
							"text": ">\n  | "
						},
						{
							"kind": "Reference",
							"text": "ButtonComponentData",
							"canonicalReference": "discord.js!ButtonComponentData:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "SelectMenuComponentData",
							"canonicalReference": "discord.js!SelectMenuComponentData:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageActionRowComponentData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 9
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageActionRowComponentResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageActionRowComponentResolvable = "
						},
						{
							"kind": "Reference",
							"text": "MessageActionRowComponent",
							"canonicalReference": "discord.js!MessageActionRowComponent:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ActionRowComponentOptions",
							"canonicalReference": "discord.js!ActionRowComponentOptions:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageActionRowComponentResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MessageActivity:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MessageActivity "
						}
					],
					"releaseTag": "Public",
					"name": "MessageActivity",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageActivity#partyId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "partyId?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "partyId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageActivity#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "MessageActivityType",
									"canonicalReference": "discord-api-types!MessageActivityType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MessageApplicationCommandData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MessageApplicationCommandData extends "
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandData",
							"canonicalReference": "discord.js!BaseApplicationCommandData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "MessageApplicationCommandData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageApplicationCommandData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandType.Message",
									"canonicalReference": "discord-api-types!ApplicationCommandType.Message:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageChannelCollectorOptionsParams:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageChannelCollectorOptionsParams<T extends "
						},
						{
							"kind": "Reference",
							"text": "MessageComponentType",
							"canonicalReference": "discord.js!MessageComponentType:type"
						},
						{
							"kind": "Content",
							"text": ", Cached extends "
						},
						{
							"kind": "Content",
							"text": "boolean "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": "> =\n  "
						},
						{
							"kind": "Content",
							"text": "| {\n      componentType?: T;\n    } & "
						},
						{
							"kind": "Reference",
							"text": "MessageChannelComponentCollectorOptions",
							"canonicalReference": "discord.js!MessageChannelComponentCollectorOptions:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "MappedInteractionTypes",
							"canonicalReference": "discord.js!MappedInteractionTypes:interface"
						},
						{
							"kind": "Content",
							"text": "<Cached>[T]>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageChannelCollectorOptionsParams",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"defaultTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 7,
						"endIndex": 12
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageChannelComponentCollectorOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageChannelComponentCollectorOptions<T extends "
						},
						{
							"kind": "Reference",
							"text": "CollectedMessageInteraction",
							"canonicalReference": "discord.js!CollectedMessageInteraction:type"
						},
						{
							"kind": "Content",
							"text": "> = "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "InteractionCollectorOptions",
							"canonicalReference": "discord.js!InteractionCollectorOptions:interface"
						},
						{
							"kind": "Content",
							"text": "<T>,\n  'channel' | 'guild' | 'interactionType'\n>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageChannelComponentCollectorOptions",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 3,
						"endIndex": 7
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!MessageCollector:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class MessageCollector extends "
						},
						{
							"kind": "Reference",
							"text": "Collector",
							"canonicalReference": "discord.js!Collector:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": ", ["
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": ">]> "
						}
					],
					"releaseTag": "Public",
					"name": "MessageCollector",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!MessageCollector:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `MessageCollector` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(channel: "
								},
								{
									"kind": "Reference",
									"text": "TextBasedChannel",
									"canonicalReference": "discord.js!TextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "MessageCollectorOptions",
									"canonicalReference": "discord.js!MessageCollectorOptions:interface"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageCollector#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channel: "
								},
								{
									"kind": "Reference",
									"text": "TextBasedChannel",
									"canonicalReference": "discord.js!TextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageCollector#collect:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public collect(message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "collect"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageCollector#dispose:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public dispose(message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "dispose"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageCollector#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "MessageCollectorOptions",
									"canonicalReference": "discord.js!MessageCollectorOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageCollector#received:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public received: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "received",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 12
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MessageCollectorOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MessageCollectorOptions extends "
						},
						{
							"kind": "Reference",
							"text": "CollectorOptions",
							"canonicalReference": "discord.js!CollectorOptions:interface"
						},
						{
							"kind": "Content",
							"text": "<["
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": ">]> "
						}
					],
					"releaseTag": "Public",
					"name": "MessageCollectorOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageCollectorOptions#max:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "max?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "max",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageCollectorOptions#maxProcessed:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxProcessed?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxProcessed",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 10
						}
					]
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageCollectorOptionsParams:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageCollectorOptionsParams<T extends "
						},
						{
							"kind": "Reference",
							"text": "MessageComponentType",
							"canonicalReference": "discord.js!MessageComponentType:type"
						},
						{
							"kind": "Content",
							"text": ", Cached extends "
						},
						{
							"kind": "Content",
							"text": "boolean "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": "> =\n  "
						},
						{
							"kind": "Content",
							"text": "| {\n      componentType?: T;\n    } & "
						},
						{
							"kind": "Reference",
							"text": "MessageComponentCollectorOptions",
							"canonicalReference": "discord.js!MessageComponentCollectorOptions:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "MappedInteractionTypes",
							"canonicalReference": "discord.js!MappedInteractionTypes:interface"
						},
						{
							"kind": "Content",
							"text": "<Cached>[T]>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageCollectorOptionsParams",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"defaultTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 7,
						"endIndex": 12
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageComponent:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageComponent =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "Component",
							"canonicalReference": "discord.js!Component:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ActionRowBuilder",
							"canonicalReference": "discord.js!ActionRowBuilder:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "MessageActionRowComponentBuilder",
							"canonicalReference": "@discordjs/builders!~MessageActionRowComponentBuilder:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ModalActionRowComponentBuilder",
							"canonicalReference": "@discordjs/builders!~ModalActionRowComponentBuilder:type"
						},
						{
							"kind": "Content",
							"text": ">\n  | "
						},
						{
							"kind": "Reference",
							"text": "ButtonComponent",
							"canonicalReference": "discord.js!ButtonComponent:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "SelectMenuComponent",
							"canonicalReference": "discord.js!SelectMenuComponent:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageComponent",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 13
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageComponentCollectorOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageComponentCollectorOptions<T extends "
						},
						{
							"kind": "Reference",
							"text": "CollectedMessageInteraction",
							"canonicalReference": "discord.js!CollectedMessageInteraction:type"
						},
						{
							"kind": "Content",
							"text": "> = "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "InteractionCollectorOptions",
							"canonicalReference": "discord.js!InteractionCollectorOptions:interface"
						},
						{
							"kind": "Content",
							"text": "<T>,\n  'channel' | 'message' | 'guild' | 'interactionType'\n>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageComponentCollectorOptions",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 3,
						"endIndex": 7
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!MessageComponentInteraction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class MessageComponentInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "BaseInteraction",
							"canonicalReference": "discord.js!BaseInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "MessageComponentInteraction",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!MessageComponentInteraction:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `MessageComponentInteraction` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", data: "
								},
								{
									"kind": "Reference",
									"text": "RawMessageComponentInteractionData",
									"canonicalReference": "discord.js!RawMessageComponentInteractionData:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#awaitModalSubmit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public awaitModalSubmit(\n    options: "
								},
								{
									"kind": "Reference",
									"text": "AwaitModalSubmitOptions",
									"canonicalReference": "discord.js!AwaitModalSubmitOptions:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalSubmitInteraction:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalSubmitInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "awaitModalSubmit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageComponentInteraction#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageComponentInteraction#component:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get component(): "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<\n    Cached,\n    "
								},
								{
									"kind": "Reference",
									"text": "MessageActionRowComponent",
									"canonicalReference": "discord.js!MessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ",\n    "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageComponent",
									"canonicalReference": "discord-api-types!APIMessageComponent:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageActionRowComponent",
									"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">>,\n    "
								},
								{
									"kind": "Reference",
									"text": "MessageActionRowComponent",
									"canonicalReference": "discord.js!MessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageComponent",
									"canonicalReference": "discord-api-types!APIMessageComponent:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageActionRowComponent",
									"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">>,\n    "
								},
								{
									"kind": "Reference",
									"text": "MessageActionRowComponent",
									"canonicalReference": "discord.js!MessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageComponent",
									"canonicalReference": "discord-api-types!APIMessageComponent:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageActionRowComponent",
									"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">>\n  >"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "component",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 33
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageComponentInteraction#componentType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public componentType: "
								},
								{
									"kind": "Reference",
									"text": "Exclude",
									"canonicalReference": "!Exclude:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ComponentType",
									"canonicalReference": "discord-api-types!ComponentType:enum"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ComponentType.ActionRow",
									"canonicalReference": "discord-api-types!ComponentType.ActionRow:member"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ComponentType.TextInput",
									"canonicalReference": "discord-api-types!ComponentType.TextInput:member"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "componentType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageComponentInteraction#customId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public customId: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "customId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageComponentInteraction#deferred:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deferred: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deferred",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#deferReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deferReply(\n    options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferReplyOptions",
									"canonicalReference": "discord.js!InteractionDeferReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "deferReply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#deferReply:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deferReply(options?: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferReplyOptions",
									"canonicalReference": "discord.js!InteractionDeferReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "InteractionResponse",
									"canonicalReference": "discord.js!InteractionResponse:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "deferReply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#deferUpdate:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deferUpdate(\n    options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferUpdateOptions",
									"canonicalReference": "discord.js!InteractionDeferUpdateOptions:type"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "deferUpdate"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#deferUpdate:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deferUpdate(options?: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferUpdateOptions",
									"canonicalReference": "discord.js!InteractionDeferUpdateOptions:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "InteractionResponse",
									"canonicalReference": "discord.js!InteractionResponse:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "deferUpdate"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#deleteReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deleteReply(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "deleteReply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#editReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public editReply(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookEditMessageOptions",
									"canonicalReference": "discord.js!WebhookEditMessageOptions:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "editReply"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageComponentInteraction#ephemeral:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ephemeral: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ephemeral",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#fetchReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchReply(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchReply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#followUp:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public followUp(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "followUp"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "MessageComponentInteraction",
									"canonicalReference": "discord.js!MessageComponentInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inCachedGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "MessageComponentInteraction",
									"canonicalReference": "discord.js!MessageComponentInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "MessageComponentInteraction",
									"canonicalReference": "discord.js!MessageComponentInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inRawGuild"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageComponentInteraction#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageComponentInteraction#replied:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public replied: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "replied",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#reply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reply(options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "reply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#reply:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reply(\n    options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "InteractionResponse",
									"canonicalReference": "discord.js!InteractionResponse:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "reply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#showModal:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public showModal(\n    modal:\n      "
								},
								{
									"kind": "Content",
									"text": "| "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIModalInteractionResponseCallbackData",
									"canonicalReference": "discord-api-types!APIModalInteractionResponseCallbackData:interface"
								},
								{
									"kind": "Content",
									"text": ">\n      | "
								},
								{
									"kind": "Reference",
									"text": "ModalComponentData",
									"canonicalReference": "discord.js!ModalComponentData:interface"
								},
								{
									"kind": "Content",
									"text": "\n      | "
								},
								{
									"kind": "Reference",
									"text": "APIModalInteractionResponseCallbackData",
									"canonicalReference": "discord-api-types!APIModalInteractionResponseCallbackData:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 10,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "modal",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 9
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "showModal"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageComponentInteraction#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "InteractionType.MessageComponent",
									"canonicalReference": "discord-api-types!InteractionType.MessageComponent:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#update:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public update(options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionUpdateOptions",
									"canonicalReference": "discord.js!InteractionUpdateOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "update"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageComponentInteraction#update:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public update(\n    options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InteractionUpdateOptions",
									"canonicalReference": "discord.js!InteractionUpdateOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "InteractionResponse",
									"canonicalReference": "discord.js!InteractionResponse:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "update"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageComponentInteraction#webhook:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public webhook: "
								},
								{
									"kind": "Reference",
									"text": "InteractionWebhook",
									"canonicalReference": "discord.js!InteractionWebhook:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "webhook",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageComponentType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageComponentType = "
						},
						{
							"kind": "Reference",
							"text": "Exclude",
							"canonicalReference": "!Exclude:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "ComponentType",
							"canonicalReference": "discord-api-types!ComponentType:enum"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "ComponentType.TextInput",
							"canonicalReference": "discord-api-types!ComponentType.TextInput:member"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ComponentType.ActionRow",
							"canonicalReference": "discord-api-types!ComponentType.ActionRow:member"
						},
						{
							"kind": "Content",
							"text": ">"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageComponentType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 9
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!MessageContextMenuCommandInteraction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class MessageContextMenuCommandInteraction<\n  Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": ",\n> extends "
						},
						{
							"kind": "Reference",
							"text": "ContextMenuCommandInteraction",
							"canonicalReference": "discord.js!ContextMenuCommandInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "MessageContextMenuCommandInteraction",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageContextMenuCommandInteraction#commandType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandType: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandType.Message",
									"canonicalReference": "discord-api-types!ApplicationCommandType.Message:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageContextMenuCommandInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "MessageContextMenuCommandInteraction",
									"canonicalReference": "discord.js!MessageContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inCachedGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageContextMenuCommandInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "MessageContextMenuCommandInteraction",
									"canonicalReference": "discord.js!MessageContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageContextMenuCommandInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "MessageContextMenuCommandInteraction",
									"canonicalReference": "discord.js!MessageContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inRawGuild"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageContextMenuCommandInteraction#targetMessage:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get targetMessage(): "
								},
								{
									"kind": "Reference",
									"text": "NonNullable",
									"canonicalReference": "!NonNullable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "CommandInteractionOption",
									"canonicalReference": "discord.js!CommandInteractionOption:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>['message']>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "targetMessage",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MessageEditOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MessageEditOptions "
						}
					],
					"releaseTag": "Public",
					"name": "MessageEditOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageEditOptions#allowedMentions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "allowedMentions?: "
								},
								{
									"kind": "Reference",
									"text": "MessageMentionOptions",
									"canonicalReference": "discord.js!MessageMentionOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "allowedMentions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageEditOptions#attachments:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "attachments?: "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AttachmentPayload",
									"canonicalReference": "discord.js!AttachmentPayload:interface"
								},
								{
									"kind": "Content",
									"text": ">[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "attachments",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageEditOptions#components:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "components?: "
								},
								{
									"kind": "Content",
									"text": "(\n    | "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageActionRowComponent",
									"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">>\n    | "
								},
								{
									"kind": "Reference",
									"text": "ActionRow",
									"canonicalReference": "discord.js!ActionRow:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageActionRowComponent",
									"canonicalReference": "discord.js!MessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">\n    | "
								},
								{
									"kind": "Reference",
									"text": "ActionRowData",
									"canonicalReference": "discord.js!ActionRowData:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageActionRowComponentData",
									"canonicalReference": "discord.js!MessageActionRowComponentData:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "MessageActionRowComponentBuilder",
									"canonicalReference": "@discordjs/builders!~MessageActionRowComponentBuilder:type"
								},
								{
									"kind": "Content",
									"text": ">\n    | "
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageActionRowComponent",
									"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">\n  )[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "components",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 22
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageEditOptions#content:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "content?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "content",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageEditOptions#embeds:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "embeds?: "
								},
								{
									"kind": "Content",
									"text": "("
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIEmbed",
									"canonicalReference": "discord-api-types!APIEmbed:interface"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "APIEmbed",
									"canonicalReference": "discord-api-types!APIEmbed:interface"
								},
								{
									"kind": "Content",
									"text": ")[] | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "embeds",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 8
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageEditOptions#files:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "files?: "
								},
								{
									"kind": "Content",
									"text": "(\n    | "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "Stream",
									"canonicalReference": "!internal.Stream:class"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIAttachment",
									"canonicalReference": "discord-api-types!APIAttachment:interface"
								},
								{
									"kind": "Content",
									"text": ">\n    | "
								},
								{
									"kind": "Reference",
									"text": "Attachment",
									"canonicalReference": "discord.js!Attachment:class"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "AttachmentBuilder",
									"canonicalReference": "discord.js!AttachmentBuilder:class"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "AttachmentPayload",
									"canonicalReference": "discord.js!AttachmentPayload:interface"
								},
								{
									"kind": "Content",
									"text": "\n  )[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "files",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 16
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageEditOptions#flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "flags?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageFlagsString",
									"canonicalReference": "discord.js!MessageFlagsString:type"
								},
								{
									"kind": "Content",
									"text": ", number>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MessageEvent:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MessageEvent "
						}
					],
					"releaseTag": "Public",
					"name": "MessageEvent",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageEvent#data:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "data: "
								},
								{
									"kind": "Reference",
									"text": "WebSocket.Data",
									"canonicalReference": "@types/ws!~WebSocket.Data:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "data",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageEvent#target:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "target: "
								},
								{
									"kind": "Reference",
									"text": "WebSocket",
									"canonicalReference": "@types/ws!~WebSocket:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "target",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageEvent#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!MessageFlagsBitField:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class MessageFlagsBitField extends "
						},
						{
							"kind": "Reference",
							"text": "BitField",
							"canonicalReference": "discord.js!BitField:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "MessageFlagsString",
							"canonicalReference": "discord.js!MessageFlagsString:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "MessageFlagsBitField",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageFlagsBitField.Flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Flags: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "MessageFlags",
									"canonicalReference": "discord-api-types!MessageFlags:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageFlagsBitField.resolve:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolve(bit?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageFlagsString",
									"canonicalReference": "discord.js!MessageFlagsString:type"
								},
								{
									"kind": "Content",
									"text": ", number>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "resolve"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageFlagsString:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageFlagsString = "
						},
						{
							"kind": "Content",
							"text": "keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "MessageFlags",
							"canonicalReference": "discord-api-types!MessageFlags:enum"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageFlagsString",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MessageInteraction:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MessageInteraction "
						}
					],
					"releaseTag": "Public",
					"name": "MessageInteraction",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageInteraction#commandName:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "commandName: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandName",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageInteraction#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageInteraction#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "InteractionType",
									"canonicalReference": "discord-api-types!InteractionType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageInteraction#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!MessageManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class MessageManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "MessageResolvable",
							"canonicalReference": "discord.js!MessageResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "MessageManager",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageManager#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channel: "
								},
								{
									"kind": "Reference",
									"text": "TextBasedChannel",
									"canonicalReference": "discord.js!TextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageManager#crosspost:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public crosspost(message: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "crosspost"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageManager#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(message: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageManager#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(message: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "MessageEditOptions",
									"canonicalReference": "discord.js!MessageEditOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "FetchMessageOptions",
									"canonicalReference": "discord.js!FetchMessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchMessagesOptions",
									"canonicalReference": "discord.js!FetchMessagesOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageManager#fetchPinned:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchPinned(cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "cache",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchPinned"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageManager#pin:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public pin(message: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "pin"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageManager#react:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public react(message: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", emoji: "
								},
								{
									"kind": "Reference",
									"text": "EmojiIdentifierResolvable",
									"canonicalReference": "discord.js!EmojiIdentifierResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "emoji",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "react"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageManager#unpin:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public unpin(message: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "unpin"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MessageMentionOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MessageMentionOptions "
						}
					],
					"releaseTag": "Public",
					"name": "MessageMentionOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageMentionOptions#parse:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "parse?: "
								},
								{
									"kind": "Reference",
									"text": "MessageMentionTypes",
									"canonicalReference": "discord.js!MessageMentionTypes:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "parse",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageMentionOptions#repliedUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "repliedUser?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "repliedUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageMentionOptions#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "roles?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageMentionOptions#users:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "users?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "users",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!MessageMentions:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class MessageMentions "
						}
					],
					"releaseTag": "Public",
					"name": "MessageMentions",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions#channels:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get channels(): "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Channel",
									"canonicalReference": "discord.js!Channel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channels",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions.ChannelsPattern:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static ChannelsPattern: "
								},
								{
									"kind": "Reference",
									"text": "RegExp",
									"canonicalReference": "!RegExp:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ChannelsPattern",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions#crosspostedChannels:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public crosspostedChannels: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "CrosspostedChannel",
									"canonicalReference": "discord.js!CrosspostedChannel:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "crosspostedChannels",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions#everyone:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public everyone: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "everyone",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions.EveryonePattern:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static EveryonePattern: "
								},
								{
									"kind": "Reference",
									"text": "RegExp",
									"canonicalReference": "!RegExp:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "EveryonePattern",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageMentions#has:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public has(data: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ChannelResolvable",
									"canonicalReference": "discord.js!ChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "MessageMentionsHasOptions",
									"canonicalReference": "discord.js!MessageMentionsHasOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 8
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "has"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions#members:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get members(): "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": "> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "members",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions#repliedUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public repliedUser: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "repliedUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions#roles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public roles: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "roles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions.RolesPattern:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static RolesPattern: "
								},
								{
									"kind": "Reference",
									"text": "RegExp",
									"canonicalReference": "!RegExp:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "RolesPattern",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageMentions#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions#users:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public users: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "users",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageMentions.UsersPattern:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static UsersPattern: "
								},
								{
									"kind": "Reference",
									"text": "RegExp",
									"canonicalReference": "!RegExp:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "UsersPattern",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MessageMentionsHasOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MessageMentionsHasOptions "
						}
					],
					"releaseTag": "Public",
					"name": "MessageMentionsHasOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageMentionsHasOptions#ignoreDirect:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ignoreDirect?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "ignoreDirect",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageMentionsHasOptions#ignoreEveryone:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ignoreEveryone?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "ignoreEveryone",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageMentionsHasOptions#ignoreRepliedUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ignoreRepliedUser?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "ignoreRepliedUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageMentionsHasOptions#ignoreRoles:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ignoreRoles?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "ignoreRoles",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageMentionTypes:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageMentionTypes = "
						},
						{
							"kind": "Content",
							"text": "'roles' | 'users' | 'everyone'"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageMentionTypes",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MessageOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MessageOptions "
						}
					],
					"releaseTag": "Public",
					"name": "MessageOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageOptions#allowedMentions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "allowedMentions?: "
								},
								{
									"kind": "Reference",
									"text": "MessageMentionOptions",
									"canonicalReference": "discord.js!MessageMentionOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "allowedMentions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageOptions#attachments:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "attachments?: "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AttachmentPayload",
									"canonicalReference": "discord.js!AttachmentPayload:interface"
								},
								{
									"kind": "Content",
									"text": ">[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "attachments",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageOptions#components:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "components?: "
								},
								{
									"kind": "Content",
									"text": "(\n    | "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageActionRowComponent",
									"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">>\n    | "
								},
								{
									"kind": "Reference",
									"text": "ActionRowData",
									"canonicalReference": "discord.js!ActionRowData:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageActionRowComponentData",
									"canonicalReference": "discord.js!MessageActionRowComponentData:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "MessageActionRowComponentBuilder",
									"canonicalReference": "@discordjs/builders!~MessageActionRowComponentBuilder:type"
								},
								{
									"kind": "Content",
									"text": ">\n    | "
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessageActionRowComponent",
									"canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">\n  )[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "components",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 18
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageOptions#content:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "content?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "content",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageOptions#embeds:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "embeds?: "
								},
								{
									"kind": "Content",
									"text": "("
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIEmbed",
									"canonicalReference": "discord-api-types!APIEmbed:interface"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "APIEmbed",
									"canonicalReference": "discord-api-types!APIEmbed:interface"
								},
								{
									"kind": "Content",
									"text": ")[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "embeds",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 8
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageOptions#files:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "files?: "
								},
								{
									"kind": "Content",
									"text": "(\n    | "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "Stream",
									"canonicalReference": "!internal.Stream:class"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIAttachment",
									"canonicalReference": "discord-api-types!APIAttachment:interface"
								},
								{
									"kind": "Content",
									"text": ">\n    | "
								},
								{
									"kind": "Reference",
									"text": "Attachment",
									"canonicalReference": "discord.js!Attachment:class"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "AttachmentBuilder",
									"canonicalReference": "discord.js!AttachmentBuilder:class"
								},
								{
									"kind": "Content",
									"text": "\n    | "
								},
								{
									"kind": "Reference",
									"text": "AttachmentPayload",
									"canonicalReference": "discord.js!AttachmentPayload:interface"
								},
								{
									"kind": "Content",
									"text": "\n  )[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "files",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 16
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageOptions#flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "flags?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Extract",
									"canonicalReference": "!Extract:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageFlagsString",
									"canonicalReference": "discord.js!MessageFlagsString:type"
								},
								{
									"kind": "Content",
									"text": ", 'SuppressEmbeds'>, number>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageOptions#nonce:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "nonce?: "
								},
								{
									"kind": "Content",
									"text": "string | number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "nonce",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageOptions#reply:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reply?: "
								},
								{
									"kind": "Reference",
									"text": "ReplyOptions",
									"canonicalReference": "discord.js!ReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reply",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageOptions#stickers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "stickers?: "
								},
								{
									"kind": "Reference",
									"text": "StickerResolvable",
									"canonicalReference": "discord.js!StickerResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "stickers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageOptions#tts:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "tts?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "tts",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!MessagePayload:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class MessagePayload "
						}
					],
					"releaseTag": "Public",
					"name": "MessagePayload",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!MessagePayload:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `MessagePayload` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(target: "
								},
								{
									"kind": "Reference",
									"text": "MessageTarget",
									"canonicalReference": "discord.js!MessageTarget:type"
								},
								{
									"kind": "Content",
									"text": ", options: "
								},
								{
									"kind": "Reference",
									"text": "MessageOptions",
									"canonicalReference": "discord.js!MessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookMessageOptions",
									"canonicalReference": "discord.js!WebhookMessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "target",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 6
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessagePayload#body:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public body: "
								},
								{
									"kind": "Reference",
									"text": "RawMessagePayloadData",
									"canonicalReference": "discord.js!RawMessagePayloadData:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "body",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessagePayload.create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static create(\n    target: "
								},
								{
									"kind": "Reference",
									"text": "MessageTarget",
									"canonicalReference": "discord.js!MessageTarget:type"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessageOptions",
									"canonicalReference": "discord.js!MessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookMessageOptions",
									"canonicalReference": "discord.js!WebhookMessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n    extra?: "
								},
								{
									"kind": "Reference",
									"text": "MessageOptions",
									"canonicalReference": "discord.js!MessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookMessageOptions",
									"canonicalReference": "discord.js!WebhookMessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "target",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								},
								{
									"parameterName": "extra",
									"parameterTypeTokenRange": {
										"startIndex": 8,
										"endIndex": 11
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessagePayload#files:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public files: "
								},
								{
									"kind": "Reference",
									"text": "RawFile",
									"canonicalReference": "@discordjs/rest!~RawFile:interface"
								},
								{
									"kind": "Content",
									"text": "[] | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "files",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessagePayload#isInteraction:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get isInteraction(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "isInteraction",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessagePayload#isMessage:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get isMessage(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "isMessage",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessagePayload#isMessageManager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get isMessageManager(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "isMessageManager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessagePayload#isUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get isUser(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "isUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessagePayload#isWebhook:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get isWebhook(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "isWebhook",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessagePayload#makeContent:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public makeContent(): "
								},
								{
									"kind": "Content",
									"text": "string | undefined"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "makeContent"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessagePayload#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "MessageOptions",
									"canonicalReference": "discord.js!MessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookMessageOptions",
									"canonicalReference": "discord.js!WebhookMessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessagePayload#resolveBody:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public resolveBody(): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "resolveBody"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessagePayload.resolveFile:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolveFile(\n    fileLike: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Stream",
									"canonicalReference": "!internal.Stream:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "AttachmentPayload",
									"canonicalReference": "discord.js!AttachmentPayload:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AttachmentPayload",
									"canonicalReference": "discord.js!AttachmentPayload:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "RawFile",
									"canonicalReference": "@discordjs/rest!~RawFile:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 16
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "fileLike",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveFile"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessagePayload#resolveFiles:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public resolveFiles(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "resolveFiles"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessagePayload#target:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public target: "
								},
								{
									"kind": "Reference",
									"text": "MessageTarget",
									"canonicalReference": "discord.js!MessageTarget:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "target",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!MessageReaction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class MessageReaction "
						}
					],
					"releaseTag": "Public",
					"name": "MessageReaction",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageReaction#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageReaction#count:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public count: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "count",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageReaction#emoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get emoji(): "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ReactionEmoji",
									"canonicalReference": "discord.js!ReactionEmoji:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageReaction#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageReaction#me:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public me: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "me",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageReaction#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialMessage",
									"canonicalReference": "discord.js!PartialMessage:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageReaction#partial:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get partial(): "
								},
								{
									"kind": "Content",
									"text": "false"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "partial",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageReaction#react:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public react(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "react"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageReaction#remove:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public remove(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "remove"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!MessageReaction#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!MessageReaction#users:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public users: "
								},
								{
									"kind": "Reference",
									"text": "ReactionUserManager",
									"canonicalReference": "discord.js!ReactionUserManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "users",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageReactionResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageReactionResolvable =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "MessageReaction",
							"canonicalReference": "discord.js!MessageReaction:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": "\n  | `${string}:${"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": "}`\n  | `<:${string}:${"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": "}>`\n  | `<a:${string}:${"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": "}>`\n  | string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageReactionResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 12
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MessageReference:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MessageReference "
						}
					],
					"releaseTag": "Public",
					"name": "MessageReference",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageReference#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageReference#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | undefined"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageReference#messageId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messageId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | undefined"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MessageSelectOption:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MessageSelectOption "
						}
					],
					"releaseTag": "Public",
					"name": "MessageSelectOption",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageSelectOption#default:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "default: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "default",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageSelectOption#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageSelectOption#emoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "emoji: "
								},
								{
									"kind": "Reference",
									"text": "APIPartialEmoji",
									"canonicalReference": "discord-api-types!APIPartialEmoji:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageSelectOption#label:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "label: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "label",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MessageSelectOption#value:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "value: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "value",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!MessageTarget:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type MessageTarget =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "Interaction",
							"canonicalReference": "discord.js!Interaction:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "InteractionWebhook",
							"canonicalReference": "discord.js!InteractionWebhook:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannel",
							"canonicalReference": "discord.js!TextBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "User",
							"canonicalReference": "discord.js!User:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "GuildMember",
							"canonicalReference": "discord.js!GuildMember:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "Webhook",
							"canonicalReference": "discord.js!Webhook:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "WebhookClient",
							"canonicalReference": "discord.js!WebhookClient:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "MessageManager",
							"canonicalReference": "discord.js!MessageManager:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "MessageTarget",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 19
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ModalActionRowComponent:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ModalActionRowComponent = "
						},
						{
							"kind": "Reference",
							"text": "TextInputComponent",
							"canonicalReference": "discord.js!TextInputComponent:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ModalActionRowComponent",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ModalActionRowComponentData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ModalActionRowComponentData = "
						},
						{
							"kind": "Reference",
							"text": "JSONEncodable",
							"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APIModalActionRowComponent",
							"canonicalReference": "discord-api-types!APIModalActionRowComponent:type"
						},
						{
							"kind": "Content",
							"text": "> | "
						},
						{
							"kind": "Reference",
							"text": "TextInputComponentData",
							"canonicalReference": "discord.js!TextInputComponentData:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ModalActionRowComponentData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ModalBuilder:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ModalBuilder extends "
						},
						{
							"kind": "Reference",
							"text": "BuildersModal",
							"canonicalReference": "@discordjs/builders!~ModalBuilder:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ModalBuilder",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!ModalBuilder:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `ModalBuilder` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(data?: "
								},
								{
									"kind": "Reference",
									"text": "Partial",
									"canonicalReference": "!Partial:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ModalComponentData",
									"canonicalReference": "discord.js!ModalComponentData:interface"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "Partial",
									"canonicalReference": "!Partial:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIModalComponent",
									"canonicalReference": "discord-api-types!APIModalComponent:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 9
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalBuilder.from:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static from(other: "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIModalComponent",
									"canonicalReference": "discord-api-types!APIModalComponent:type"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "APIModalComponent",
									"canonicalReference": "discord-api-types!APIModalComponent:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "ModalBuilder",
									"canonicalReference": "discord.js!ModalBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "from"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ModalComponentData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ModalComponentData "
						}
					],
					"releaseTag": "Public",
					"name": "ModalComponentData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ModalComponentData#components:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "components: "
								},
								{
									"kind": "Content",
									"text": "(\n    | "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIActionRowComponent",
									"canonicalReference": "discord-api-types!APIActionRowComponent:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIModalActionRowComponent",
									"canonicalReference": "discord-api-types!APIModalActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">>\n    | "
								},
								{
									"kind": "Reference",
									"text": "ActionRowData",
									"canonicalReference": "discord.js!ActionRowData:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ModalActionRowComponentData",
									"canonicalReference": "discord.js!ModalActionRowComponentData:type"
								},
								{
									"kind": "Content",
									"text": ">\n  )[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "components",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 12
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ModalComponentData#customId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "customId: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "customId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ModalComponentData#title:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "title: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "title",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ModalData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ModalData = "
						},
						{
							"kind": "Reference",
							"text": "TextInputModalData",
							"canonicalReference": "discord.js!TextInputModalData:interface"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ActionRowModalData",
							"canonicalReference": "discord.js!ActionRowModalData:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ModalData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ModalMessageModalSubmitInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": ">\n  extends "
						},
						{
							"kind": "Reference",
							"text": "ModalSubmitInteraction",
							"canonicalReference": "discord.js!ModalSubmitInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "ModalMessageModalSubmitInteraction",
					"members": [
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction#deferUpdate:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deferUpdate(options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferUpdateOptions",
									"canonicalReference": "discord.js!InteractionDeferUpdateOptions:type"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"name": "deferUpdate"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction#deferUpdate:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deferUpdate(options?: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferUpdateOptions",
									"canonicalReference": "discord.js!InteractionDeferUpdateOptions:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "InteractionResponse",
									"canonicalReference": "discord.js!InteractionResponse:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"name": "deferUpdate"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ModalMessageModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction:interface"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [],
							"name": "inCachedGuild"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ModalMessageModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction:interface"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [],
							"name": "inGuild"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ModalMessageModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction:interface"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [],
							"name": "inRawGuild"
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							}
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction#update:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "update(options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionUpdateOptions",
									"canonicalReference": "discord.js!InteractionUpdateOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"name": "update"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction#update:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "update(\n    options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InteractionUpdateOptions",
									"canonicalReference": "discord.js!InteractionUpdateOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "InteractionResponse",
									"canonicalReference": "discord.js!InteractionResponse:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"name": "update"
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 6,
							"endIndex": 7
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ModalSubmitFields:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ModalSubmitFields "
						}
					],
					"releaseTag": "Public",
					"name": "ModalSubmitFields",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!ModalSubmitFields:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `ModalSubmitFields` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "constructor(components: "
								},
								{
									"kind": "Reference",
									"text": "ModalActionRowComponent",
									"canonicalReference": "discord.js!ModalActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": "[][]"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "components",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ModalSubmitFields#components:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public components: "
								},
								{
									"kind": "Reference",
									"text": "ActionRow",
									"canonicalReference": "discord.js!ActionRow:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ModalActionRowComponent",
									"canonicalReference": "discord.js!ModalActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "components",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ModalSubmitFields#fields:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fields: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<string, "
								},
								{
									"kind": "Reference",
									"text": "ModalActionRowComponent",
									"canonicalReference": "discord.js!ModalActionRowComponent:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "fields",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitFields#getField:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getField<T extends "
								},
								{
									"kind": "Reference",
									"text": "ComponentType",
									"canonicalReference": "discord-api-types!ComponentType:enum"
								},
								{
									"kind": "Content",
									"text": ">(customId: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", type: "
								},
								{
									"kind": "Content",
									"text": "T"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "{ type: T } & "
								},
								{
									"kind": "Reference",
									"text": "ModalData",
									"canonicalReference": "discord.js!ModalData:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "customId",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "type",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getField"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitFields#getField:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getField(customId: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", type?: "
								},
								{
									"kind": "Reference",
									"text": "ComponentType",
									"canonicalReference": "discord-api-types!ComponentType:enum"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "ModalData",
									"canonicalReference": "discord.js!ModalData:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "customId",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "type",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "getField"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitFields#getTextInputValue:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public getTextInputValue(customId: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "customId",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "getTextInputValue"
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ModalSubmitInteraction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ModalSubmitInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "BaseInteraction",
							"canonicalReference": "discord.js!BaseInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "ModalSubmitInteraction",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ModalSubmitInteraction#components:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly components: "
								},
								{
									"kind": "Reference",
									"text": "ActionRowModalData",
									"canonicalReference": "discord.js!ActionRowModalData:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "components",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ModalSubmitInteraction#customId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly customId: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "customId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ModalSubmitInteraction#deferred:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deferred: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deferred",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#deferReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deferReply(\n    options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferReplyOptions",
									"canonicalReference": "discord.js!InteractionDeferReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "deferReply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#deferReply:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deferReply(options?: "
								},
								{
									"kind": "Reference",
									"text": "InteractionDeferReplyOptions",
									"canonicalReference": "discord.js!InteractionDeferReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "InteractionResponse",
									"canonicalReference": "discord.js!InteractionResponse:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "deferReply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#deleteReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deleteReply(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "deleteReply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#editReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public editReply(\n    options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookEditMessageOptions",
									"canonicalReference": "discord.js!WebhookEditMessageOptions:type"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "editReply"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ModalSubmitInteraction#ephemeral:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ephemeral: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ephemeral",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#fetchReply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchReply(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchReply"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ModalSubmitInteraction#fields:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly fields: "
								},
								{
									"kind": "Reference",
									"text": "ModalSubmitFields",
									"canonicalReference": "discord.js!ModalSubmitFields:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "fields",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#followUp:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public followUp(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "followUp"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalSubmitInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inCachedGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalSubmitInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalSubmitInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inRawGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#isFromMessage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isFromMessage(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "ModalMessageModalSubmitInteraction",
									"canonicalReference": "discord.js!ModalMessageModalSubmitInteraction:interface"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isFromMessage"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ModalSubmitInteraction#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ModalSubmitInteraction#replied:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public replied: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "replied",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#reply:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reply(options: "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": " & { fetchReply: true }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "reply"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ModalSubmitInteraction#reply:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reply(\n    options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InteractionReplyOptions",
									"canonicalReference": "discord.js!InteractionReplyOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "InteractionResponse",
									"canonicalReference": "discord.js!InteractionResponse:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BooleanCache",
									"canonicalReference": "discord.js!BooleanCache:type"
								},
								{
									"kind": "Content",
									"text": "<Cached>>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "reply"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ModalSubmitInteraction#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "InteractionType.ModalSubmit",
									"canonicalReference": "discord-api-types!InteractionType.ModalSubmit:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ModalSubmitInteraction#webhook:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly webhook: "
								},
								{
									"kind": "Reference",
									"text": "InteractionWebhook",
									"canonicalReference": "discord.js!InteractionWebhook:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "webhook",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ModalSubmitInteractionCollectorOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ModalSubmitInteractionCollectorOptions<T extends "
						},
						{
							"kind": "Reference",
							"text": "ModalSubmitInteraction",
							"canonicalReference": "discord.js!ModalSubmitInteraction:class"
						},
						{
							"kind": "Content",
							"text": "> = "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "InteractionCollectorOptions",
							"canonicalReference": "discord.js!InteractionCollectorOptions:interface"
						},
						{
							"kind": "Content",
							"text": "<T>,\n  'channel' | 'message' | 'guild' | 'interactionType'\n>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ModalSubmitInteractionCollectorOptions",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 3,
						"endIndex": 7
					}
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!moveElementInArray:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function moveElementInArray(array: "
						},
						{
							"kind": "Content",
							"text": "unknown[]"
						},
						{
							"kind": "Content",
							"text": ", element: "
						},
						{
							"kind": "Content",
							"text": "unknown"
						},
						{
							"kind": "Content",
							"text": ", newIndex: "
						},
						{
							"kind": "Content",
							"text": "number"
						},
						{
							"kind": "Content",
							"text": ", offset?: "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "number"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 9,
						"endIndex": 10
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "array",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						},
						{
							"parameterName": "element",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"isOptional": false
						},
						{
							"parameterName": "newIndex",
							"parameterTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"isOptional": false
						},
						{
							"parameterName": "offset",
							"parameterTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"isOptional": true
						}
					],
					"name": "moveElementInArray"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MultipleShardRespawnOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MultipleShardRespawnOptions "
						}
					],
					"releaseTag": "Public",
					"name": "MultipleShardRespawnOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MultipleShardRespawnOptions#respawnDelay:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "respawnDelay?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "respawnDelay",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MultipleShardRespawnOptions#shardDelay:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shardDelay?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "shardDelay",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MultipleShardRespawnOptions#timeout:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "timeout?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "timeout",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!MultipleShardSpawnOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface MultipleShardSpawnOptions "
						}
					],
					"releaseTag": "Public",
					"name": "MultipleShardSpawnOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MultipleShardSpawnOptions#amount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "amount?: "
								},
								{
									"kind": "Content",
									"text": "number | 'auto'"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "amount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MultipleShardSpawnOptions#delay:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "delay?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "delay",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!MultipleShardSpawnOptions#timeout:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "timeout?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "timeout",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!NewsChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class NewsChannel extends "
						},
						{
							"kind": "Reference",
							"text": "BaseGuildTextChannel",
							"canonicalReference": "discord.js!BaseGuildTextChannel:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "NewsChannel",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!NewsChannel#addFollower:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public addFollower(channel: "
								},
								{
									"kind": "Reference",
									"text": "TextChannelResolvable",
									"canonicalReference": "discord.js!TextChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "NewsChannel",
									"canonicalReference": "discord.js!NewsChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "addFollower"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!NewsChannel#threads:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public threads: "
								},
								{
									"kind": "Reference",
									"text": "ThreadManager",
									"canonicalReference": "discord.js!ThreadManager:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AllowedThreadTypeForNewsChannel",
									"canonicalReference": "discord.js!AllowedThreadTypeForNewsChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threads",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!NewsChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildNews",
									"canonicalReference": "discord-api-types!ChannelType.GuildNews:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!NonCategoryGuildBasedChannel:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type NonCategoryGuildBasedChannel = "
						},
						{
							"kind": "Reference",
							"text": "Exclude",
							"canonicalReference": "!Exclude:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "GuildBasedChannel",
							"canonicalReference": "discord.js!GuildBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "CategoryChannel",
							"canonicalReference": "discord.js!CategoryChannel:class"
						},
						{
							"kind": "Content",
							"text": ">"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "NonCategoryGuildBasedChannel",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 7
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!NonSystemMessageType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type NonSystemMessageType =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "MessageType.Default",
							"canonicalReference": "discord-api-types!MessageType.Default:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "MessageType.Reply",
							"canonicalReference": "discord-api-types!MessageType.Reply:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "MessageType.ChatInputCommand",
							"canonicalReference": "discord-api-types!MessageType.ChatInputCommand:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "MessageType.ContextMenuCommand",
							"canonicalReference": "discord-api-types!MessageType.ContextMenuCommand:member"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "NonSystemMessageType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 9
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type NonThreadGuildBasedChannel = "
						},
						{
							"kind": "Reference",
							"text": "Exclude",
							"canonicalReference": "!Exclude:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "GuildBasedChannel",
							"canonicalReference": "discord.js!GuildBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "AnyThreadChannel",
							"canonicalReference": "discord.js!AnyThreadChannel:type"
						},
						{
							"kind": "Content",
							"text": ">"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "NonThreadGuildBasedChannel",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 7
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!OAuth2Guild:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class OAuth2Guild extends "
						},
						{
							"kind": "Reference",
							"text": "BaseGuild",
							"canonicalReference": "discord.js!BaseGuild:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "OAuth2Guild",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!OAuth2Guild#owner:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public owner: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "owner",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!OAuth2Guild#permissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissions: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Options:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Options extends "
						},
						{
							"kind": "Content",
							"text": "null "
						}
					],
					"releaseTag": "Public",
					"name": "Options",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Options.cacheEverything:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static cacheEverything(): "
								},
								{
									"kind": "Reference",
									"text": "CacheFactory",
									"canonicalReference": "discord.js!CacheFactory:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "cacheEverything"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Options.cacheWithLimits:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static cacheWithLimits(settings?: "
								},
								{
									"kind": "Reference",
									"text": "CacheWithLimitsOptions",
									"canonicalReference": "discord.js!CacheWithLimitsOptions:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "CacheFactory",
									"canonicalReference": "discord.js!CacheFactory:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "settings",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "cacheWithLimits"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Options.createDefault:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static createDefault(): "
								},
								{
									"kind": "Reference",
									"text": "ClientOptions",
									"canonicalReference": "discord.js!ClientOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "createDefault"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Options.DefaultMakeCacheSettings:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static get DefaultMakeCacheSettings(): "
								},
								{
									"kind": "Reference",
									"text": "CacheWithLimitsOptions",
									"canonicalReference": "discord.js!CacheWithLimitsOptions:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "DefaultMakeCacheSettings",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Options.DefaultSweeperSettings:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static get DefaultSweeperSettings(): "
								},
								{
									"kind": "Reference",
									"text": "SweeperOptions",
									"canonicalReference": "discord.js!SweeperOptions:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "DefaultSweeperSettings",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!OverwriteData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface OverwriteData "
						}
					],
					"releaseTag": "Public",
					"name": "OverwriteData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!OverwriteData#allow:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "allow?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "allow",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!OverwriteData#deny:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deny?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "deny",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!OverwriteData#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id: "
								},
								{
									"kind": "Reference",
									"text": "GuildMemberResolvable",
									"canonicalReference": "discord.js!GuildMemberResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!OverwriteData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Reference",
									"text": "OverwriteType",
									"canonicalReference": "discord-api-types!OverwriteType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!OverwriteResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type OverwriteResolvable = "
						},
						{
							"kind": "Reference",
							"text": "PermissionOverwrites",
							"canonicalReference": "discord.js!PermissionOverwrites:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "OverwriteData",
							"canonicalReference": "discord.js!OverwriteData:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "OverwriteResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!parseEmoji:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function parseEmoji(text: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "{ animated: boolean; name: string; id: "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " | null } | null"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 6
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "text",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "parseEmoji"
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!parseWebhookURL:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function parseWebhookURL(url: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Reference",
							"text": "WebhookClientDataIdWithToken",
							"canonicalReference": "discord.js!WebhookClientDataIdWithToken:interface"
						},
						{
							"kind": "Content",
							"text": " | null"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 5
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "url",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "parseWebhookURL"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialChannelData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialChannelData "
						}
					],
					"releaseTag": "Public",
					"name": "PartialChannelData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#bitrate:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "bitrate?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "bitrate",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#nsfw:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "nsfw?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "nsfw",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#parentId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "parentId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "parentId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#permissionOverwrites:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "permissionOverwrites?: "
								},
								{
									"kind": "Reference",
									"text": "PartialOverwriteData",
									"canonicalReference": "discord.js!PartialOverwriteData:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "permissionOverwrites",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#rateLimitPerUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "rateLimitPerUser?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "rateLimitPerUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#rtcRegion:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "rtcRegion?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "rtcRegion",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#topic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "topic?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "topic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildText",
									"canonicalReference": "discord-api-types!ChannelType.GuildText:member"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildVoice",
									"canonicalReference": "discord-api-types!ChannelType.GuildVoice:member"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildCategory",
									"canonicalReference": "discord-api-types!ChannelType.GuildCategory:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#userLimit:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "userLimit?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "userLimit",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialChannelData#videoQualityMode:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "videoQualityMode?: "
								},
								{
									"kind": "Reference",
									"text": "VideoQualityMode",
									"canonicalReference": "discord-api-types!VideoQualityMode:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "videoQualityMode",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialDMChannel:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialDMChannel extends "
						},
						{
							"kind": "Reference",
							"text": "Partialize",
							"canonicalReference": "discord.js!Partialize:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "DMChannel",
							"canonicalReference": "discord.js!DMChannel:class"
						},
						{
							"kind": "Content",
							"text": ", null, null, 'lastMessageId'> "
						}
					],
					"releaseTag": "Public",
					"name": "PartialDMChannel",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialDMChannel#lastMessageId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "lastMessageId: "
								},
								{
									"kind": "Content",
									"text": "undefined"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "lastMessageId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!PartialGroupDMChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class PartialGroupDMChannel extends "
						},
						{
							"kind": "Reference",
							"text": "BaseChannel",
							"canonicalReference": "discord.js!BaseChannel:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "PartialGroupDMChannel",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PartialGroupDMChannel#icon:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public icon: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "icon",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PartialGroupDMChannel#iconURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public iconURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "iconURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PartialGroupDMChannel#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PartialGroupDMChannel#recipients:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public recipients: "
								},
								{
									"kind": "Reference",
									"text": "PartialRecipient",
									"canonicalReference": "discord.js!PartialRecipient:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "recipients",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PartialGroupDMChannel#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Reference",
									"text": "ChannelMention",
									"canonicalReference": "discord.js!ChannelMention:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PartialGroupDMChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GroupDM",
									"canonicalReference": "discord-api-types!ChannelType.GroupDM:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialGuildMember:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialGuildMember extends "
						},
						{
							"kind": "Reference",
							"text": "Partialize",
							"canonicalReference": "discord.js!Partialize:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "GuildMember",
							"canonicalReference": "discord.js!GuildMember:class"
						},
						{
							"kind": "Content",
							"text": ", 'joinedAt' | 'joinedTimestamp' | 'pending'> "
						}
					],
					"releaseTag": "Public",
					"name": "PartialGuildMember",
					"members": [],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!Partialize:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type Partialize<\n  T extends "
						},
						{
							"kind": "Reference",
							"text": "AllowedPartial",
							"canonicalReference": "discord.js!AllowedPartial:type"
						},
						{
							"kind": "Content",
							"text": ",\n  N extends "
						},
						{
							"kind": "Content",
							"text": "keyof T | null "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "null"
						},
						{
							"kind": "Content",
							"text": ",\n  M extends "
						},
						{
							"kind": "Content",
							"text": "keyof T | null "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "null"
						},
						{
							"kind": "Content",
							"text": ",\n  E extends "
						},
						{
							"kind": "Content",
							"text": "keyof T | '' "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "''"
						},
						{
							"kind": "Content",
							"text": ",\n> = "
						},
						{
							"kind": "Content",
							"text": "{\n  readonly client: "
						},
						{
							"kind": "Reference",
							"text": "Client",
							"canonicalReference": "discord.js!Client:class"
						},
						{
							"kind": "Content",
							"text": ";\n  id: "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";\n  partial: true;\n} & {\n  [K in keyof "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<T, 'client' | 'id' | 'partial' | E>]: K extends N ? null : K extends M ? T[K] | null : T[K];\n}"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "Partialize",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "N",
							"constraintTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"defaultTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							}
						},
						{
							"typeParameterName": "M",
							"constraintTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"defaultTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 10
							}
						},
						{
							"typeParameterName": "E",
							"constraintTokenRange": {
								"startIndex": 11,
								"endIndex": 12
							},
							"defaultTypeTokenRange": {
								"startIndex": 13,
								"endIndex": 14
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 15,
						"endIndex": 22
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialMessage:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialMessage\n  extends "
						},
						{
							"kind": "Reference",
							"text": "Partialize",
							"canonicalReference": "discord.js!Partialize:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": ", 'type' | 'system' | 'pinned' | 'tts', 'content' | 'cleanContent' | 'author'> "
						}
					],
					"releaseTag": "Public",
					"name": "PartialMessage",
					"members": [],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialMessageReaction:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialMessageReaction extends "
						},
						{
							"kind": "Reference",
							"text": "Partialize",
							"canonicalReference": "discord.js!Partialize:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "MessageReaction",
							"canonicalReference": "discord.js!MessageReaction:class"
						},
						{
							"kind": "Content",
							"text": ", 'count'> "
						}
					],
					"releaseTag": "Public",
					"name": "PartialMessageReaction",
					"members": [],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialOverwriteData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialOverwriteData "
						}
					],
					"releaseTag": "Public",
					"name": "PartialOverwriteData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialOverwriteData#allow:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "allow?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "allow",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialOverwriteData#deny:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deny?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "deny",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialOverwriteData#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialOverwriteData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Reference",
									"text": "OverwriteType",
									"canonicalReference": "discord-api-types!OverwriteType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialRecipient:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialRecipient "
						}
					],
					"releaseTag": "Public",
					"name": "PartialRecipient",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialRecipient#username:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "username: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "username",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialRoleData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialRoleData extends "
						},
						{
							"kind": "Reference",
							"text": "RoleData",
							"canonicalReference": "discord.js!RoleData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "PartialRoleData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialRoleData#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Enum",
					"canonicalReference": "discord.js!Partials:enum",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export enum Partials "
						}
					],
					"releaseTag": "Public",
					"name": "Partials",
					"members": [
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Partials.Channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Channel"
								}
							],
							"releaseTag": "Public",
							"name": "Channel",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Partials.GuildMember:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildMember"
								}
							],
							"releaseTag": "Public",
							"name": "GuildMember",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Partials.GuildScheduledEvent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "GuildScheduledEvent"
								}
							],
							"releaseTag": "Public",
							"name": "GuildScheduledEvent",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Partials.Message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Message"
								}
							],
							"releaseTag": "Public",
							"name": "Message",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Partials.Reaction:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Reaction"
								}
							],
							"releaseTag": "Public",
							"name": "Reaction",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Partials.ThreadMember:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ThreadMember"
								}
							],
							"releaseTag": "Public",
							"name": "ThreadMember",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Partials.User:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "User"
								}
							],
							"releaseTag": "Public",
							"name": "User",
							"initializerTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					]
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!PartialTextBasedChannel:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function PartialTextBasedChannel<T>(Base?: "
						},
						{
							"kind": "Reference",
							"text": "Constructable",
							"canonicalReference": "discord.js!Constructable:type"
						},
						{
							"kind": "Content",
							"text": "<T>"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Reference",
							"text": "Constructable",
							"canonicalReference": "discord.js!Constructable:type"
						},
						{
							"kind": "Content",
							"text": "<T & "
						},
						{
							"kind": "Reference",
							"text": "PartialTextBasedChannelFields",
							"canonicalReference": "discord.js!PartialTextBasedChannelFields:interface"
						},
						{
							"kind": "Content",
							"text": ">"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 4,
						"endIndex": 8
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "Base",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isOptional": true
						}
					],
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "PartialTextBasedChannel"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialTextBasedChannelFields:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialTextBasedChannelFields "
						}
					],
					"releaseTag": "Public",
					"name": "PartialTextBasedChannelFields",
					"members": [
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!PartialTextBasedChannelFields#send:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "send(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "MessageOptions",
									"canonicalReference": "discord.js!MessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"name": "send"
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialThreadMember:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialThreadMember extends "
						},
						{
							"kind": "Reference",
							"text": "Partialize",
							"canonicalReference": "discord.js!Partialize:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "ThreadMember",
							"canonicalReference": "discord.js!ThreadMember:class"
						},
						{
							"kind": "Content",
							"text": ", 'flags' | 'joinedAt' | 'joinedTimestamp'> "
						}
					],
					"releaseTag": "Public",
					"name": "PartialThreadMember",
					"members": [],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialUser:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialUser extends "
						},
						{
							"kind": "Reference",
							"text": "Partialize",
							"canonicalReference": "discord.js!Partialize:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "User",
							"canonicalReference": "discord.js!User:class"
						},
						{
							"kind": "Content",
							"text": ", 'username' | 'tag' | 'discriminator'> "
						}
					],
					"releaseTag": "Public",
					"name": "PartialUser",
					"members": [],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PartialWebhookFields:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PartialWebhookFields "
						}
					],
					"releaseTag": "Public",
					"name": "PartialWebhookFields",
					"members": [
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!PartialWebhookFields#deleteMessage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deleteMessage(message: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIMessage",
									"canonicalReference": "discord-api-types!APIMessage:interface"
								},
								{
									"kind": "Content",
									"text": " | '@original'"
								},
								{
									"kind": "Content",
									"text": ", threadId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "threadId",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 7
									},
									"isOptional": true
								}
							],
							"name": "deleteMessage"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!PartialWebhookFields#editMessage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "editMessage(\n    message: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | '@original'"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookEditMessageOptions",
									"canonicalReference": "discord.js!WebhookEditMessageOptions:type"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessage",
									"canonicalReference": "discord-api-types!APIMessage:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 15
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"name": "editMessage"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!PartialWebhookFields#fetchMessage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "fetchMessage(message: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | '@original'"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "WebhookFetchMessageOptions",
									"canonicalReference": "discord.js!WebhookFetchMessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessage",
									"canonicalReference": "discord-api-types!APIMessage:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"name": "fetchMessage"
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PartialWebhookFields#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!PartialWebhookFields#send:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "send(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Omit",
									"canonicalReference": "!Omit:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "WebhookMessageOptions",
									"canonicalReference": "discord.js!WebhookMessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": ", 'flags'>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessage",
									"canonicalReference": "discord-api-types!APIMessage:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 15
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"name": "send"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PartialWebhookFields#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "get url(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!PartialWebhookMixin:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function PartialWebhookMixin<T>(Base?: "
						},
						{
							"kind": "Reference",
							"text": "Constructable",
							"canonicalReference": "discord.js!Constructable:type"
						},
						{
							"kind": "Content",
							"text": "<T>"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Reference",
							"text": "Constructable",
							"canonicalReference": "discord.js!Constructable:type"
						},
						{
							"kind": "Content",
							"text": "<T & "
						},
						{
							"kind": "Reference",
							"text": "PartialWebhookFields",
							"canonicalReference": "discord.js!PartialWebhookFields:interface"
						},
						{
							"kind": "Content",
							"text": ">"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 4,
						"endIndex": 8
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "Base",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isOptional": true
						}
					],
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "PartialWebhookMixin"
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!PermissionFlags:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type PermissionFlags = "
						},
						{
							"kind": "Reference",
							"text": "Record",
							"canonicalReference": "!Record:type"
						},
						{
							"kind": "Content",
							"text": "<keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "PermissionFlagsBits",
							"canonicalReference": "discord-api-types!PermissionFlagsBits:var"
						},
						{
							"kind": "Content",
							"text": ", bigint>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "PermissionFlags",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!PermissionOverwriteManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class PermissionOverwriteManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ",\n  "
						},
						{
							"kind": "Reference",
							"text": "PermissionOverwrites",
							"canonicalReference": "discord.js!PermissionOverwrites:class"
						},
						{
							"kind": "Content",
							"text": ",\n  "
						},
						{
							"kind": "Reference",
							"text": "PermissionOverwriteResolvable",
							"canonicalReference": "discord.js!PermissionOverwriteResolvable:type"
						},
						{
							"kind": "Content",
							"text": "\n> "
						}
					],
					"releaseTag": "Public",
					"name": "PermissionOverwriteManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionOverwriteManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(\n    userOrRole: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Reference",
									"text": "PermissionOverwriteOptions",
									"canonicalReference": "discord.js!PermissionOverwriteOptions:type"
								},
								{
									"kind": "Content",
									"text": ",\n    overwriteOptions?: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelOverwriteOptions",
									"canonicalReference": "discord.js!GuildChannelOverwriteOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "userOrRole",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": false
								},
								{
									"parameterName": "overwriteOptions",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 8
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionOverwriteManager#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(userOrRole: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "userOrRole",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionOverwriteManager#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(\n    userOrRole: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Reference",
									"text": "PermissionOverwriteOptions",
									"canonicalReference": "discord.js!PermissionOverwriteOptions:type"
								},
								{
									"kind": "Content",
									"text": ",\n    overwriteOptions?: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelOverwriteOptions",
									"canonicalReference": "discord.js!GuildChannelOverwriteOptions:interface"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "userOrRole",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": false
								},
								{
									"parameterName": "overwriteOptions",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 8
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionOverwriteManager#set:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public set(\n    overwrites: "
								},
								{
									"kind": "Content",
									"text": "readonly "
								},
								{
									"kind": "Reference",
									"text": "OverwriteResolvable",
									"canonicalReference": "discord.js!OverwriteResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[] | "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "OverwriteResolvable",
									"canonicalReference": "discord.js!OverwriteResolvable:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ",\n    reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 13,
								"endIndex": 17
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "overwrites",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 10
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 11,
										"endIndex": 12
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "set"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!PermissionOverwriteOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type PermissionOverwriteOptions = "
						},
						{
							"kind": "Reference",
							"text": "Partial",
							"canonicalReference": "!Partial:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Record",
							"canonicalReference": "!Record:type"
						},
						{
							"kind": "Content",
							"text": "<keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "PermissionFlagsBits",
							"canonicalReference": "discord-api-types!PermissionFlagsBits:var"
						},
						{
							"kind": "Content",
							"text": ", boolean | null>>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "PermissionOverwriteOptions",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 7
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!PermissionOverwriteResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type PermissionOverwriteResolvable = "
						},
						{
							"kind": "Reference",
							"text": "UserResolvable",
							"canonicalReference": "discord.js!UserResolvable:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "RoleResolvable",
							"canonicalReference": "discord.js!RoleResolvable:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "PermissionOverwrites",
							"canonicalReference": "discord.js!PermissionOverwrites:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "PermissionOverwriteResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!PermissionOverwrites:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class PermissionOverwrites extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "PermissionOverwrites",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PermissionOverwrites#allow:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public allow: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "allow",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PermissionOverwrites#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly channel: "
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionOverwrites#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionOverwrites",
									"canonicalReference": "discord.js!PermissionOverwrites:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PermissionOverwrites#deny:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deny: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deny",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionOverwrites#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(options: "
								},
								{
									"kind": "Reference",
									"text": "PermissionOverwriteOptions",
									"canonicalReference": "discord.js!PermissionOverwriteOptions:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionOverwrites",
									"canonicalReference": "discord.js!PermissionOverwrites:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PermissionOverwrites#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionOverwrites.resolve:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolve(overwrite: "
								},
								{
									"kind": "Reference",
									"text": "OverwriteResolvable",
									"canonicalReference": "discord.js!OverwriteResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "APIOverwrite",
									"canonicalReference": "discord-api-types!APIOverwrite:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "overwrite",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "guild",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolve"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionOverwrites.resolveOverwriteOptions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolveOverwriteOptions(\n    options: "
								},
								{
									"kind": "Reference",
									"text": "PermissionOverwriteOptions",
									"canonicalReference": "discord.js!PermissionOverwriteOptions:type"
								},
								{
									"kind": "Content",
									"text": ",\n    initialPermissions: "
								},
								{
									"kind": "Content",
									"text": "{ allow?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": "; deny?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": " }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "ResolvedOverwriteOptions",
									"canonicalReference": "discord.js!ResolvedOverwriteOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "initialPermissions",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "resolveOverwriteOptions"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionOverwrites#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PermissionOverwrites#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "OverwriteType",
									"canonicalReference": "discord-api-types!OverwriteType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!PermissionResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type PermissionResolvable = "
						},
						{
							"kind": "Reference",
							"text": "BitFieldResolvable",
							"canonicalReference": "discord.js!BitFieldResolvable:type"
						},
						{
							"kind": "Content",
							"text": "<keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "PermissionFlagsBits",
							"canonicalReference": "discord-api-types!PermissionFlagsBits:var"
						},
						{
							"kind": "Content",
							"text": ", bigint>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "PermissionResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!PermissionsBitField:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class PermissionsBitField extends "
						},
						{
							"kind": "Reference",
							"text": "BitField",
							"canonicalReference": "discord.js!BitField:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "PermissionsString",
							"canonicalReference": "discord.js!PermissionsString:type"
						},
						{
							"kind": "Content",
							"text": ", bigint> "
						}
					],
					"releaseTag": "Public",
					"name": "PermissionsBitField",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PermissionsBitField.All:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static All: "
								},
								{
									"kind": "Content",
									"text": "bigint"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "All",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionsBitField#any:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public any(permission: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", checkAdmin?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "permission",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "checkAdmin",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "any"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PermissionsBitField.Default:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Default: "
								},
								{
									"kind": "Content",
									"text": "bigint"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Default",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PermissionsBitField.Flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Flags: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "PermissionFlagsBits",
									"canonicalReference": "discord-api-types!PermissionFlagsBits:var"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionsBitField#has:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public has(permission: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", checkAdmin?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "permission",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "checkAdmin",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "has"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionsBitField#missing:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public missing(bits: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsString",
									"canonicalReference": "discord.js!PermissionsString:type"
								},
								{
									"kind": "Content",
									"text": ", bigint>"
								},
								{
									"kind": "Content",
									"text": ", checkAdmin?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "PermissionsString",
									"canonicalReference": "discord.js!PermissionsString:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bits",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "checkAdmin",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 7
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "missing"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionsBitField.resolve:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolve(permission?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "bigint"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "permission",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "resolve"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionsBitField#serialize:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public serialize(checkAdmin?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Record",
									"canonicalReference": "!Record:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsString",
									"canonicalReference": "discord.js!PermissionsString:type"
								},
								{
									"kind": "Content",
									"text": ", boolean>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "checkAdmin",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "serialize"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PermissionsBitField.StageModerator:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static StageModerator: "
								},
								{
									"kind": "Content",
									"text": "bigint"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "StageModerator",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!PermissionsBitField#toArray:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toArray(): "
								},
								{
									"kind": "Reference",
									"text": "PermissionsString",
									"canonicalReference": "discord.js!PermissionsString:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toArray"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!PermissionsString:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type PermissionsString = "
						},
						{
							"kind": "Content",
							"text": "keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "PermissionFlagsBits",
							"canonicalReference": "discord-api-types!PermissionFlagsBits:var"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "PermissionsString",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Presence:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Presence extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Presence",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!Presence:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `Presence` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", data?: "
								},
								{
									"kind": "Reference",
									"text": "RawPresenceData",
									"canonicalReference": "discord.js!RawPresenceData:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Presence#activities:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public activities: "
								},
								{
									"kind": "Reference",
									"text": "Activity",
									"canonicalReference": "discord.js!Activity:class"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "activities",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Presence#clientStatus:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public clientStatus: "
								},
								{
									"kind": "Reference",
									"text": "ClientPresenceStatusData",
									"canonicalReference": "discord.js!ClientPresenceStatusData:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "clientStatus",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Presence#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(presence: "
								},
								{
									"kind": "Reference",
									"text": "Presence",
									"canonicalReference": "discord.js!Presence:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "presence",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Presence#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Presence#member:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get member(): "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "member",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Presence#status:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public status: "
								},
								{
									"kind": "Reference",
									"text": "PresenceStatus",
									"canonicalReference": "discord.js!PresenceStatus:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "status",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Presence#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get user(): "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Presence#userId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public userId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "userId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PresenceData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PresenceData "
						}
					],
					"releaseTag": "Public",
					"name": "PresenceData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PresenceData#activities:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "activities?: "
								},
								{
									"kind": "Reference",
									"text": "ActivitiesOptions",
									"canonicalReference": "discord.js!ActivitiesOptions:type"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "activities",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PresenceData#afk:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "afk?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "afk",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PresenceData#shardId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shardId?: "
								},
								{
									"kind": "Content",
									"text": "number | number[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "shardId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PresenceData#status:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "status?: "
								},
								{
									"kind": "Reference",
									"text": "PresenceStatusData",
									"canonicalReference": "discord.js!PresenceStatusData:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "status",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!PresenceManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class PresenceManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Presence",
							"canonicalReference": "discord.js!Presence:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "PresenceResolvable",
							"canonicalReference": "discord.js!PresenceResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "PresenceManager",
					"members": [],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!PresenceResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type PresenceResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Presence",
							"canonicalReference": "discord.js!Presence:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "UserResolvable",
							"canonicalReference": "discord.js!UserResolvable:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "PresenceResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 6
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!PresenceStatus:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type PresenceStatus = "
						},
						{
							"kind": "Reference",
							"text": "PresenceStatusData",
							"canonicalReference": "discord.js!PresenceStatusData:type"
						},
						{
							"kind": "Content",
							"text": " | 'offline'"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "PresenceStatus",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!PresenceStatusData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type PresenceStatusData = "
						},
						{
							"kind": "Reference",
							"text": "ClientPresenceStatus",
							"canonicalReference": "discord.js!ClientPresenceStatus:type"
						},
						{
							"kind": "Content",
							"text": " | 'invisible'"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "PresenceStatusData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PrivateThreadChannel:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PrivateThreadChannel extends "
						},
						{
							"kind": "Reference",
							"text": "ThreadChannel",
							"canonicalReference": "discord.js!ThreadChannel:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "PrivateThreadChannel",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PrivateThreadChannel#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!PrivateThreadChannel#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PrivateThreadChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildPrivateThread",
									"canonicalReference": "discord-api-types!ChannelType.GuildPrivateThread:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!PublicThreadChannel:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface PublicThreadChannel extends "
						},
						{
							"kind": "Reference",
							"text": "ThreadChannel",
							"canonicalReference": "discord.js!ThreadChannel:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "PublicThreadChannel",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!PublicThreadChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildPublicThread",
									"canonicalReference": "discord-api-types!ChannelType.GuildPublicThread:member"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildNewsThread",
									"canonicalReference": "discord-api-types!ChannelType.GuildNewsThread:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ReactionCollector:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ReactionCollector extends "
						},
						{
							"kind": "Reference",
							"text": "Collector",
							"canonicalReference": "discord.js!Collector:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " | string, "
						},
						{
							"kind": "Reference",
							"text": "MessageReaction",
							"canonicalReference": "discord.js!MessageReaction:class"
						},
						{
							"kind": "Content",
							"text": ", ["
						},
						{
							"kind": "Reference",
							"text": "User",
							"canonicalReference": "discord.js!User:class"
						},
						{
							"kind": "Content",
							"text": "]> "
						}
					],
					"releaseTag": "Public",
					"name": "ReactionCollector",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!ReactionCollector:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `ReactionCollector` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "ReactionCollectorOptions",
									"canonicalReference": "discord.js!ReactionCollectorOptions:interface"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionCollector#collect:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public collect(reaction: "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ", user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reaction",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "collect"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionCollector#dispose:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public dispose(reaction: "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ", user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reaction",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "dispose"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionCollector#empty:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public empty(): "
								},
								{
									"kind": "Content",
									"text": "void"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "empty"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionCollector.key:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static key(reaction: "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reaction",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "key"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ReactionCollector#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionCollector#on:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on(\n    event: "
								},
								{
									"kind": "Content",
									"text": "'collect' | 'dispose' | 'remove' | 'ignore'"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(reaction: "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ", user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ") => void"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionCollector#on:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on(event: "
								},
								{
									"kind": "Content",
									"text": "'end'"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(collected: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ">, reason: string) => void"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 11,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 10
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionCollector#on:member(3)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on(event: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: any[]) => void"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 3,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionCollector#once:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once(\n    event: "
								},
								{
									"kind": "Content",
									"text": "'collect' | 'dispose' | 'remove' | 'ignore'"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(reaction: "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ", user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ") => void"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionCollector#once:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once(\n    event: "
								},
								{
									"kind": "Content",
									"text": "'end'"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(collected: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ">, reason: string) => void"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 11,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 10
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionCollector#once:member(3)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once(event: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: any[]) => void"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 3,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ReactionCollector#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "ReactionCollectorOptions",
									"canonicalReference": "discord.js!ReactionCollectorOptions:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ReactionCollector#total:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public total: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "total",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ReactionCollector#users:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public users: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "users",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ReactionCollectorOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ReactionCollectorOptions extends "
						},
						{
							"kind": "Reference",
							"text": "CollectorOptions",
							"canonicalReference": "discord.js!CollectorOptions:interface"
						},
						{
							"kind": "Content",
							"text": "<["
						},
						{
							"kind": "Reference",
							"text": "MessageReaction",
							"canonicalReference": "discord.js!MessageReaction:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "User",
							"canonicalReference": "discord.js!User:class"
						},
						{
							"kind": "Content",
							"text": "]> "
						}
					],
					"releaseTag": "Public",
					"name": "ReactionCollectorOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ReactionCollectorOptions#max:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "max?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "max",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ReactionCollectorOptions#maxEmojis:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxEmojis?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxEmojis",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ReactionCollectorOptions#maxUsers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxUsers?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxUsers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 6
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ReactionEmoji:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ReactionEmoji extends "
						},
						{
							"kind": "Reference",
							"text": "Emoji",
							"canonicalReference": "discord.js!Emoji:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ReactionEmoji",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ReactionEmoji#reaction:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reaction: "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "reaction",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionEmoji#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ReactionManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ReactionManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " | string, "
						},
						{
							"kind": "Reference",
							"text": "MessageReaction",
							"canonicalReference": "discord.js!MessageReaction:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "MessageReactionResolvable",
							"canonicalReference": "discord.js!MessageReactionResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "ReactionManager",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ReactionManager#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public message: "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionManager#removeAll:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public removeAll(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "removeAll"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ReactionUserManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ReactionUserManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "User",
							"canonicalReference": "discord.js!User:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "UserResolvable",
							"canonicalReference": "discord.js!UserResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "ReactionUserManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionUserManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchReactionUsersOptions",
									"canonicalReference": "discord.js!FetchReactionUsersOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ReactionUserManager#reaction:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public reaction: "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "reaction",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ReactionUserManager#remove:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public remove(user?: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "remove"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!RecursiveArray:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type RecursiveArray<T> = "
						},
						{
							"kind": "Reference",
							"text": "ReadonlyArray",
							"canonicalReference": "!ReadonlyArray:interface"
						},
						{
							"kind": "Content",
							"text": "<T | "
						},
						{
							"kind": "Reference",
							"text": "RecursiveArray",
							"canonicalReference": "discord.js!RecursiveArray:type"
						},
						{
							"kind": "Content",
							"text": "<T>>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "RecursiveArray",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!RecursiveReadonlyArray:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type RecursiveReadonlyArray<T> = "
						},
						{
							"kind": "Reference",
							"text": "ReadonlyArray",
							"canonicalReference": "!ReadonlyArray:interface"
						},
						{
							"kind": "Content",
							"text": "<T | "
						},
						{
							"kind": "Reference",
							"text": "RecursiveReadonlyArray",
							"canonicalReference": "discord.js!RecursiveReadonlyArray:type"
						},
						{
							"kind": "Content",
							"text": "<T>>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "RecursiveReadonlyArray",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ReplyMessageOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ReplyMessageOptions extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "MessageOptions",
							"canonicalReference": "discord.js!MessageOptions:interface"
						},
						{
							"kind": "Content",
							"text": ", 'reply'> "
						}
					],
					"releaseTag": "Public",
					"name": "ReplyMessageOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ReplyMessageOptions#failIfNotExists:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "failIfNotExists?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "failIfNotExists",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ReplyOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ReplyOptions "
						}
					],
					"releaseTag": "Public",
					"name": "ReplyOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ReplyOptions#failIfNotExists:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "failIfNotExists?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "failIfNotExists",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ReplyOptions#messageReference:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messageReference: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageReference",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!resolveColor:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function resolveColor(color: "
						},
						{
							"kind": "Reference",
							"text": "ColorResolvable",
							"canonicalReference": "discord.js!ColorResolvable:type"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "number"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 4
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "color",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "resolveColor"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ResolvedOverwriteOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ResolvedOverwriteOptions "
						}
					],
					"releaseTag": "Public",
					"name": "ResolvedOverwriteOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ResolvedOverwriteOptions#allow:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "allow: "
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "allow",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ResolvedOverwriteOptions#deny:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "deny: "
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deny",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!resolvePartialEmoji:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function resolvePartialEmoji(emoji: "
						},
						{
							"kind": "Reference",
							"text": "EmojiIdentifierResolvable",
							"canonicalReference": "discord.js!EmojiIdentifierResolvable:type"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Reference",
							"text": "Partial",
							"canonicalReference": "!Partial:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APIPartialEmoji",
							"canonicalReference": "discord-api-types!APIPartialEmoji:interface"
						},
						{
							"kind": "Content",
							"text": "> | null"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 3,
						"endIndex": 7
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "emoji",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						}
					],
					"name": "resolvePartialEmoji"
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!RichPresenceAssets:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class RichPresenceAssets "
						}
					],
					"releaseTag": "Public",
					"name": "RichPresenceAssets",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!RichPresenceAssets#largeImage:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public largeImage: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "largeImage",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!RichPresenceAssets#largeImageURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public largeImageURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "largeImageURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!RichPresenceAssets#largeText:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public largeText: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "largeText",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!RichPresenceAssets#smallImage:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public smallImage: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "smallImage",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!RichPresenceAssets#smallImageURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public smallImageURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "smallImageURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!RichPresenceAssets#smallText:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public smallText: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "smallText",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Role:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Role extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Role",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#color:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public color: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "color",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#comparePositionTo:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public comparePositionTo(role: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "role",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "comparePositionTo"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(data: "
								},
								{
									"kind": "Reference",
									"text": "EditRoleOptions",
									"canonicalReference": "discord.js!EditRoleOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#editable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get editable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "editable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(role: "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "role",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#hexColor:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get hexColor(): "
								},
								{
									"kind": "Reference",
									"text": "HexColorString",
									"canonicalReference": "discord.js!HexColorString:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "hexColor",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#hoist:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public hoist: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "hoist",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#icon:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public icon: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "icon",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#iconURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public iconURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "iconURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#managed:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public managed: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "managed",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#members:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get members(): "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "members",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#mentionable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public mentionable: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "mentionable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#permissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissions: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#permissionsIn:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissionsIn(\n    channel: "
								},
								{
									"kind": "Reference",
									"text": "NonThreadGuildBasedChannel",
									"canonicalReference": "discord.js!NonThreadGuildBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ",\n    checkAdmin?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "checkAdmin",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "permissionsIn"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#position:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get position(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "position",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#rawPosition:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public rawPosition: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rawPosition",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#setColor:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setColor(color: "
								},
								{
									"kind": "Reference",
									"text": "ColorResolvable",
									"canonicalReference": "discord.js!ColorResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "color",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setColor"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#setHoist:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setHoist(hoist?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "hoist",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setHoist"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#setIcon:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setIcon(icon: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "EmojiResolvable",
									"canonicalReference": "discord.js!EmojiResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 10,
								"endIndex": 14
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "icon",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 8,
										"endIndex": 9
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setIcon"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#setMentionable:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setMentionable(mentionable?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "mentionable",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setMentionable"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#setName:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setName(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setName"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#setPermissions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setPermissions(permissions: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "permissions",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setPermissions"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#setPosition:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setPosition(position: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "SetRolePositionOptions",
									"canonicalReference": "discord.js!SetRolePositionOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "position",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setPosition"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#setUnicodeEmoji:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setUnicodeEmoji(unicodeEmoji: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "unicodeEmoji",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setUnicodeEmoji"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#tags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public tags: "
								},
								{
									"kind": "Reference",
									"text": "RoleTagData",
									"canonicalReference": "discord.js!RoleTagData:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "tags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Role#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Reference",
									"text": "RoleMention",
									"canonicalReference": "discord.js!RoleMention:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Role#unicodeEmoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public unicodeEmoji: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "unicodeEmoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!RoleData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface RoleData "
						}
					],
					"releaseTag": "Public",
					"name": "RoleData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RoleData#color:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "color?: "
								},
								{
									"kind": "Reference",
									"text": "ColorResolvable",
									"canonicalReference": "discord.js!ColorResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "color",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RoleData#hoist:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "hoist?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "hoist",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RoleData#icon:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "icon?: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Base64Resolvable",
									"canonicalReference": "discord.js!Base64Resolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "EmojiResolvable",
									"canonicalReference": "discord.js!EmojiResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "icon",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RoleData#mentionable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "mentionable?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "mentionable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RoleData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RoleData#permissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "permissions?: "
								},
								{
									"kind": "Reference",
									"text": "PermissionResolvable",
									"canonicalReference": "discord.js!PermissionResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "permissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RoleData#position:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "position?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "position",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RoleData#unicodeEmoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "unicodeEmoji?: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "unicodeEmoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!RoleManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class RoleManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "Role",
							"canonicalReference": "discord.js!Role:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "RoleResolvable",
							"canonicalReference": "discord.js!RoleResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "RoleManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!RoleManager#botRoleFor:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public botRoleFor(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "botRoleFor"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!RoleManager#comparePositions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public comparePositions(role1: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", role2: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "role1",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "role2",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "comparePositions"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!RoleManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(options?: "
								},
								{
									"kind": "Reference",
									"text": "CreateRoleOptions",
									"canonicalReference": "discord.js!CreateRoleOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!RoleManager#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(role: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "role",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!RoleManager#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(role: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options: "
								},
								{
									"kind": "Reference",
									"text": "EditRoleOptions",
									"canonicalReference": "discord.js!EditRoleOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "role",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!RoleManager#everyone:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get everyone(): "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "everyone",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!RoleManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!RoleManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(id?: "
								},
								{
									"kind": "Content",
									"text": "undefined"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!RoleManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!RoleManager#highest:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get highest(): "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "highest",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!RoleManager#premiumSubscriberRole:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get premiumSubscriberRole(): "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "premiumSubscriberRole",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!RoleManager#setPosition:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setPosition(role: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", position: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "SetRolePositionOptions",
									"canonicalReference": "discord.js!SetRolePositionOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "role",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "position",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setPosition"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!RoleManager#setPositions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setPositions(rolePositions: "
								},
								{
									"kind": "Content",
									"text": "readonly "
								},
								{
									"kind": "Reference",
									"text": "RolePosition",
									"canonicalReference": "discord.js!RolePosition:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "rolePositions",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setPositions"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!RoleMention:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type RoleMention = "
						},
						{
							"kind": "Content",
							"text": "'@everyone' | `<@&${"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": "}>`"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "RoleMention",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!RolePermissionConstant:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type RolePermissionConstant = "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "RolePermissionConstant",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!RolePosition:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface RolePosition "
						}
					],
					"releaseTag": "Public",
					"name": "RolePosition",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RolePosition#position:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "position: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "position",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RolePosition#role:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "role: "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "role",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!RoleResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type RoleResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Role",
							"canonicalReference": "discord.js!Role:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "RoleResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!RoleTagData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface RoleTagData "
						}
					],
					"releaseTag": "Public",
					"name": "RoleTagData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RoleTagData#botId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "botId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "botId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RoleTagData#integrationId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "integrationId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "integrationId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!RoleTagData#premiumSubscriberRole:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "premiumSubscriberRole?: "
								},
								{
									"kind": "Content",
									"text": "true"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "premiumSubscriberRole",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!SelectMenuBuilder:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class SelectMenuBuilder extends "
						},
						{
							"kind": "Reference",
							"text": "BuilderSelectMenuComponent",
							"canonicalReference": "@discordjs/builders!~SelectMenuBuilder:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "SelectMenuBuilder",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!SelectMenuBuilder:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `SelectMenuBuilder` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(data?: "
								},
								{
									"kind": "Reference",
									"text": "Partial",
									"canonicalReference": "!Partial:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SelectMenuComponentData",
									"canonicalReference": "discord.js!SelectMenuComponentData:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuComponent",
									"canonicalReference": "discord-api-types!APISelectMenuComponent:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!SelectMenuBuilder#addOptions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public override addOptions(\n    ...options: "
								},
								{
									"kind": "Reference",
									"text": "RestOrArray",
									"canonicalReference": "@discordjs/builders!~RestOrArray:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BuildersSelectMenuOption",
									"canonicalReference": "@discordjs/builders!~UnsafeSelectMenuOptionBuilder:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuComponentOptionData",
									"canonicalReference": "discord.js!SelectMenuComponentOptionData:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuOption",
									"canonicalReference": "discord-api-types!APISelectMenuOption:interface"
								},
								{
									"kind": "Content",
									"text": ">\n  "
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 10,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "addOptions"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!SelectMenuBuilder.from:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static from(other: "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuComponent",
									"canonicalReference": "discord-api-types!APISelectMenuComponent:interface"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuComponent",
									"canonicalReference": "discord-api-types!APISelectMenuComponent:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuBuilder",
									"canonicalReference": "discord.js!SelectMenuBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "from"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!SelectMenuBuilder#setOptions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public override setOptions(\n    ...options: "
								},
								{
									"kind": "Reference",
									"text": "RestOrArray",
									"canonicalReference": "@discordjs/builders!~RestOrArray:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "BuildersSelectMenuOption",
									"canonicalReference": "@discordjs/builders!~UnsafeSelectMenuOptionBuilder:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuComponentOptionData",
									"canonicalReference": "discord.js!SelectMenuComponentOptionData:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuOption",
									"canonicalReference": "discord-api-types!APISelectMenuOption:interface"
								},
								{
									"kind": "Content",
									"text": ">\n  "
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 10,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setOptions"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!SelectMenuComponent:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class SelectMenuComponent extends "
						},
						{
							"kind": "Reference",
							"text": "Component",
							"canonicalReference": "discord.js!Component:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APISelectMenuComponent",
							"canonicalReference": "discord-api-types!APISelectMenuComponent:interface"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "SelectMenuComponent",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!SelectMenuComponent#customId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get customId(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "customId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!SelectMenuComponent#disabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get disabled(): "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "disabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!SelectMenuComponent#maxValues:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get maxValues(): "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "maxValues",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!SelectMenuComponent#minValues:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get minValues(): "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "minValues",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!SelectMenuComponent#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get options(): "
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuOption",
									"canonicalReference": "discord-api-types!APISelectMenuOption:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!SelectMenuComponent#placeholder:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get placeholder(): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "placeholder",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!SelectMenuComponentData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface SelectMenuComponentData extends "
						},
						{
							"kind": "Reference",
							"text": "BaseComponentData",
							"canonicalReference": "discord.js!BaseComponentData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "SelectMenuComponentData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentData#customId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "customId: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "customId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentData#disabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "disabled?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "disabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentData#maxValues:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxValues?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxValues",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentData#minValues:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "minValues?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "minValues",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentData#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "options?: "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuComponentOptionData",
									"canonicalReference": "discord.js!SelectMenuComponentOptionData:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentData#placeholder:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "placeholder?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "placeholder",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ComponentType.SelectMenu",
									"canonicalReference": "discord-api-types!ComponentType.SelectMenu:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!SelectMenuComponentOptionData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface SelectMenuComponentOptionData "
						}
					],
					"releaseTag": "Public",
					"name": "SelectMenuComponentOptionData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentOptionData#default:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "default?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "default",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentOptionData#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentOptionData#emoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "emoji?: "
								},
								{
									"kind": "Reference",
									"text": "ComponentEmojiResolvable",
									"canonicalReference": "discord.js!ComponentEmojiResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "emoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentOptionData#label:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "label: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "label",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SelectMenuComponentOptionData#value:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "value: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "value",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!SelectMenuInteraction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class SelectMenuInteraction<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> extends "
						},
						{
							"kind": "Reference",
							"text": "MessageComponentInteraction",
							"canonicalReference": "discord.js!MessageComponentInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "SelectMenuInteraction",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!SelectMenuInteraction:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `SelectMenuInteraction` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", data: "
								},
								{
									"kind": "Reference",
									"text": "RawMessageSelectMenuInteractionData",
									"canonicalReference": "discord.js!RawMessageSelectMenuInteractionData:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!SelectMenuInteraction#component:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get component(): "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<\n    Cached,\n    "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuComponent",
									"canonicalReference": "discord.js!SelectMenuComponent:class"
								},
								{
									"kind": "Content",
									"text": ",\n    "
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuComponent",
									"canonicalReference": "discord-api-types!APISelectMenuComponent:interface"
								},
								{
									"kind": "Content",
									"text": ",\n    "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuComponent",
									"canonicalReference": "discord.js!SelectMenuComponent:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuComponent",
									"canonicalReference": "discord-api-types!APISelectMenuComponent:interface"
								},
								{
									"kind": "Content",
									"text": ",\n    "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuComponent",
									"canonicalReference": "discord.js!SelectMenuComponent:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuComponent",
									"canonicalReference": "discord-api-types!APISelectMenuComponent:interface"
								},
								{
									"kind": "Content",
									"text": "\n  >"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "component",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 15
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!SelectMenuInteraction#componentType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public componentType: "
								},
								{
									"kind": "Reference",
									"text": "ComponentType.SelectMenu",
									"canonicalReference": "discord-api-types!ComponentType.SelectMenu:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "componentType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!SelectMenuInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuInteraction",
									"canonicalReference": "discord.js!SelectMenuInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inCachedGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!SelectMenuInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuInteraction",
									"canonicalReference": "discord.js!SelectMenuInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!SelectMenuInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuInteraction",
									"canonicalReference": "discord.js!SelectMenuInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inRawGuild"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!SelectMenuInteraction#values:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public values: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "values",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!SelectMenuOptionBuilder:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class SelectMenuOptionBuilder extends "
						},
						{
							"kind": "Reference",
							"text": "BuildersSelectMenuOption",
							"canonicalReference": "@discordjs/builders!~UnsafeSelectMenuOptionBuilder:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "SelectMenuOptionBuilder",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!SelectMenuOptionBuilder:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `SelectMenuOptionBuilder` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(data?: "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuComponentOptionData",
									"canonicalReference": "discord.js!SelectMenuComponentOptionData:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuOption",
									"canonicalReference": "discord-api-types!APISelectMenuOption:interface"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!SelectMenuOptionBuilder.from:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static from(other: "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuOption",
									"canonicalReference": "discord-api-types!APISelectMenuOption:interface"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "APISelectMenuOption",
									"canonicalReference": "discord-api-types!APISelectMenuOption:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuOptionBuilder",
									"canonicalReference": "discord.js!SelectMenuOptionBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "from"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!SelectMenuOptionBuilder#setEmoji:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public override setEmoji(emoji: "
								},
								{
									"kind": "Reference",
									"text": "ComponentEmojiResolvable",
									"canonicalReference": "discord.js!ComponentEmojiResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "emoji",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setEmoji"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!Serialized:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type Serialized<T> = "
						},
						{
							"kind": "Content",
							"text": "T extends symbol | bigint | (() => any)\n  ? never\n  : T extends number | string | boolean | undefined\n  ? T\n  : T extends { toJSON(): infer R }\n  ? R\n  : T extends "
						},
						{
							"kind": "Reference",
							"text": "ReadonlyArray",
							"canonicalReference": "!ReadonlyArray:interface"
						},
						{
							"kind": "Content",
							"text": "<infer V>\n  ? "
						},
						{
							"kind": "Reference",
							"text": "Serialized",
							"canonicalReference": "discord.js!Serialized:type"
						},
						{
							"kind": "Content",
							"text": "<V>[]\n  : T extends "
						},
						{
							"kind": "Reference",
							"text": "ReadonlyMap",
							"canonicalReference": "!ReadonlyMap:interface"
						},
						{
							"kind": "Content",
							"text": "<unknown, unknown> | "
						},
						{
							"kind": "Reference",
							"text": "ReadonlySet",
							"canonicalReference": "!ReadonlySet:interface"
						},
						{
							"kind": "Content",
							"text": "<unknown>\n  ? {}\n  : { [K in keyof T]: "
						},
						{
							"kind": "Reference",
							"text": "Serialized",
							"canonicalReference": "discord.js!Serialized:type"
						},
						{
							"kind": "Content",
							"text": "<T[K]> }"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "Serialized",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 12
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!SetChannelPositionOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface SetChannelPositionOptions "
						}
					],
					"releaseTag": "Public",
					"name": "SetChannelPositionOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SetChannelPositionOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SetChannelPositionOptions#relative:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "relative?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "relative",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!SetParentOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface SetParentOptions "
						}
					],
					"releaseTag": "Public",
					"name": "SetParentOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SetParentOptions#lockPermissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "lockPermissions?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "lockPermissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SetParentOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!setPosition:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function setPosition<T extends "
						},
						{
							"kind": "Reference",
							"text": "Channel",
							"canonicalReference": "discord.js!Channel:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Role",
							"canonicalReference": "discord.js!Role:class"
						},
						{
							"kind": "Content",
							"text": ">(\n  item: "
						},
						{
							"kind": "Content",
							"text": "T"
						},
						{
							"kind": "Content",
							"text": ",\n  position: "
						},
						{
							"kind": "Content",
							"text": "number"
						},
						{
							"kind": "Content",
							"text": ",\n  relative: "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": ",\n  sorted: "
						},
						{
							"kind": "Reference",
							"text": "Collection",
							"canonicalReference": "@discordjs/collection!~Collection:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", T>"
						},
						{
							"kind": "Content",
							"text": ",\n  client: "
						},
						{
							"kind": "Reference",
							"text": "Client",
							"canonicalReference": "discord.js!Client:class"
						},
						{
							"kind": "Content",
							"text": ",\n  route: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ",\n  reason?: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ",\n): "
						},
						{
							"kind": "Reference",
							"text": "Promise",
							"canonicalReference": "!Promise:interface"
						},
						{
							"kind": "Content",
							"text": "<{ id: "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": "; position: number }[]>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 22,
						"endIndex": 26
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "item",
							"parameterTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"isOptional": false
						},
						{
							"parameterName": "position",
							"parameterTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"isOptional": false
						},
						{
							"parameterName": "relative",
							"parameterTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 10
							},
							"isOptional": false
						},
						{
							"parameterName": "sorted",
							"parameterTypeTokenRange": {
								"startIndex": 11,
								"endIndex": 15
							},
							"isOptional": false
						},
						{
							"parameterName": "client",
							"parameterTypeTokenRange": {
								"startIndex": 16,
								"endIndex": 17
							},
							"isOptional": false
						},
						{
							"parameterName": "route",
							"parameterTypeTokenRange": {
								"startIndex": 18,
								"endIndex": 19
							},
							"isOptional": false
						},
						{
							"parameterName": "reason",
							"parameterTypeTokenRange": {
								"startIndex": 20,
								"endIndex": 21
							},
							"isOptional": true
						}
					],
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "setPosition"
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!SetRolePositionOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface SetRolePositionOptions "
						}
					],
					"releaseTag": "Public",
					"name": "SetRolePositionOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SetRolePositionOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SetRolePositionOptions#relative:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "relative?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "relative",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Shard:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Shard extends "
						},
						{
							"kind": "Reference",
							"text": "EventEmitter",
							"canonicalReference": "!EventEmitter:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Shard",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Shard#args:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public args: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "args",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Shard#env:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public env: "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "env",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Shard#eval:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public eval(script: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<unknown>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "script",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "eval"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Shard#eval:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public eval<T>(fn: "
								},
								{
									"kind": "Content",
									"text": "(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ") => T"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "fn",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "eval"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Shard#eval:member(3)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public eval<T, P>(fn: "
								},
								{
									"kind": "Content",
									"text": "(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", context: "
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<P>) => T"
								},
								{
									"kind": "Content",
									"text": ", context: "
								},
								{
									"kind": "Content",
									"text": "P"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								},
								{
									"typeParameterName": "P",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 3,
							"parameters": [
								{
									"parameterName": "fn",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								},
								{
									"parameterName": "context",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "eval"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Shard#execArgv:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public execArgv: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "execArgv",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Shard#fetchClientValue:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchClientValue(prop: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<unknown>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "prop",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchClientValue"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Shard#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Shard#kill:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public kill(): "
								},
								{
									"kind": "Content",
									"text": "void"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "kill"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Shard#manager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public manager: "
								},
								{
									"kind": "Reference",
									"text": "ShardingManager",
									"canonicalReference": "discord.js!ShardingManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "manager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Shard#on:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on<K extends "
								},
								{
									"kind": "Content",
									"text": "keyof "
								},
								{
									"kind": "Reference",
									"text": "ShardEventTypes",
									"canonicalReference": "discord.js!ShardEventTypes:interface"
								},
								{
									"kind": "Content",
									"text": ">(\n    event: "
								},
								{
									"kind": "Content",
									"text": "K"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: "
								},
								{
									"kind": "Reference",
									"text": "ShardEventTypes",
									"canonicalReference": "discord.js!ShardEventTypes:interface"
								},
								{
									"kind": "Content",
									"text": "[K]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "K",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Shard#once:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once<K extends "
								},
								{
									"kind": "Content",
									"text": "keyof "
								},
								{
									"kind": "Reference",
									"text": "ShardEventTypes",
									"canonicalReference": "discord.js!ShardEventTypes:interface"
								},
								{
									"kind": "Content",
									"text": ">(\n    event: "
								},
								{
									"kind": "Content",
									"text": "K"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: "
								},
								{
									"kind": "Reference",
									"text": "ShardEventTypes",
									"canonicalReference": "discord.js!ShardEventTypes:interface"
								},
								{
									"kind": "Content",
									"text": "[K]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "K",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Shard#process:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public process: "
								},
								{
									"kind": "Reference",
									"text": "ChildProcess",
									"canonicalReference": "!\"\\\"child_process\\\"\".ChildProcess:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "process",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Shard#ready:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ready: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ready",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Shard#respawn:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public respawn(options?: "
								},
								{
									"kind": "Content",
									"text": "{ delay?: number; timeout?: number }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ChildProcess",
									"canonicalReference": "!\"\\\"child_process\\\"\".ChildProcess:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "respawn"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Shard#send:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public send(message: "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Shard",
									"canonicalReference": "discord.js!Shard:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "send"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Shard#spawn:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public spawn(timeout?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ChildProcess",
									"canonicalReference": "!\"\\\"child_process\\\"\".ChildProcess:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "timeout",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "spawn"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Shard#worker:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public worker: "
								},
								{
									"kind": "Reference",
									"text": "Worker",
									"canonicalReference": "!\"\\\"worker_threads\\\"\".Worker:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "worker",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ShardClientUtil:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ShardClientUtil "
						}
					],
					"releaseTag": "Public",
					"name": "ShardClientUtil",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardClientUtil#broadcastEval:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public broadcastEval<T>(fn: "
								},
								{
									"kind": "Content",
									"text": "(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ") => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<T>[]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "fn",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "broadcastEval"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardClientUtil#broadcastEval:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public broadcastEval<T>(fn: "
								},
								{
									"kind": "Content",
									"text": "(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ") => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ", options: "
								},
								{
									"kind": "Content",
									"text": "{ shard: number }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "fn",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "broadcastEval"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardClientUtil#broadcastEval:member(3)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public broadcastEval<T, P>(\n    fn: "
								},
								{
									"kind": "Content",
									"text": "(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", context: "
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<P>) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Content",
									"text": "{ context: P }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<T>[]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								},
								{
									"typeParameterName": "P",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 11,
								"endIndex": 15
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 3,
							"parameters": [
								{
									"parameterName": "fn",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 8
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 9,
										"endIndex": 10
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "broadcastEval"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardClientUtil#broadcastEval:member(4)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public broadcastEval<T, P>(\n    fn: "
								},
								{
									"kind": "Content",
									"text": "(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", context: "
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<P>) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Content",
									"text": "{ context: P; shard: number }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								},
								{
									"typeParameterName": "P",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 11,
								"endIndex": 15
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 4,
							"parameters": [
								{
									"parameterName": "fn",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 8
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 9,
										"endIndex": 10
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "broadcastEval"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardClientUtil#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardClientUtil#count:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get count(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "count",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardClientUtil#fetchClientValues:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchClientValues(prop: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<unknown[]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "prop",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchClientValues"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardClientUtil#fetchClientValues:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchClientValues(prop: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", shard: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<unknown>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "prop",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "shard",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchClientValues"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardClientUtil#ids:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get ids(): "
								},
								{
									"kind": "Content",
									"text": "number[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ids",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardClientUtil#mode:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public mode: "
								},
								{
									"kind": "Reference",
									"text": "ShardingManagerMode",
									"canonicalReference": "discord.js!ShardingManagerMode:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "mode",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardClientUtil#parentPort:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public parentPort: "
								},
								{
									"kind": "Reference",
									"text": "MessagePort",
									"canonicalReference": "!\"\\\"worker_threads\\\"\".MessagePort:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "parentPort",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardClientUtil#respawnAll:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public respawnAll(options?: "
								},
								{
									"kind": "Reference",
									"text": "MultipleShardRespawnOptions",
									"canonicalReference": "discord.js!MultipleShardRespawnOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "respawnAll"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardClientUtil#send:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public send(message: "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "send"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardClientUtil.shardIdForGuildId:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static shardIdForGuildId(guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", shardCount: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "guildId",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "shardCount",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "shardIdForGuildId"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardClientUtil.singleton:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static singleton(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", mode: "
								},
								{
									"kind": "Reference",
									"text": "ShardingManagerMode",
									"canonicalReference": "discord.js!ShardingManagerMode:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "ShardClientUtil",
									"canonicalReference": "discord.js!ShardClientUtil:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "mode",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "singleton"
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Enum",
					"canonicalReference": "discord.js!ShardEvents:enum",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export enum ShardEvents "
						}
					],
					"releaseTag": "Public",
					"name": "ShardEvents",
					"members": [
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!ShardEvents.AllReady:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "AllReady = "
								},
								{
									"kind": "Content",
									"text": "'allReady'"
								}
							],
							"releaseTag": "Public",
							"name": "AllReady",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!ShardEvents.Close:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Close = "
								},
								{
									"kind": "Content",
									"text": "'close'"
								}
							],
							"releaseTag": "Public",
							"name": "Close",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!ShardEvents.Destroyed:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Destroyed = "
								},
								{
									"kind": "Content",
									"text": "'destroyed'"
								}
							],
							"releaseTag": "Public",
							"name": "Destroyed",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!ShardEvents.InvalidSession:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "InvalidSession = "
								},
								{
									"kind": "Content",
									"text": "'invalidSession'"
								}
							],
							"releaseTag": "Public",
							"name": "InvalidSession",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!ShardEvents.Ready:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Ready = "
								},
								{
									"kind": "Content",
									"text": "'ready'"
								}
							],
							"releaseTag": "Public",
							"name": "Ready",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!ShardEvents.Resumed:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Resumed = "
								},
								{
									"kind": "Content",
									"text": "'resumed'"
								}
							],
							"releaseTag": "Public",
							"name": "Resumed",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ShardEventTypes:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ShardEventTypes "
						}
					],
					"releaseTag": "Public",
					"name": "ShardEventTypes",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardEventTypes#death:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "death: "
								},
								{
									"kind": "Content",
									"text": "[child: "
								},
								{
									"kind": "Reference",
									"text": "ChildProcess",
									"canonicalReference": "!\"\\\"child_process\\\"\".ChildProcess:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "death",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardEventTypes#disconnect:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "disconnect: "
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "disconnect",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardEventTypes#error:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "error: "
								},
								{
									"kind": "Content",
									"text": "[error: "
								},
								{
									"kind": "Reference",
									"text": "Error",
									"canonicalReference": "!Error:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "error",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardEventTypes#message:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "message: "
								},
								{
									"kind": "Content",
									"text": "[message: any]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "message",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardEventTypes#ready:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ready: "
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ready",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardEventTypes#reconnecting:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reconnecting: "
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "reconnecting",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardEventTypes#spawn:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "spawn: "
								},
								{
									"kind": "Content",
									"text": "[child: "
								},
								{
									"kind": "Reference",
									"text": "ChildProcess",
									"canonicalReference": "!\"\\\"child_process\\\"\".ChildProcess:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "spawn",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ShardingManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ShardingManager extends "
						},
						{
							"kind": "Reference",
							"text": "EventEmitter",
							"canonicalReference": "!EventEmitter:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ShardingManager",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!ShardingManager:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `ShardingManager` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(file: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "ShardingManagerOptions",
									"canonicalReference": "discord.js!ShardingManagerOptions:interface"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "file",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#broadcast:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public broadcast(message: "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Shard",
									"canonicalReference": "discord.js!Shard:class"
								},
								{
									"kind": "Content",
									"text": "[]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "broadcast"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#broadcastEval:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public broadcastEval<T>(fn: "
								},
								{
									"kind": "Content",
									"text": "(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ") => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<T>[]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "fn",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "broadcastEval"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#broadcastEval:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public broadcastEval<T>(fn: "
								},
								{
									"kind": "Content",
									"text": "(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ") => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ", options: "
								},
								{
									"kind": "Content",
									"text": "{ shard: number }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "fn",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 7,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "broadcastEval"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#broadcastEval:member(3)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public broadcastEval<T, P>(\n    fn: "
								},
								{
									"kind": "Content",
									"text": "(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", context: "
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<P>) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Content",
									"text": "{ context: P }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<T>[]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								},
								{
									"typeParameterName": "P",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 11,
								"endIndex": 15
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 3,
							"parameters": [
								{
									"parameterName": "fn",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 8
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 9,
										"endIndex": 10
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "broadcastEval"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#broadcastEval:member(4)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public broadcastEval<T, P>(\n    fn: "
								},
								{
									"kind": "Content",
									"text": "(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", context: "
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<P>) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<T>"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Content",
									"text": "{ context: P; shard: number }"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Serialized",
									"canonicalReference": "discord.js!Serialized:type"
								},
								{
									"kind": "Content",
									"text": "<T>>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								},
								{
									"typeParameterName": "P",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 11,
								"endIndex": 15
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 4,
							"parameters": [
								{
									"parameterName": "fn",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 8
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 9,
										"endIndex": 10
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "broadcastEval"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#createShard:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createShard(id: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Shard",
									"canonicalReference": "discord.js!Shard:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "createShard"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#fetchClientValues:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchClientValues(prop: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<unknown[]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "prop",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchClientValues"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#fetchClientValues:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchClientValues(prop: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", shard: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<unknown>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "prop",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "shard",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetchClientValues"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardingManager#file:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public file: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "file",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#on:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on(event: "
								},
								{
									"kind": "Content",
									"text": "'shardCreate'"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(shard: "
								},
								{
									"kind": "Reference",
									"text": "Shard",
									"canonicalReference": "discord.js!Shard:class"
								},
								{
									"kind": "Content",
									"text": ") => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#once:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once(event: "
								},
								{
									"kind": "Content",
									"text": "'shardCreate'"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(shard: "
								},
								{
									"kind": "Reference",
									"text": "Shard",
									"canonicalReference": "discord.js!Shard:class"
								},
								{
									"kind": "Content",
									"text": ") => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 9,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 8
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardingManager#respawn:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public respawn: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "respawn",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#respawnAll:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public respawnAll(options?: "
								},
								{
									"kind": "Reference",
									"text": "MultipleShardRespawnOptions",
									"canonicalReference": "discord.js!MultipleShardRespawnOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<number, "
								},
								{
									"kind": "Reference",
									"text": "Shard",
									"canonicalReference": "discord.js!Shard:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "respawnAll"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardingManager#shardArgs:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public shardArgs: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shardArgs",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardingManager#shardList:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public shardList: "
								},
								{
									"kind": "Content",
									"text": "number[] | 'auto'"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shardList",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardingManager#shards:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public shards: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<number, "
								},
								{
									"kind": "Reference",
									"text": "Shard",
									"canonicalReference": "discord.js!Shard:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shards",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ShardingManager#spawn:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public spawn(options?: "
								},
								{
									"kind": "Reference",
									"text": "MultipleShardSpawnOptions",
									"canonicalReference": "discord.js!MultipleShardSpawnOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<number, "
								},
								{
									"kind": "Reference",
									"text": "Shard",
									"canonicalReference": "discord.js!Shard:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "spawn"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardingManager#token:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public token: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "token",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ShardingManager#totalShards:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public totalShards: "
								},
								{
									"kind": "Content",
									"text": "number | 'auto'"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "totalShards",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ShardingManagerMode:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ShardingManagerMode = "
						},
						{
							"kind": "Content",
							"text": "'process' | 'worker'"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ShardingManagerMode",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ShardingManagerOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ShardingManagerOptions "
						}
					],
					"releaseTag": "Public",
					"name": "ShardingManagerOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardingManagerOptions#execArgv:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "execArgv?: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "execArgv",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardingManagerOptions#mode:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "mode?: "
								},
								{
									"kind": "Reference",
									"text": "ShardingManagerMode",
									"canonicalReference": "discord.js!ShardingManagerMode:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "mode",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardingManagerOptions#respawn:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "respawn?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "respawn",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardingManagerOptions#shardArgs:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shardArgs?: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "shardArgs",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardingManagerOptions#shardList:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "shardList?: "
								},
								{
									"kind": "Content",
									"text": "number[] | 'auto'"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "shardList",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardingManagerOptions#token:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "token?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "token",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ShardingManagerOptions#totalShards:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "totalShards?: "
								},
								{
									"kind": "Content",
									"text": "number | 'auto'"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "totalShards",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!StageChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class StageChannel extends "
						},
						{
							"kind": "Reference",
							"text": "BaseGuildVoiceChannel",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "StageChannel",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!StageChannel#createStageInstance:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createStageInstance(options: "
								},
								{
									"kind": "Reference",
									"text": "StageInstanceCreateOptions",
									"canonicalReference": "discord.js!StageInstanceCreateOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "createStageInstance"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!StageChannel#setTopic:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setTopic(topic: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "StageChannel",
									"canonicalReference": "discord.js!StageChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "topic",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setTopic"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageChannel#stageInstance:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get stageInstance(): "
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stageInstance",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageChannel#topic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public topic: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "topic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildStageVoice",
									"canonicalReference": "discord-api-types!ChannelType.GuildStageVoice:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!StageChannelResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type StageChannelResolvable = "
						},
						{
							"kind": "Reference",
							"text": "StageChannel",
							"canonicalReference": "discord.js!StageChannel:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "StageChannelResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!StageInstance:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class StageInstance extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "StageInstance",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get channel(): "
								},
								{
									"kind": "Reference",
									"text": "StageChannel",
									"canonicalReference": "discord.js!StageChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!StageInstance#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#discoverableDisabled:member",
							"docComment": "/**\n * @deprecated\n *\n * See https://github.com/discord/discord-api-docs/pull/4296 for more information\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public discoverableDisabled: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "discoverableDisabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!StageInstance#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(options: "
								},
								{
									"kind": "Reference",
									"text": "StageInstanceEditOptions",
									"canonicalReference": "discord.js!StageInstanceEditOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guild(): "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#guildScheduledEvent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guildScheduledEvent(): "
								},
								{
									"kind": "Reference",
									"text": "GuildScheduledEvent",
									"canonicalReference": "discord.js!GuildScheduledEvent:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildScheduledEvent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#guildScheduledEventId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildScheduledEventId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "guildScheduledEventId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#privacyLevel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public privacyLevel: "
								},
								{
									"kind": "Reference",
									"text": "StageInstancePrivacyLevel",
									"canonicalReference": "discord-api-types!StageInstancePrivacyLevel:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "privacyLevel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!StageInstance#setTopic:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setTopic(topic: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "topic",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "setTopic"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstance#topic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public topic: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "topic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!StageInstanceCreateOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface StageInstanceCreateOptions "
						}
					],
					"releaseTag": "Public",
					"name": "StageInstanceCreateOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StageInstanceCreateOptions#privacyLevel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "privacyLevel?: "
								},
								{
									"kind": "Reference",
									"text": "StageInstancePrivacyLevel",
									"canonicalReference": "discord-api-types!StageInstancePrivacyLevel:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "privacyLevel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StageInstanceCreateOptions#sendStartNotification:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "sendStartNotification?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "sendStartNotification",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StageInstanceCreateOptions#topic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "topic: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "topic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!StageInstanceEditOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface StageInstanceEditOptions "
						}
					],
					"releaseTag": "Public",
					"name": "StageInstanceEditOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StageInstanceEditOptions#privacyLevel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "privacyLevel?: "
								},
								{
									"kind": "Reference",
									"text": "StageInstancePrivacyLevel",
									"canonicalReference": "discord-api-types!StageInstancePrivacyLevel:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "privacyLevel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StageInstanceEditOptions#topic:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "topic?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "topic",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!StageInstanceManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class StageInstanceManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "StageInstance",
							"canonicalReference": "discord.js!StageInstance:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "StageInstanceResolvable",
							"canonicalReference": "discord.js!StageInstanceResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "StageInstanceManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!StageInstanceManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(channel: "
								},
								{
									"kind": "Reference",
									"text": "StageChannelResolvable",
									"canonicalReference": "discord.js!StageChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options: "
								},
								{
									"kind": "Reference",
									"text": "StageInstanceCreateOptions",
									"canonicalReference": "discord.js!StageInstanceCreateOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!StageInstanceManager#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(channel: "
								},
								{
									"kind": "Reference",
									"text": "StageChannelResolvable",
									"canonicalReference": "discord.js!StageChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!StageInstanceManager#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(channel: "
								},
								{
									"kind": "Reference",
									"text": "StageChannelResolvable",
									"canonicalReference": "discord.js!StageChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options: "
								},
								{
									"kind": "Reference",
									"text": "StageInstanceEditOptions",
									"canonicalReference": "discord.js!StageInstanceEditOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!StageInstanceManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(channel: "
								},
								{
									"kind": "Reference",
									"text": "StageChannelResolvable",
									"canonicalReference": "discord.js!StageChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StageInstanceManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!StageInstanceResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type StageInstanceResolvable = "
						},
						{
							"kind": "Reference",
							"text": "StageInstance",
							"canonicalReference": "discord.js!StageInstance:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "StageInstanceResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!StartThreadOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface StartThreadOptions "
						}
					],
					"releaseTag": "Public",
					"name": "StartThreadOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StartThreadOptions#autoArchiveDuration:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "autoArchiveDuration?: "
								},
								{
									"kind": "Reference",
									"text": "ThreadAutoArchiveDuration",
									"canonicalReference": "discord-api-types!ThreadAutoArchiveDuration:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "autoArchiveDuration",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StartThreadOptions#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StartThreadOptions#rateLimitPerUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "rateLimitPerUser?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "rateLimitPerUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StartThreadOptions#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Enum",
					"canonicalReference": "discord.js!Status:enum",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export enum Status "
						}
					],
					"releaseTag": "Public",
					"name": "Status",
					"members": [
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Status.Connecting:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Connecting = "
								},
								{
									"kind": "Content",
									"text": "1"
								}
							],
							"releaseTag": "Public",
							"name": "Connecting",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Status.Disconnected:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Disconnected = "
								},
								{
									"kind": "Content",
									"text": "5"
								}
							],
							"releaseTag": "Public",
							"name": "Disconnected",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Status.Idle:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Idle = "
								},
								{
									"kind": "Content",
									"text": "3"
								}
							],
							"releaseTag": "Public",
							"name": "Idle",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Status.Nearly:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Nearly = "
								},
								{
									"kind": "Content",
									"text": "4"
								}
							],
							"releaseTag": "Public",
							"name": "Nearly",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Status.Ready:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Ready = "
								},
								{
									"kind": "Content",
									"text": "0"
								}
							],
							"releaseTag": "Public",
							"name": "Ready",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "EnumMember",
							"canonicalReference": "discord.js!Status.Reconnecting:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Reconnecting = "
								},
								{
									"kind": "Content",
									"text": "2"
								}
							],
							"releaseTag": "Public",
							"name": "Reconnecting",
							"initializerTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Sticker:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Sticker extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Sticker",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#available:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public available: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "available",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sticker#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sticker#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(data?: "
								},
								{
									"kind": "Reference",
									"text": "GuildStickerEditData",
									"canonicalReference": "discord.js!GuildStickerEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sticker#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(other: "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": " | unknown"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sticker#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sticker#fetchPack:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchPack(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "StickerPack",
									"canonicalReference": "discord.js!StickerPack:class"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchPack"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sticker#fetchUser:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchUser(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetchUser"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#format:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public format: "
								},
								{
									"kind": "Reference",
									"text": "StickerFormatType",
									"canonicalReference": "discord-api-types!StickerFormatType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "format",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guild(): "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#packId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public packId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "packId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#partial:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get partial(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "partial",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#sortValue:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sortValue: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "sortValue",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#tags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public tags: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "tags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "StickerType",
									"canonicalReference": "discord-api-types!StickerType:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get url(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sticker#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!StickerPack:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class StickerPack extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "StickerPack",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StickerPack#bannerId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public bannerId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "bannerId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!StickerPack#bannerURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public bannerURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "bannerURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StickerPack#coverSticker:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get coverSticker(): "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "coverSticker",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StickerPack#coverStickerId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public coverStickerId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "coverStickerId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StickerPack#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StickerPack#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StickerPack#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StickerPack#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StickerPack#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StickerPack#skuId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public skuId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "skuId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!StickerPack#stickers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public stickers: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stickers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!StickerResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type StickerResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Sticker",
							"canonicalReference": "discord.js!Sticker:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "StickerResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!StringMappedInteractionTypes:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface StringMappedInteractionTypes<Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "StringMappedInteractionTypes",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StringMappedInteractionTypes#ActionRow:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ActionRow: "
								},
								{
									"kind": "Reference",
									"text": "MessageComponentInteraction",
									"canonicalReference": "discord.js!MessageComponentInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ActionRow",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StringMappedInteractionTypes#Button:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "Button: "
								},
								{
									"kind": "Reference",
									"text": "ButtonInteraction",
									"canonicalReference": "discord.js!ButtonInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Button",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!StringMappedInteractionTypes#SelectMenu:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "SelectMenu: "
								},
								{
									"kind": "Reference",
									"text": "SelectMenuInteraction",
									"canonicalReference": "discord.js!SelectMenuInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<Cached>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "SelectMenu",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!SweeperDefinitions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface SweeperDefinitions "
						}
					],
					"releaseTag": "Public",
					"name": "SweeperDefinitions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#applicationCommands:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "applicationCommands: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommand",
									"canonicalReference": "discord.js!ApplicationCommand:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "applicationCommands",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#bans:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "bans: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildBan",
									"canonicalReference": "discord.js!GuildBan:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "bans",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#emojis:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "emojis: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emojis",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#guildMembers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "guildMembers: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildMembers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#invites:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "invites: "
								},
								{
									"kind": "Content",
									"text": "[string, "
								},
								{
									"kind": "Reference",
									"text": "Invite",
									"canonicalReference": "discord.js!Invite:class"
								},
								{
									"kind": "Content",
									"text": ", true]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "invites",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#messages:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messages: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ", true]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messages",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#presences:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "presences: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Presence",
									"canonicalReference": "discord.js!Presence:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "presences",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#reactions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reactions: "
								},
								{
									"kind": "Content",
									"text": "[string | "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "MessageReaction",
									"canonicalReference": "discord.js!MessageReaction:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "reactions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#stageInstances:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "stageInstances: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "StageInstance",
									"canonicalReference": "discord.js!StageInstance:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stageInstances",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#stickers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "stickers: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Sticker",
									"canonicalReference": "discord.js!Sticker:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "stickers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#threadMembers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "threadMembers: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threadMembers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#threads:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "threads: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ", true]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threads",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#users:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "users: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "users",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweeperDefinitions#voiceStates:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "voiceStates: "
								},
								{
									"kind": "Content",
									"text": "["
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "VoiceState",
									"canonicalReference": "discord.js!VoiceState:class"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "voiceStates",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!SweeperKey:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type SweeperKey = "
						},
						{
							"kind": "Content",
							"text": "keyof "
						},
						{
							"kind": "Reference",
							"text": "SweeperDefinitions",
							"canonicalReference": "discord.js!SweeperDefinitions:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "SweeperKey",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!SweeperOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type SweeperOptions = "
						},
						{
							"kind": "Content",
							"text": "{\n  [K in keyof "
						},
						{
							"kind": "Reference",
							"text": "SweeperDefinitions",
							"canonicalReference": "discord.js!SweeperDefinitions:interface"
						},
						{
							"kind": "Content",
							"text": "]?: "
						},
						{
							"kind": "Reference",
							"text": "SweeperDefinitions",
							"canonicalReference": "discord.js!SweeperDefinitions:interface"
						},
						{
							"kind": "Content",
							"text": "[K][2] extends true\n    ? "
						},
						{
							"kind": "Reference",
							"text": "SweepOptions",
							"canonicalReference": "discord.js!SweepOptions:interface"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "SweeperDefinitions",
							"canonicalReference": "discord.js!SweeperDefinitions:interface"
						},
						{
							"kind": "Content",
							"text": "[K][0], "
						},
						{
							"kind": "Reference",
							"text": "SweeperDefinitions",
							"canonicalReference": "discord.js!SweeperDefinitions:interface"
						},
						{
							"kind": "Content",
							"text": "[K][1]> | "
						},
						{
							"kind": "Reference",
							"text": "LifetimeSweepOptions",
							"canonicalReference": "discord.js!LifetimeSweepOptions:interface"
						},
						{
							"kind": "Content",
							"text": "\n    : "
						},
						{
							"kind": "Reference",
							"text": "SweepOptions",
							"canonicalReference": "discord.js!SweepOptions:interface"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "SweeperDefinitions",
							"canonicalReference": "discord.js!SweeperDefinitions:interface"
						},
						{
							"kind": "Content",
							"text": "[K][0], "
						},
						{
							"kind": "Reference",
							"text": "SweeperDefinitions",
							"canonicalReference": "discord.js!SweeperDefinitions:interface"
						},
						{
							"kind": "Content",
							"text": "[K][1]>;\n}"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "SweeperOptions",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 20
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Sweepers:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Sweepers "
						}
					],
					"releaseTag": "Public",
					"name": "Sweepers",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!Sweepers:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `Sweepers` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", options: "
								},
								{
									"kind": "Reference",
									"text": "SweeperOptions",
									"canonicalReference": "discord.js!SweeperOptions:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers.archivedThreadSweepFilter:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static archivedThreadSweepFilter(\n    lifetime?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "GlobalSweepFilter",
									"canonicalReference": "discord.js!GlobalSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['threads'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['threads'][1]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "lifetime",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "archivedThreadSweepFilter"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sweepers#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers.expiredInviteSweepFilter:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static expiredInviteSweepFilter(\n    lifetime?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "GlobalSweepFilter",
									"canonicalReference": "discord.js!GlobalSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['invites'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['invites'][1]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "lifetime",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "expiredInviteSweepFilter"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers.filterByLifetime:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static filterByLifetime<K, V>(options?: "
								},
								{
									"kind": "Reference",
									"text": "LifetimeFilterOptions",
									"canonicalReference": "discord.js!LifetimeFilterOptions:interface"
								},
								{
									"kind": "Content",
									"text": "<K, V>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "GlobalSweepFilter",
									"canonicalReference": "discord.js!GlobalSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<K, V>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "K",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								},
								{
									"typeParameterName": "V",
									"constraintTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "filterByLifetime"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sweepers#intervals:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public intervals: "
								},
								{
									"kind": "Reference",
									"text": "Record",
									"canonicalReference": "!Record:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperKey",
									"canonicalReference": "discord.js!SweeperKey:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "NodeJS.Timeout",
									"canonicalReference": "!__global.NodeJS.Timeout:interface"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "intervals",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Sweepers#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "SweeperOptions",
									"canonicalReference": "discord.js!SweeperOptions:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers.outdatedMessageSweepFilter:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static outdatedMessageSweepFilter(\n    lifetime?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "GlobalSweepFilter",
									"canonicalReference": "discord.js!GlobalSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['messages'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['messages'][1]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "lifetime",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "outdatedMessageSweepFilter"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepApplicationCommands:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepApplicationCommands(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<\n      "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['applicationCommands'][0],\n      "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['applicationCommands'][1]\n    >"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepApplicationCommands"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepBans:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepBans(filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['bans'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['bans'][1]>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepBans"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepEmojis:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepEmojis(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['emojis'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['emojis'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepEmojis"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepGuildMembers:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepGuildMembers(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['guildMembers'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['guildMembers'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepGuildMembers"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepInvites:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepInvites(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['invites'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['invites'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepInvites"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepMessages:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepMessages(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['messages'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['messages'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepMessages"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepPresences:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepPresences(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['presences'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['presences'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepPresences"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepReactions:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepReactions(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['reactions'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['reactions'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepReactions"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepStageInstances:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepStageInstances(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['stageInstances'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['stageInstances'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepStageInstances"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepStickers:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepStickers(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['stickers'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['stickers'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepStickers"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepThreadMembers:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepThreadMembers(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['threadMembers'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['threadMembers'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepThreadMembers"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepThreads:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepThreads(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['threads'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['threads'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepThreads"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepUsers:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepUsers(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['users'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['users'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepUsers"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Sweepers#sweepVoiceStates:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sweepVoiceStates(\n    filter: "
								},
								{
									"kind": "Reference",
									"text": "CollectionSweepFilter",
									"canonicalReference": "discord.js!CollectionSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['voiceStates'][0], "
								},
								{
									"kind": "Reference",
									"text": "SweeperDefinitions",
									"canonicalReference": "discord.js!SweeperDefinitions:interface"
								},
								{
									"kind": "Content",
									"text": "['voiceStates'][1]>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "filter",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "sweepVoiceStates"
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!SweepOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface SweepOptions<K, V> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "K",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "V",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "SweepOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweepOptions#filter:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "filter: "
								},
								{
									"kind": "Reference",
									"text": "GlobalSweepFilter",
									"canonicalReference": "discord.js!GlobalSweepFilter:type"
								},
								{
									"kind": "Content",
									"text": "<K, V>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "filter",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!SweepOptions#interval:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "interval: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "interval",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!SystemChannelFlagsBitField:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class SystemChannelFlagsBitField extends "
						},
						{
							"kind": "Reference",
							"text": "BitField",
							"canonicalReference": "discord.js!BitField:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "SystemChannelFlagsString",
							"canonicalReference": "discord.js!SystemChannelFlagsString:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "SystemChannelFlagsBitField",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!SystemChannelFlagsBitField.Flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Flags: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "GuildSystemChannelFlags",
									"canonicalReference": "discord-api-types!GuildSystemChannelFlags:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!SystemChannelFlagsBitField.resolve:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolve(bit?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "SystemChannelFlagsString",
									"canonicalReference": "discord.js!SystemChannelFlagsString:type"
								},
								{
									"kind": "Content",
									"text": ", number>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "resolve"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!SystemChannelFlagsResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type SystemChannelFlagsResolvable = "
						},
						{
							"kind": "Reference",
							"text": "BitFieldResolvable",
							"canonicalReference": "discord.js!BitFieldResolvable:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "SystemChannelFlagsString",
							"canonicalReference": "discord.js!SystemChannelFlagsString:type"
						},
						{
							"kind": "Content",
							"text": ", number>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "SystemChannelFlagsResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!SystemChannelFlagsString:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type SystemChannelFlagsString = "
						},
						{
							"kind": "Content",
							"text": "keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "GuildSystemChannelFlags",
							"canonicalReference": "discord-api-types!GuildSystemChannelFlags:enum"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "SystemChannelFlagsString",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Team:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Team extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Team",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Team#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Team#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Team#icon:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public icon: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "icon",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Team#iconURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public iconURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "iconURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Team#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Team#members:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public members: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "TeamMember",
									"canonicalReference": "discord.js!TeamMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "members",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Team#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Team#owner:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get owner(): "
								},
								{
									"kind": "Reference",
									"text": "TeamMember",
									"canonicalReference": "discord.js!TeamMember:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "owner",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Team#ownerId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ownerId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ownerId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Team#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Team#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!TeamMember:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class TeamMember extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "TeamMember",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TeamMember#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get id(): "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TeamMember#membershipState:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public membershipState: "
								},
								{
									"kind": "Reference",
									"text": "TeamMemberMembershipState",
									"canonicalReference": "discord-api-types!TeamMemberMembershipState:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "membershipState",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TeamMember#permissions:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissions: "
								},
								{
									"kind": "Content",
									"text": "string[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "permissions",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TeamMember#team:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public team: "
								},
								{
									"kind": "Reference",
									"text": "Team",
									"canonicalReference": "discord.js!Team:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "team",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!TeamMember#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Reference",
									"text": "UserMention",
									"canonicalReference": "discord.js!UserMention:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TeamMember#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!TextBasedChannel:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type TextBasedChannel = "
						},
						{
							"kind": "Reference",
							"text": "Extract",
							"canonicalReference": "!Extract:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Channel",
							"canonicalReference": "discord.js!Channel:type"
						},
						{
							"kind": "Content",
							"text": ", { messages: "
						},
						{
							"kind": "Reference",
							"text": "MessageManager",
							"canonicalReference": "discord.js!MessageManager:class"
						},
						{
							"kind": "Content",
							"text": " }>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "TextBasedChannel",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 7
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!TextBasedChannelFields:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface TextBasedChannelFields extends "
						},
						{
							"kind": "Reference",
							"text": "PartialTextBasedChannelFields",
							"canonicalReference": "discord.js!PartialTextBasedChannelFields:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "TextBasedChannelFields",
					"members": [
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#awaitMessageComponent:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "awaitMessageComponent<T extends "
								},
								{
									"kind": "Reference",
									"text": "MessageComponentType",
									"canonicalReference": "discord.js!MessageComponentType:type"
								},
								{
									"kind": "Content",
									"text": ">(\n    options?: "
								},
								{
									"kind": "Reference",
									"text": "AwaitMessageCollectorOptionsParams",
									"canonicalReference": "discord.js!AwaitMessageCollectorOptionsParams:type"
								},
								{
									"kind": "Content",
									"text": "<T, true>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MappedInteractionTypes",
									"canonicalReference": "discord.js!MappedInteractionTypes:interface"
								},
								{
									"kind": "Content",
									"text": "[T]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"name": "awaitMessageComponent"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#awaitMessages:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "awaitMessages(options?: "
								},
								{
									"kind": "Reference",
									"text": "AwaitMessagesOptions",
									"canonicalReference": "discord.js!AwaitMessagesOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"name": "awaitMessages"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#bulkDelete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "bulkDelete(\n    messages: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": "> | readonly "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": "[] | number"
								},
								{
									"kind": "Content",
									"text": ",\n    filterOld?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 20
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "messages",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 9
									},
									"isOptional": false
								},
								{
									"parameterName": "filterOld",
									"parameterTypeTokenRange": {
										"startIndex": 10,
										"endIndex": 11
									},
									"isOptional": true
								}
							],
							"name": "bulkDelete"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#createMessageCollector:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "createMessageCollector(options?: "
								},
								{
									"kind": "Reference",
									"text": "MessageCollectorOptions",
									"canonicalReference": "discord.js!MessageCollectorOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "MessageCollector",
									"canonicalReference": "discord.js!MessageCollector:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"name": "createMessageCollector"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#createMessageComponentCollector:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "createMessageComponentCollector<T extends "
								},
								{
									"kind": "Reference",
									"text": "MessageComponentType",
									"canonicalReference": "discord.js!MessageComponentType:type"
								},
								{
									"kind": "Content",
									"text": ">(\n    options?: "
								},
								{
									"kind": "Reference",
									"text": "MessageChannelCollectorOptionsParams",
									"canonicalReference": "discord.js!MessageChannelCollectorOptionsParams:type"
								},
								{
									"kind": "Content",
									"text": "<T, true>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "InteractionCollector",
									"canonicalReference": "discord.js!InteractionCollector:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "MappedInteractionTypes",
									"canonicalReference": "discord.js!MappedInteractionTypes:interface"
								},
								{
									"kind": "Content",
									"text": "[T]>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "T",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"name": "createMessageComponentCollector"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#createWebhook:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "createWebhook(options: "
								},
								{
									"kind": "Reference",
									"text": "ChannelWebhookCreateOptions",
									"canonicalReference": "discord.js!ChannelWebhookCreateOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Webhook",
									"canonicalReference": "discord.js!Webhook:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"name": "createWebhook"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#fetchWebhooks:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "fetchWebhooks(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "Webhook",
									"canonicalReference": "discord.js!Webhook:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [],
							"name": "fetchWebhooks"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TextBasedChannelFields#lastMessage:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "get lastMessage(): "
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "lastMessage",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#lastMessageId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "lastMessageId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "lastMessageId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TextBasedChannelFields#lastPinAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "get lastPinAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "lastPinAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#lastPinTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "lastPinTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "lastPinTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#messages:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "messages: "
								},
								{
									"kind": "Reference",
									"text": "MessageManager",
									"canonicalReference": "discord.js!MessageManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messages",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#sendTyping:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "sendTyping(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [],
							"name": "sendTyping"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#setNSFW:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "setNSFW(nsfw?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "nsfw",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"name": "setNSFW"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!TextBasedChannelFields#setRateLimitPerUser:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "setRateLimitPerUser(rateLimitPerUser: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "rateLimitPerUser",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"name": "setRateLimitPerUser"
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!TextBasedChannelMixin:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function TextBasedChannelMixin<T, I extends "
						},
						{
							"kind": "Content",
							"text": "keyof "
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannelFields",
							"canonicalReference": "discord.js!TextBasedChannelFields:interface"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Content",
							"text": "never"
						},
						{
							"kind": "Content",
							"text": ">(\n  Base?: "
						},
						{
							"kind": "Reference",
							"text": "Constructable",
							"canonicalReference": "discord.js!Constructable:type"
						},
						{
							"kind": "Content",
							"text": "<T>"
						},
						{
							"kind": "Content",
							"text": ",\n  ignore?: "
						},
						{
							"kind": "Content",
							"text": "I[]"
						},
						{
							"kind": "Content",
							"text": ",\n): "
						},
						{
							"kind": "Reference",
							"text": "Constructable",
							"canonicalReference": "discord.js!Constructable:type"
						},
						{
							"kind": "Content",
							"text": "<T & "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannelFields",
							"canonicalReference": "discord.js!TextBasedChannelFields:interface"
						},
						{
							"kind": "Content",
							"text": ", I>>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 12,
						"endIndex": 18
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "Base",
							"parameterTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 9
							},
							"isOptional": true
						},
						{
							"parameterName": "ignore",
							"parameterTypeTokenRange": {
								"startIndex": 10,
								"endIndex": 11
							},
							"isOptional": true
						}
					],
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						},
						{
							"typeParameterName": "I",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"defaultTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							}
						}
					],
					"name": "TextBasedChannelMixin"
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!TextBasedChannelResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type TextBasedChannelResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannel",
							"canonicalReference": "discord.js!TextBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "TextBasedChannelResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!TextBasedChannelTypes:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type TextBasedChannelTypes = "
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannel",
							"canonicalReference": "discord.js!TextBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": "['type']"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "TextBasedChannelTypes",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!TextChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class TextChannel extends "
						},
						{
							"kind": "Reference",
							"text": "BaseGuildTextChannel",
							"canonicalReference": "discord.js!BaseGuildTextChannel:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "TextChannel",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TextChannel#rateLimitPerUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public rateLimitPerUser: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rateLimitPerUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TextChannel#threads:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public threads: "
								},
								{
									"kind": "Reference",
									"text": "ThreadManager",
									"canonicalReference": "discord.js!ThreadManager:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AllowedThreadTypeForTextChannel",
									"canonicalReference": "discord.js!AllowedThreadTypeForTextChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "threads",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TextChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildText",
									"canonicalReference": "discord-api-types!ChannelType.GuildText:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!TextChannelResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type TextChannelResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "TextChannel",
							"canonicalReference": "discord.js!TextChannel:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "TextChannelResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!TextInputBuilder:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class TextInputBuilder extends "
						},
						{
							"kind": "Reference",
							"text": "BuilderTextInputComponent",
							"canonicalReference": "@discordjs/builders!~TextInputBuilder:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "TextInputBuilder",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!TextInputBuilder:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `TextInputBuilder` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(data?: "
								},
								{
									"kind": "Reference",
									"text": "Partial",
									"canonicalReference": "!Partial:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "TextInputComponentData",
									"canonicalReference": "discord.js!TextInputComponentData:interface"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APITextInputComponent",
									"canonicalReference": "discord-api-types!APITextInputComponent:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 7
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!TextInputBuilder.from:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static from(other: "
								},
								{
									"kind": "Reference",
									"text": "JSONEncodable",
									"canonicalReference": "@discordjs/builders!~JSONEncodable:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APITextInputComponent",
									"canonicalReference": "discord-api-types!APITextInputComponent:interface"
								},
								{
									"kind": "Content",
									"text": "> | "
								},
								{
									"kind": "Reference",
									"text": "APITextInputComponent",
									"canonicalReference": "discord-api-types!APITextInputComponent:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "TextInputBuilder",
									"canonicalReference": "discord.js!TextInputBuilder:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "other",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 6
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "from"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!TextInputComponent:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class TextInputComponent extends "
						},
						{
							"kind": "Reference",
							"text": "Component",
							"canonicalReference": "discord.js!Component:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "APITextInputComponent",
							"canonicalReference": "discord-api-types!APITextInputComponent:interface"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "TextInputComponent",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TextInputComponent#customId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get customId(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "customId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!TextInputComponent#value:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get value(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "value",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!TextInputComponentData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface TextInputComponentData extends "
						},
						{
							"kind": "Reference",
							"text": "BaseComponentData",
							"canonicalReference": "discord.js!BaseComponentData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "TextInputComponentData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextInputComponentData#customId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "customId: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "customId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextInputComponentData#label:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "label: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "label",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextInputComponentData#maxLength:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "maxLength?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "maxLength",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextInputComponentData#minLength:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "minLength?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "minLength",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextInputComponentData#placeholder:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "placeholder?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "placeholder",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextInputComponentData#required:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "required?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "required",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextInputComponentData#style:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "style: "
								},
								{
									"kind": "Reference",
									"text": "TextInputStyle",
									"canonicalReference": "discord-api-types!TextInputStyle:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "style",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextInputComponentData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ComponentType.TextInput",
									"canonicalReference": "discord-api-types!ComponentType.TextInput:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextInputComponentData#value:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "value?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "value",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!TextInputModalData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface TextInputModalData extends "
						},
						{
							"kind": "Reference",
							"text": "BaseModalData",
							"canonicalReference": "discord.js!BaseModalData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "TextInputModalData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextInputModalData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ComponentType.TextInput",
									"canonicalReference": "discord-api-types!ComponentType.TextInput:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!TextInputModalData#value:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "value: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "value",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ThreadChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ThreadChannel extends "
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannelMixin",
							"canonicalReference": "discord.js!TextBasedChannelMixin"
						},
						{
							"kind": "Content",
							"text": "("
						},
						{
							"kind": "Reference",
							"text": "BaseChannel",
							"canonicalReference": "discord.js!BaseChannel:class"
						},
						{
							"kind": "Content",
							"text": ", ['fetchWebhooks', 'createWebhook', 'setNSFW']) "
						}
					],
					"releaseTag": "Public",
					"name": "ThreadChannel",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#archived:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public archived: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "archived",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#archivedAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get archivedAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "archivedAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#archiveTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public archiveTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "archiveTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#autoArchiveDuration:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public autoArchiveDuration: "
								},
								{
									"kind": "Reference",
									"text": "ThreadAutoArchiveDuration",
									"canonicalReference": "discord-api-types!ThreadAutoArchiveDuration:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "autoArchiveDuration",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public delete(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "delete"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(data: "
								},
								{
									"kind": "Reference",
									"text": "ThreadEditData",
									"canonicalReference": "discord.js!ThreadEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#editable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get editable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "editable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#fetchOwner:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchOwner(options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchOwner"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#fetchStarterMessage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchStarterMessage(options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchStarterMessage"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#guildMembers:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guildMembers(): "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildMembers",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#invitable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public invitable: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "invitable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#join:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public join(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "join"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#joinable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get joinable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "joinable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#joined:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get joined(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "joined",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#leave:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public leave(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "leave"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#locked:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public locked: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "locked",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#manageable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get manageable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "manageable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#memberCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public memberCount: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "memberCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#members:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public members: "
								},
								{
									"kind": "Reference",
									"text": "ThreadMemberManager",
									"canonicalReference": "discord.js!ThreadMemberManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "members",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#messageCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public messageCount: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "messageCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#ownerId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ownerId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ownerId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#parent:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get parent(): "
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "NewsChannel",
									"canonicalReference": "discord.js!NewsChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "parent",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#parentId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public parentId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "parentId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#permissionsFor:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissionsFor(memberOrRole: "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Role",
									"canonicalReference": "discord.js!Role:class"
								},
								{
									"kind": "Content",
									"text": ", checkAdmin?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "memberOrRole",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "checkAdmin",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "permissionsFor"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#permissionsFor:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public permissionsFor(\n    memberOrRole: "
								},
								{
									"kind": "Reference",
									"text": "GuildMemberResolvable",
									"canonicalReference": "discord.js!GuildMemberResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "RoleResolvable",
									"canonicalReference": "discord.js!RoleResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    checkAdmin?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "PermissionsBitField",
									"canonicalReference": "discord.js!PermissionsBitField:class"
								},
								{
									"kind": "Content",
									"text": "> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 7,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "memberOrRole",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								},
								{
									"parameterName": "checkAdmin",
									"parameterTypeTokenRange": {
										"startIndex": 5,
										"endIndex": 6
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "permissionsFor"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#rateLimitPerUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public rateLimitPerUser: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rateLimitPerUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#sendable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get sendable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "sendable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#setArchived:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setArchived(archived?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "archived",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setArchived"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#setAutoArchiveDuration:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setAutoArchiveDuration(\n    autoArchiveDuration: "
								},
								{
									"kind": "Reference",
									"text": "ThreadAutoArchiveDuration",
									"canonicalReference": "discord-api-types!ThreadAutoArchiveDuration:enum"
								},
								{
									"kind": "Content",
									"text": ",\n    reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "autoArchiveDuration",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setAutoArchiveDuration"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#setInvitable:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setInvitable(invitable?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "invitable",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setInvitable"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#setLocked:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setLocked(locked?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "locked",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setLocked"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#setName:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setName(name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "name",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setName"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadChannel#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Reference",
									"text": "ChannelMention",
									"canonicalReference": "discord.js!ChannelMention:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "ThreadChannelType",
									"canonicalReference": "discord.js!ThreadChannelType:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#unarchivable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get unarchivable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "unarchivable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadChannel#viewable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get viewable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "viewable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ThreadChannelResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ThreadChannelResolvable = "
						},
						{
							"kind": "Reference",
							"text": "AnyThreadChannel",
							"canonicalReference": "discord.js!AnyThreadChannel:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ThreadChannelResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ThreadChannelType:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ThreadChannelType =\n  "
						},
						{
							"kind": "Content",
							"text": "| "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildNewsThread",
							"canonicalReference": "discord-api-types!ChannelType.GuildNewsThread:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildPublicThread",
							"canonicalReference": "discord-api-types!ChannelType.GuildPublicThread:member"
						},
						{
							"kind": "Content",
							"text": "\n  | "
						},
						{
							"kind": "Reference",
							"text": "ChannelType.GuildPrivateThread",
							"canonicalReference": "discord-api-types!ChannelType.GuildPrivateThread:member"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ThreadChannelType",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 7
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ThreadCreateOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ThreadCreateOptions<AllowedThreadType> extends "
						},
						{
							"kind": "Reference",
							"text": "StartThreadOptions",
							"canonicalReference": "discord.js!StartThreadOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "AllowedThreadType",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "ThreadCreateOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ThreadCreateOptions#invitable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "invitable?: "
								},
								{
									"kind": "Content",
									"text": "AllowedThreadType extends "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildPrivateThread",
									"canonicalReference": "discord-api-types!ChannelType.GuildPrivateThread:member"
								},
								{
									"kind": "Content",
									"text": " ? boolean : never"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "invitable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ThreadCreateOptions#startMessage:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "startMessage?: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "startMessage",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ThreadCreateOptions#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type?: "
								},
								{
									"kind": "Content",
									"text": "AllowedThreadType"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!ThreadEditData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface ThreadEditData "
						}
					],
					"releaseTag": "Public",
					"name": "ThreadEditData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ThreadEditData#archived:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "archived?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "archived",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ThreadEditData#autoArchiveDuration:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "autoArchiveDuration?: "
								},
								{
									"kind": "Reference",
									"text": "ThreadAutoArchiveDuration",
									"canonicalReference": "discord-api-types!ThreadAutoArchiveDuration:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "autoArchiveDuration",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ThreadEditData#invitable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "invitable?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "invitable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ThreadEditData#locked:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "locked?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "locked",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ThreadEditData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ThreadEditData#rateLimitPerUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "rateLimitPerUser?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "rateLimitPerUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!ThreadEditData#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ThreadManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ThreadManager<AllowedThreadType> extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "ThreadChannel",
							"canonicalReference": "discord.js!ThreadChannel:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "ThreadChannelResolvable",
							"canonicalReference": "discord.js!ThreadChannelResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "AllowedThreadType",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "ThreadManager",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadManager#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channel: "
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "NewsChannel",
									"canonicalReference": "discord.js!NewsChannel:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadManager#create:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public create(options: "
								},
								{
									"kind": "Reference",
									"text": "ThreadCreateOptions",
									"canonicalReference": "discord.js!ThreadCreateOptions:interface"
								},
								{
									"kind": "Content",
									"text": "<AllowedThreadType>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "create"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options: "
								},
								{
									"kind": "Reference",
									"text": "ThreadChannelResolvable",
									"canonicalReference": "discord.js!ThreadChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", cacheOptions?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": " | null>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "cacheOptions",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchThreadsOptions",
									"canonicalReference": "discord.js!FetchThreadsOptions:interface"
								},
								{
									"kind": "Content",
									"text": ", cacheOptions?: "
								},
								{
									"kind": "Content",
									"text": "{ cache?: boolean }"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "FetchedThreads",
									"canonicalReference": "discord.js!FetchedThreads:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "cacheOptions",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadManager#fetchActive:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchActive(cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "FetchedThreads",
									"canonicalReference": "discord.js!FetchedThreads:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "cache",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchActive"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadManager#fetchArchived:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchArchived(options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchArchivedThreadOptions",
									"canonicalReference": "discord.js!FetchArchivedThreadOptions:interface"
								},
								{
									"kind": "Content",
									"text": ", cache?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "FetchedThreads",
									"canonicalReference": "discord.js!FetchedThreads:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "cache",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchArchived"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ThreadMember:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ThreadMember extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "ThreadMember",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMember#flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public flags: "
								},
								{
									"kind": "Reference",
									"text": "ThreadMemberFlagsBitField",
									"canonicalReference": "discord.js!ThreadMemberFlagsBitField:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMember#guildMember:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guildMember(): "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildMember",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMember#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMember#joinedAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get joinedAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "joinedAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMember#joinedTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public joinedTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "joinedTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMember#manageable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get manageable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "manageable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMember#partial:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get partial(): "
								},
								{
									"kind": "Content",
									"text": "false"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "partial",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadMember#remove:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public remove(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "remove"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMember#thread:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public thread: "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "thread",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMember#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get user(): "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ThreadMemberFlagsBitField:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ThreadMemberFlagsBitField extends "
						},
						{
							"kind": "Reference",
							"text": "BitField",
							"canonicalReference": "discord.js!BitField:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "ThreadMemberFlagsString",
							"canonicalReference": "discord.js!ThreadMemberFlagsString:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "ThreadMemberFlagsBitField",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMemberFlagsBitField.Flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Flags: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "ThreadMemberFlags",
									"canonicalReference": "discord-api-types!ThreadMemberFlags:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadMemberFlagsBitField.resolve:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolve(bit?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ThreadMemberFlagsString",
									"canonicalReference": "discord.js!ThreadMemberFlagsString:type"
								},
								{
									"kind": "Content",
									"text": ", number>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "resolve"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ThreadMemberFlagsString:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ThreadMemberFlagsString = "
						},
						{
							"kind": "Content",
							"text": "keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "ThreadMemberFlags",
							"canonicalReference": "discord-api-types!ThreadMemberFlags:enum"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ThreadMemberFlagsString",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!ThreadMemberManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class ThreadMemberManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "ThreadMember",
							"canonicalReference": "discord.js!ThreadMember:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "ThreadMemberResolvable",
							"canonicalReference": "discord.js!ThreadMemberResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "ThreadMemberManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadMemberManager#add:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public add(member: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | '@me'"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "member",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "add"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadMemberManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options: "
								},
								{
									"kind": "Reference",
									"text": "ThreadMemberResolvable",
									"canonicalReference": "discord.js!ThreadMemberResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "FetchThreadMemberOptions",
									"canonicalReference": "discord.js!FetchThreadMemberOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadMemberManager#fetch:member(2)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(options?: "
								},
								{
									"kind": "Reference",
									"text": "FetchThreadMembersOptions",
									"canonicalReference": "discord.js!FetchThreadMembersOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": ">>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 11
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 2,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadMemberManager#fetchMe:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchMe(options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchMe"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMemberManager#me:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get me(): "
								},
								{
									"kind": "Reference",
									"text": "ThreadMember",
									"canonicalReference": "discord.js!ThreadMember:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "me",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!ThreadMemberManager#remove:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public remove(id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | '@me'"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "id",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "remove"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!ThreadMemberManager#thread:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public thread: "
								},
								{
									"kind": "Reference",
									"text": "AnyThreadChannel",
									"canonicalReference": "discord.js!AnyThreadChannel:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "thread",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!ThreadMemberResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type ThreadMemberResolvable = "
						},
						{
							"kind": "Reference",
							"text": "ThreadMember",
							"canonicalReference": "discord.js!ThreadMember:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "UserResolvable",
							"canonicalReference": "discord.js!UserResolvable:type"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "ThreadMemberResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Typing:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Typing extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Typing",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Typing#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channel: "
								},
								{
									"kind": "Reference",
									"text": "TextBasedChannel",
									"canonicalReference": "discord.js!TextBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Typing#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get guild(): "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Typing#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is this & {\n    channel: "
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "NewsChannel",
									"canonicalReference": "discord.js!NewsChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "ThreadChannel",
									"canonicalReference": "discord.js!ThreadChannel:class"
								},
								{
									"kind": "Content",
									"text": ";\n    get guild(): "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";\n  }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Typing#member:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get member(): "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "member",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Typing#startedAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get startedAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "startedAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Typing#startedTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public startedTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "startedTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Typing#user:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "PartialUser",
									"canonicalReference": "discord.js!PartialUser:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "user",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!User:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class User extends "
						},
						{
							"kind": "Reference",
							"text": "PartialTextBasedChannel",
							"canonicalReference": "discord.js!PartialTextBasedChannel"
						},
						{
							"kind": "Content",
							"text": "("
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": ") "
						}
					],
					"releaseTag": "Public",
					"name": "User",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!User:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `User` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "protected constructor(client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ", data: "
								},
								{
									"kind": "Reference",
									"text": "RawUserData",
									"canonicalReference": "discord.js!RawUserData:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": true,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "client",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#accentColor:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public accentColor: "
								},
								{
									"kind": "Content",
									"text": "number | null | undefined"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "accentColor",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#avatar:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public avatar: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "avatar",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!User#avatarURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public avatarURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "avatarURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#banner:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public banner: "
								},
								{
									"kind": "Content",
									"text": "string | null | undefined"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "banner",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!User#bannerURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public bannerURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null | undefined"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "bannerURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#bot:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public bot: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "bot",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!User#createDM:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createDM(force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "DMChannel",
									"canonicalReference": "discord.js!DMChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "force",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "createDM"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#defaultAvatarURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get defaultAvatarURL(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "defaultAvatarURL",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!User#deleteDM:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deleteDM(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "DMChannel",
									"canonicalReference": "discord.js!DMChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "deleteDM"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#discriminator:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public discriminator: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "discriminator",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!User#displayAvatarURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public displayAvatarURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "displayAvatarURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#dmChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get dmChannel(): "
								},
								{
									"kind": "Reference",
									"text": "DMChannel",
									"canonicalReference": "discord.js!DMChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "dmChannel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!User#equals:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public equals(user: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "equals"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!User#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "force",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!User#fetchFlags:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchFlags(force?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "UserFlagsBitField",
									"canonicalReference": "discord.js!UserFlagsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "force",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchFlags"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public flags: "
								},
								{
									"kind": "Reference",
									"text": "Readonly",
									"canonicalReference": "!Readonly:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "UserFlagsBitField",
									"canonicalReference": "discord.js!UserFlagsBitField:class"
								},
								{
									"kind": "Content",
									"text": "> | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#hexAccentColor:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get hexAccentColor(): "
								},
								{
									"kind": "Reference",
									"text": "HexColorString",
									"canonicalReference": "discord.js!HexColorString:type"
								},
								{
									"kind": "Content",
									"text": " | null | undefined"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "hexAccentColor",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#partial:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get partial(): "
								},
								{
									"kind": "Content",
									"text": "false"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "partial",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#system:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public system: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "system",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#tag:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get tag(): "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "tag",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!User#toString:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toString(): "
								},
								{
									"kind": "Reference",
									"text": "UserMention",
									"canonicalReference": "discord.js!UserMention:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toString"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!User#username:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public username: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "username",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!UserApplicationCommandData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface UserApplicationCommandData extends "
						},
						{
							"kind": "Reference",
							"text": "BaseApplicationCommandData",
							"canonicalReference": "discord.js!BaseApplicationCommandData:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "UserApplicationCommandData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!UserApplicationCommandData#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "type: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandType.User",
									"canonicalReference": "discord-api-types!ApplicationCommandType.User:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!UserContextMenuCommandInteraction:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class UserContextMenuCommandInteraction<\n  Cached extends "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": " "
						},
						{
							"kind": "Content",
							"text": "= "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": ",\n> extends "
						},
						{
							"kind": "Reference",
							"text": "ContextMenuCommandInteraction",
							"canonicalReference": "discord.js!ContextMenuCommandInteraction:class"
						},
						{
							"kind": "Content",
							"text": "<Cached> "
						}
					],
					"releaseTag": "Public",
					"typeParameters": [
						{
							"typeParameterName": "Cached",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 4,
								"endIndex": 5
							}
						}
					],
					"name": "UserContextMenuCommandInteraction",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!UserContextMenuCommandInteraction#commandType:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public commandType: "
								},
								{
									"kind": "Reference",
									"text": "ApplicationCommandType.User",
									"canonicalReference": "discord-api-types!ApplicationCommandType.User:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "commandType",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!UserContextMenuCommandInteraction#inCachedGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inCachedGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "UserContextMenuCommandInteraction",
									"canonicalReference": "discord.js!UserContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inCachedGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!UserContextMenuCommandInteraction#inGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "UserContextMenuCommandInteraction",
									"canonicalReference": "discord.js!UserContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw' | 'cached'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inGuild"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!UserContextMenuCommandInteraction#inRawGuild:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public inRawGuild(): "
								},
								{
									"kind": "Content",
									"text": "this is "
								},
								{
									"kind": "Reference",
									"text": "UserContextMenuCommandInteraction",
									"canonicalReference": "discord.js!UserContextMenuCommandInteraction:class"
								},
								{
									"kind": "Content",
									"text": "<'raw'>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "inRawGuild"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!UserContextMenuCommandInteraction#targetMember:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get targetMember(): "
								},
								{
									"kind": "Reference",
									"text": "CacheTypeReducer",
									"canonicalReference": "discord.js!CacheTypeReducer:type"
								},
								{
									"kind": "Content",
									"text": "<Cached, "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "APIInteractionGuildMember",
									"canonicalReference": "discord-api-types!APIInteractionGuildMember:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "targetMember",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!UserContextMenuCommandInteraction#targetUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get targetUser(): "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "targetUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 6,
						"endIndex": 7
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!UserFlagsBitField:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class UserFlagsBitField extends "
						},
						{
							"kind": "Reference",
							"text": "BitField",
							"canonicalReference": "discord.js!BitField:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "UserFlagsString",
							"canonicalReference": "discord.js!UserFlagsString:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "UserFlagsBitField",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!UserFlagsBitField.Flags:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static Flags: "
								},
								{
									"kind": "Content",
									"text": "typeof "
								},
								{
									"kind": "Reference",
									"text": "UserFlags",
									"canonicalReference": "discord-api-types!UserFlags:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "Flags",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": true,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!UserFlagsBitField.resolve:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public static resolve(bit?: "
								},
								{
									"kind": "Reference",
									"text": "BitFieldResolvable",
									"canonicalReference": "discord.js!BitFieldResolvable:type"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "UserFlagsString",
									"canonicalReference": "discord.js!UserFlagsString:type"
								},
								{
									"kind": "Content",
									"text": ", number>"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": true,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "resolve"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!UserFlagsString:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type UserFlagsString = "
						},
						{
							"kind": "Content",
							"text": "keyof typeof "
						},
						{
							"kind": "Reference",
							"text": "UserFlags",
							"canonicalReference": "discord-api-types!UserFlags:enum"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "UserFlagsString",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!UserManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class UserManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "User",
							"canonicalReference": "discord.js!User:class"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "UserResolvable",
							"canonicalReference": "discord.js!UserResolvable:type"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "UserManager",
					"members": [
						{
							"kind": "Method",
							"canonicalReference": "discord.js!UserManager#createDM:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public createDM(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "DMChannel",
									"canonicalReference": "discord.js!DMChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "createDM"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!UserManager#deleteDM:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deleteDM(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "DMChannel",
									"canonicalReference": "discord.js!DMChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "deleteDM"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!UserManager#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!UserManager#fetchFlags:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchFlags(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "BaseFetchOptions",
									"canonicalReference": "discord.js!BaseFetchOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "UserFlagsBitField",
									"canonicalReference": "discord.js!UserFlagsBitField:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchFlags"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!UserManager#send:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public send(user: "
								},
								{
									"kind": "Reference",
									"text": "UserResolvable",
									"canonicalReference": "discord.js!UserResolvable:type"
								},
								{
									"kind": "Content",
									"text": ", options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "MessageOptions",
									"canonicalReference": "discord.js!MessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Message",
									"canonicalReference": "discord.js!Message:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "user",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "send"
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!UserMention:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type UserMention = "
						},
						{
							"kind": "Content",
							"text": "`<@${"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": "}>`"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "UserMention",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!UserResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type UserResolvable = "
						},
						{
							"kind": "Reference",
							"text": "User",
							"canonicalReference": "discord.js!User:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "Message",
							"canonicalReference": "discord.js!Message:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "GuildMember",
							"canonicalReference": "discord.js!GuildMember:class"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "ThreadMember",
							"canonicalReference": "discord.js!ThreadMember:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "UserResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 10
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!Vanity:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface Vanity "
						}
					],
					"releaseTag": "Public",
					"name": "Vanity",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Vanity#code:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "code: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "code",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!Vanity#uses:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "uses: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "uses",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!verifyString:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function verifyString(data: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ", error?: "
						},
						{
							"kind": "Content",
							"text": "typeof "
						},
						{
							"kind": "Reference",
							"text": "Error",
							"canonicalReference": "!Error:var"
						},
						{
							"kind": "Content",
							"text": ", errorMessage?: "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ", allowEmpty?: "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Content",
							"text": "string"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 10,
						"endIndex": 11
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "data",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isOptional": false
						},
						{
							"parameterName": "error",
							"parameterTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"isOptional": true
						},
						{
							"parameterName": "errorMessage",
							"parameterTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 7
							},
							"isOptional": true
						},
						{
							"parameterName": "allowEmpty",
							"parameterTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 9
							},
							"isOptional": true
						}
					],
					"name": "verifyString"
				},
				{
					"kind": "Variable",
					"canonicalReference": "discord.js!version:var",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "version: "
						},
						{
							"kind": "Content",
							"text": "string"
						}
					],
					"isReadonly": true,
					"releaseTag": "Public",
					"name": "version",
					"variableTypeTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!VoiceBasedChannel:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type VoiceBasedChannel = "
						},
						{
							"kind": "Reference",
							"text": "Extract",
							"canonicalReference": "!Extract:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Channel",
							"canonicalReference": "discord.js!Channel:type"
						},
						{
							"kind": "Content",
							"text": ", { bitrate: number }>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "VoiceBasedChannel",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!VoiceBasedChannelTypes:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type VoiceBasedChannelTypes = "
						},
						{
							"kind": "Reference",
							"text": "VoiceBasedChannel",
							"canonicalReference": "discord.js!VoiceBasedChannel:type"
						},
						{
							"kind": "Content",
							"text": "['type']"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "VoiceBasedChannelTypes",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 3
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!VoiceChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class VoiceChannel extends "
						},
						{
							"kind": "Reference",
							"text": "TextBasedChannelMixin",
							"canonicalReference": "discord.js!TextBasedChannelMixin"
						},
						{
							"kind": "Content",
							"text": "("
						},
						{
							"kind": "Reference",
							"text": "BaseGuildVoiceChannel",
							"canonicalReference": "discord.js!BaseGuildVoiceChannel:class"
						},
						{
							"kind": "Content",
							"text": ", ['lastPinTimestamp', 'lastPinAt']) "
						}
					],
					"releaseTag": "Public",
					"name": "VoiceChannel",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceChannel#nsfw:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public nsfw: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "nsfw",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceChannel#rateLimitPerUser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public rateLimitPerUser: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "rateLimitPerUser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!VoiceChannel#setBitrate:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setBitrate(bitrate: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "VoiceChannel",
									"canonicalReference": "discord.js!VoiceChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "bitrate",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setBitrate"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!VoiceChannel#setUserLimit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setUserLimit(userLimit: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "VoiceChannel",
									"canonicalReference": "discord.js!VoiceChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "userLimit",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setUserLimit"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!VoiceChannel#setVideoQualityMode:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setVideoQualityMode(videoQualityMode: "
								},
								{
									"kind": "Reference",
									"text": "VideoQualityMode",
									"canonicalReference": "discord-api-types!VideoQualityMode:enum"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "VoiceChannel",
									"canonicalReference": "discord.js!VoiceChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "videoQualityMode",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setVideoQualityMode"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceChannel#speakable:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get speakable(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "speakable",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceChannel#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "ChannelType.GuildVoice",
									"canonicalReference": "discord-api-types!ChannelType.GuildVoice:member"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceChannel#videoQualityMode:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public videoQualityMode: "
								},
								{
									"kind": "Reference",
									"text": "VideoQualityMode",
									"canonicalReference": "discord-api-types!VideoQualityMode:enum"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "videoQualityMode",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!VoiceChannelResolvable:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type VoiceChannelResolvable = "
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "VoiceChannel",
							"canonicalReference": "discord.js!VoiceChannel:class"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "VoiceChannelResolvable",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!VoiceRegion:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class VoiceRegion "
						}
					],
					"releaseTag": "Public",
					"name": "VoiceRegion",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceRegion#custom:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public custom: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "custom",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceRegion#deprecated:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deprecated: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deprecated",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceRegion#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceRegion#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceRegion#optimal:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public optimal: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "optimal",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!VoiceRegion#toJSON:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public toJSON(): "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "toJSON"
						}
					],
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!VoiceState:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class VoiceState extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "VoiceState",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get channel(): "
								},
								{
									"kind": "Reference",
									"text": "VoiceBasedChannel",
									"canonicalReference": "discord.js!VoiceBasedChannel:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#deaf:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get deaf(): "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deaf",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!VoiceState#disconnect:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public disconnect(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "disconnect"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!VoiceState#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public edit(data: "
								},
								{
									"kind": "Reference",
									"text": "VoiceStateEditData",
									"canonicalReference": "discord.js!VoiceStateEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "edit"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#member:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get member(): "
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "member",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#mute:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get mute(): "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "mute",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#requestToSpeakTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public requestToSpeakTimestamp: "
								},
								{
									"kind": "Content",
									"text": "number | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "requestToSpeakTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#selfDeaf:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public selfDeaf: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "selfDeaf",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#selfMute:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public selfMute: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "selfMute",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#selfVideo:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public selfVideo: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "selfVideo",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#serverDeaf:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public serverDeaf: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "serverDeaf",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#serverMute:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public serverMute: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "serverMute",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#sessionId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sessionId: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "sessionId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!VoiceState#setChannel:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setChannel(channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildVoiceChannelResolvable",
									"canonicalReference": "discord.js!GuildVoiceChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "channel",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"isOptional": false
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setChannel"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!VoiceState#setDeaf:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setDeaf(deaf?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "deaf",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setDeaf"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!VoiceState#setMute:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setMute(mute?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ", reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "GuildMember",
									"canonicalReference": "discord.js!GuildMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "mute",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								},
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setMute"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!VoiceState#setRequestToSpeak:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setRequestToSpeak(request?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "request",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setRequestToSpeak"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!VoiceState#setSuppressed:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public setSuppressed(suppressed?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<this>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "suppressed",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "setSuppressed"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#streaming:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public streaming: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "streaming",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceState#suppress:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public suppress: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "suppress",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!VoiceStateEditData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface VoiceStateEditData "
						}
					],
					"releaseTag": "Public",
					"name": "VoiceStateEditData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!VoiceStateEditData#requestToSpeak:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "requestToSpeak?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "requestToSpeak",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!VoiceStateEditData#suppressed:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "suppressed?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "suppressed",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!VoiceStateManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class VoiceStateManager extends "
						},
						{
							"kind": "Reference",
							"text": "CachedManager",
							"canonicalReference": "discord.js!CachedManager:class"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "Snowflake",
							"canonicalReference": "discord-api-types!Snowflake:type"
						},
						{
							"kind": "Content",
							"text": ", "
						},
						{
							"kind": "Reference",
							"text": "VoiceState",
							"canonicalReference": "discord.js!VoiceState:class"
						},
						{
							"kind": "Content",
							"text": ", typeof "
						},
						{
							"kind": "Reference",
							"text": "VoiceState",
							"canonicalReference": "discord.js!VoiceState:class"
						},
						{
							"kind": "Content",
							"text": "> "
						}
					],
					"releaseTag": "Public",
					"name": "VoiceStateManager",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!VoiceStateManager#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 8
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Webhook:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Webhook extends "
						},
						{
							"kind": "Reference",
							"text": "WebhookMixin",
							"canonicalReference": "discord.js!WebhookMixin"
						},
						{
							"kind": "Content",
							"text": "() "
						}
					],
					"releaseTag": "Public",
					"name": "Webhook",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Webhook#applicationId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public applicationId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "applicationId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Webhook#avatar:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public avatar: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "avatar",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Webhook#avatarURL:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public avatarURL(options?: "
								},
								{
									"kind": "Reference",
									"text": "ImageURLOptions",
									"canonicalReference": "@discordjs/rest!~ImageURLOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "avatarURL"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Webhook#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Webhook#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Webhook#guildId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guildId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guildId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Webhook#isApplicationCreated:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isApplicationCreated(): "
								},
								{
									"kind": "Content",
									"text": "this is this & {\n    type: "
								},
								{
									"kind": "Reference",
									"text": "WebhookType.Application",
									"canonicalReference": "discord-api-types!WebhookType.Application:member"
								},
								{
									"kind": "Content",
									"text": ";\n    applicationId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";\n    owner: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIUser",
									"canonicalReference": "discord-api-types!APIUser:interface"
								},
								{
									"kind": "Content",
									"text": ";\n  }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isApplicationCreated"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Webhook#isChannelFollower:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isChannelFollower(): "
								},
								{
									"kind": "Content",
									"text": "this is this & {\n    type: "
								},
								{
									"kind": "Reference",
									"text": "WebhookType.ChannelFollower",
									"canonicalReference": "discord-api-types!WebhookType.ChannelFollower:member"
								},
								{
									"kind": "Content",
									"text": ";\n    sourceGuild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIPartialGuild",
									"canonicalReference": "discord-api-types!APIPartialGuild:interface"
								},
								{
									"kind": "Content",
									"text": ";\n    sourceChannel: "
								},
								{
									"kind": "Reference",
									"text": "NewsChannel",
									"canonicalReference": "discord.js!NewsChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIPartialChannel",
									"canonicalReference": "discord-api-types!APIPartialChannel:interface"
								},
								{
									"kind": "Content",
									"text": ";\n    token: null;\n    applicationId: null;\n    owner: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIUser",
									"canonicalReference": "discord-api-types!APIUser:interface"
								},
								{
									"kind": "Content",
									"text": ";\n  }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 16
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isChannelFollower"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Webhook#isIncoming:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isIncoming(): "
								},
								{
									"kind": "Content",
									"text": "this is this & {\n    type: "
								},
								{
									"kind": "Reference",
									"text": "WebhookType.Incoming",
									"canonicalReference": "discord-api-types!WebhookType.Incoming:member"
								},
								{
									"kind": "Content",
									"text": ";\n    token: string;\n  }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isIncoming"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Webhook#isUserCreated:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public isUserCreated(): "
								},
								{
									"kind": "Content",
									"text": "this is this & {\n    type: "
								},
								{
									"kind": "Reference",
									"text": "WebhookType.Incoming",
									"canonicalReference": "discord-api-types!WebhookType.Incoming:member"
								},
								{
									"kind": "Content",
									"text": ";\n    applicationId: null;\n    owner: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIUser",
									"canonicalReference": "discord-api-types!APIUser:interface"
								},
								{
									"kind": "Content",
									"text": ";\n  }"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 8
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "isUserCreated"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Webhook#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Webhook#owner:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public owner: "
								},
								{
									"kind": "Reference",
									"text": "User",
									"canonicalReference": "discord.js!User:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIUser",
									"canonicalReference": "discord-api-types!APIUser:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "owner",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Webhook#sourceChannel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sourceChannel: "
								},
								{
									"kind": "Reference",
									"text": "NewsChannel",
									"canonicalReference": "discord.js!NewsChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIPartialChannel",
									"canonicalReference": "discord-api-types!APIPartialChannel:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "sourceChannel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Webhook#sourceGuild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public sourceGuild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "APIPartialGuild",
									"canonicalReference": "discord-api-types!APIPartialGuild:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "sourceGuild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Webhook#token:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public token: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "token",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Webhook#type:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public type: "
								},
								{
									"kind": "Reference",
									"text": "WebhookType",
									"canonicalReference": "discord-api-types!WebhookType:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "type",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!WebhookClient:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class WebhookClient extends "
						},
						{
							"kind": "Reference",
							"text": "WebhookMixin",
							"canonicalReference": "discord.js!WebhookMixin"
						},
						{
							"kind": "Content",
							"text": "("
						},
						{
							"kind": "Reference",
							"text": "BaseClient",
							"canonicalReference": "discord.js!BaseClient:class"
						},
						{
							"kind": "Content",
							"text": ") "
						}
					],
					"releaseTag": "Public",
					"name": "WebhookClient",
					"members": [
						{
							"kind": "Constructor",
							"canonicalReference": "discord.js!WebhookClient:constructor(1)",
							"docComment": "/**\n * Constructs a new instance of the `WebhookClient` class\n */\n",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public constructor(data: "
								},
								{
									"kind": "Reference",
									"text": "WebhookClientData",
									"canonicalReference": "discord.js!WebhookClientData:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "WebhookClientOptions",
									"canonicalReference": "discord.js!WebhookClientOptions:type"
								},
								{
									"kind": "Content",
									"text": ");"
								}
							],
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							]
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebhookClient#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly client: "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!WebhookClient#editMessage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public editMessage(\n    message: "
								},
								{
									"kind": "Reference",
									"text": "MessageResolvable",
									"canonicalReference": "discord.js!MessageResolvable:type"
								},
								{
									"kind": "Content",
									"text": ",\n    options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookEditMessageOptions",
									"canonicalReference": "discord.js!WebhookEditMessageOptions:type"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessage",
									"canonicalReference": "discord-api-types!APIMessage:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 8,
								"endIndex": 12
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 7
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "editMessage"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!WebhookClient#fetchMessage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetchMessage(message: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", options?: "
								},
								{
									"kind": "Reference",
									"text": "WebhookFetchMessageOptions",
									"canonicalReference": "discord.js!WebhookFetchMessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessage",
									"canonicalReference": "discord-api-types!APIMessage:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 9
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "message",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "fetchMessage"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebhookClient#options:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public options: "
								},
								{
									"kind": "Reference",
									"text": "WebhookClientOptions",
									"canonicalReference": "discord.js!WebhookClientOptions:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "options",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!WebhookClient#send:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public send(options: "
								},
								{
									"kind": "Content",
									"text": "string | "
								},
								{
									"kind": "Reference",
									"text": "MessagePayload",
									"canonicalReference": "discord.js!MessagePayload:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "WebhookMessageOptions",
									"canonicalReference": "discord.js!WebhookMessageOptions:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "APIMessage",
									"canonicalReference": "discord-api-types!APIMessage:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 6,
								"endIndex": 10
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 5
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "send"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebhookClient#token:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public token: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "token",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!WebhookClientData:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type WebhookClientData = "
						},
						{
							"kind": "Reference",
							"text": "WebhookClientDataIdWithToken",
							"canonicalReference": "discord.js!WebhookClientDataIdWithToken:interface"
						},
						{
							"kind": "Content",
							"text": " | "
						},
						{
							"kind": "Reference",
							"text": "WebhookClientDataURL",
							"canonicalReference": "discord.js!WebhookClientDataURL:interface"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "WebhookClientData",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 4
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WebhookClientDataIdWithToken:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WebhookClientDataIdWithToken "
						}
					],
					"releaseTag": "Public",
					"name": "WebhookClientDataIdWithToken",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookClientDataIdWithToken#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookClientDataIdWithToken#token:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "token: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "token",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WebhookClientDataURL:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WebhookClientDataURL "
						}
					],
					"releaseTag": "Public",
					"name": "WebhookClientDataURL",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookClientDataURL#url:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "url: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "url",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!WebhookClientOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type WebhookClientOptions = "
						},
						{
							"kind": "Reference",
							"text": "Pick",
							"canonicalReference": "!Pick:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "ClientOptions",
							"canonicalReference": "discord.js!ClientOptions:interface"
						},
						{
							"kind": "Content",
							"text": ", 'allowedMentions' | 'rest'>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "WebhookClientOptions",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WebhookCreateOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WebhookCreateOptions extends "
						},
						{
							"kind": "Reference",
							"text": "ChannelWebhookCreateOptions",
							"canonicalReference": "discord.js!ChannelWebhookCreateOptions:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "WebhookCreateOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookCreateOptions#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildChannelResolvable",
									"canonicalReference": "discord.js!GuildChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WebhookEditData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WebhookEditData "
						}
					],
					"releaseTag": "Public",
					"name": "WebhookEditData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookEditData#avatar:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "avatar?: "
								},
								{
									"kind": "Reference",
									"text": "BufferResolvable",
									"canonicalReference": "discord.js!BufferResolvable:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "avatar",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookEditData#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel?: "
								},
								{
									"kind": "Reference",
									"text": "GuildTextChannelResolvable",
									"canonicalReference": "discord.js!GuildTextChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookEditData#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookEditData#reason:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "reason",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!WebhookEditMessageOptions:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type WebhookEditMessageOptions = "
						},
						{
							"kind": "Reference",
							"text": "Pick",
							"canonicalReference": "!Pick:type"
						},
						{
							"kind": "Content",
							"text": "<\n  "
						},
						{
							"kind": "Reference",
							"text": "WebhookMessageOptions",
							"canonicalReference": "discord.js!WebhookMessageOptions:interface"
						},
						{
							"kind": "Content",
							"text": ",\n  'content' | 'embeds' | 'files' | 'allowedMentions' | 'components' | 'attachments' | 'threadId'\n>"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "WebhookEditMessageOptions",
					"typeTokenRange": {
						"startIndex": 1,
						"endIndex": 5
					}
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WebhookFetchMessageOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WebhookFetchMessageOptions "
						}
					],
					"releaseTag": "Public",
					"name": "WebhookFetchMessageOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookFetchMessageOptions#threadId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "threadId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "threadId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WebhookFields:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WebhookFields extends "
						},
						{
							"kind": "Reference",
							"text": "PartialWebhookFields",
							"canonicalReference": "discord.js!PartialWebhookFields:interface"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "WebhookFields",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebhookFields#createdAt:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "get createdAt(): "
								},
								{
									"kind": "Reference",
									"text": "Date",
									"canonicalReference": "!Date:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdAt",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebhookFields#createdTimestamp:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "get createdTimestamp(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "createdTimestamp",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!WebhookFields#delete:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "delete(reason?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "reason",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": true
								}
							],
							"name": "delete"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!WebhookFields#edit:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "edit(options: "
								},
								{
									"kind": "Reference",
									"text": "WebhookEditData",
									"canonicalReference": "discord.js!WebhookEditData:interface"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Webhook",
									"canonicalReference": "discord.js!Webhook:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 7
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "options",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"name": "edit"
						},
						{
							"kind": "MethodSignature",
							"canonicalReference": "discord.js!WebhookFields#sendSlackMessage:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "sendSlackMessage(body: "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<boolean>"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isOptional": false,
							"returnTypeTokenRange": {
								"startIndex": 3,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "body",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								}
							],
							"name": "sendSlackMessage"
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 2
						}
					]
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WebhookMessageOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WebhookMessageOptions extends "
						},
						{
							"kind": "Reference",
							"text": "Omit",
							"canonicalReference": "!Omit:type"
						},
						{
							"kind": "Content",
							"text": "<"
						},
						{
							"kind": "Reference",
							"text": "MessageOptions",
							"canonicalReference": "discord.js!MessageOptions:interface"
						},
						{
							"kind": "Content",
							"text": ", 'reply' | 'stickers'> "
						}
					],
					"releaseTag": "Public",
					"name": "WebhookMessageOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookMessageOptions#avatarURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "avatarURL?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "avatarURL",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookMessageOptions#threadId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "threadId?: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "threadId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebhookMessageOptions#username:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "username?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "username",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": [
						{
							"startIndex": 1,
							"endIndex": 4
						}
					]
				},
				{
					"kind": "Function",
					"canonicalReference": "discord.js!WebhookMixin:function(1)",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export function WebhookMixin<T>(Base?: "
						},
						{
							"kind": "Reference",
							"text": "Constructable",
							"canonicalReference": "discord.js!Constructable:type"
						},
						{
							"kind": "Content",
							"text": "<T>"
						},
						{
							"kind": "Content",
							"text": "): "
						},
						{
							"kind": "Reference",
							"text": "Constructable",
							"canonicalReference": "discord.js!Constructable:type"
						},
						{
							"kind": "Content",
							"text": "<T & "
						},
						{
							"kind": "Reference",
							"text": "WebhookFields",
							"canonicalReference": "discord.js!WebhookFields:interface"
						},
						{
							"kind": "Content",
							"text": ">"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"returnTypeTokenRange": {
						"startIndex": 4,
						"endIndex": 8
					},
					"releaseTag": "Public",
					"overloadIndex": 1,
					"parameters": [
						{
							"parameterName": "Base",
							"parameterTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isOptional": true
						}
					],
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"name": "WebhookMixin"
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!WebSocketManager:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class WebSocketManager extends "
						},
						{
							"kind": "Reference",
							"text": "EventEmitter",
							"canonicalReference": "!EventEmitter:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "WebSocketManager",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebSocketManager#client:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public readonly client: "
								},
								{
									"kind": "Reference",
									"text": "Client",
									"canonicalReference": "discord.js!Client:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "client",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebSocketManager#gateway:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public gateway: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "gateway",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!WebSocketManager#on:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on(event: "
								},
								{
									"kind": "Reference",
									"text": "GatewayDispatchEvents",
									"canonicalReference": "discord-api-types!GatewayDispatchEvents:enum"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(data: any, shardId: number) => void"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!WebSocketManager#once:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once(event: "
								},
								{
									"kind": "Reference",
									"text": "GatewayDispatchEvents",
									"canonicalReference": "discord-api-types!GatewayDispatchEvents:enum"
								},
								{
									"kind": "Content",
									"text": ", listener: "
								},
								{
									"kind": "Content",
									"text": "(data: any, shardId: number) => void"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebSocketManager#ping:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get ping(): "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ping",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebSocketManager#shards:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public shards: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<number, "
								},
								{
									"kind": "Reference",
									"text": "WebSocketShard",
									"canonicalReference": "discord.js!WebSocketShard:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "shards",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebSocketManager#status:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public status: "
								},
								{
									"kind": "Reference",
									"text": "Status",
									"canonicalReference": "discord.js!Status:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "status",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WebSocketOptions:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WebSocketOptions "
						}
					],
					"releaseTag": "Public",
					"name": "WebSocketOptions",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketOptions#compress:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "compress?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "compress",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketOptions#large_threshold:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "large_threshold?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "large_threshold",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketOptions#properties:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "properties?: "
								},
								{
									"kind": "Reference",
									"text": "WebSocketProperties",
									"canonicalReference": "discord.js!WebSocketProperties:interface"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "properties",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketOptions#version:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "version?: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "version",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WebSocketProperties:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WebSocketProperties "
						}
					],
					"releaseTag": "Public",
					"name": "WebSocketProperties",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketProperties#browser:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "browser?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "browser",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketProperties#device:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "device?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "device",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketProperties#os:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "os?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "os",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!WebSocketShard:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class WebSocketShard extends "
						},
						{
							"kind": "Reference",
							"text": "EventEmitter",
							"canonicalReference": "!EventEmitter:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "WebSocketShard",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebSocketShard#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebSocketShard#manager:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public manager: "
								},
								{
									"kind": "Reference",
									"text": "WebSocketManager",
									"canonicalReference": "discord.js!WebSocketManager:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "manager",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!WebSocketShard#on:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public on<K extends "
								},
								{
									"kind": "Content",
									"text": "keyof "
								},
								{
									"kind": "Reference",
									"text": "WebSocketShardEvents",
									"canonicalReference": "discord.js!WebSocketShardEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">(\n    event: "
								},
								{
									"kind": "Content",
									"text": "K"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: "
								},
								{
									"kind": "Reference",
									"text": "WebSocketShardEvents",
									"canonicalReference": "discord.js!WebSocketShardEvents:interface"
								},
								{
									"kind": "Content",
									"text": "[K]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "K",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "on"
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!WebSocketShard#once:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public once<K extends "
								},
								{
									"kind": "Content",
									"text": "keyof "
								},
								{
									"kind": "Reference",
									"text": "WebSocketShardEvents",
									"canonicalReference": "discord.js!WebSocketShardEvents:interface"
								},
								{
									"kind": "Content",
									"text": ">(\n    event: "
								},
								{
									"kind": "Content",
									"text": "K"
								},
								{
									"kind": "Content",
									"text": ",\n    listener: "
								},
								{
									"kind": "Content",
									"text": "(...args: "
								},
								{
									"kind": "Reference",
									"text": "WebSocketShardEvents",
									"canonicalReference": "discord.js!WebSocketShardEvents:interface"
								},
								{
									"kind": "Content",
									"text": "[K]) => "
								},
								{
									"kind": "Reference",
									"text": "Awaitable",
									"canonicalReference": "discord.js!Awaitable:type"
								},
								{
									"kind": "Content",
									"text": "<void>"
								},
								{
									"kind": "Content",
									"text": ",\n  ): "
								},
								{
									"kind": "Content",
									"text": "this"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"typeParameters": [
								{
									"typeParameterName": "K",
									"constraintTokenRange": {
										"startIndex": 1,
										"endIndex": 3
									},
									"defaultTypeTokenRange": {
										"startIndex": 0,
										"endIndex": 0
									}
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 12,
								"endIndex": 13
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "event",
									"parameterTypeTokenRange": {
										"startIndex": 4,
										"endIndex": 5
									},
									"isOptional": false
								},
								{
									"parameterName": "listener",
									"parameterTypeTokenRange": {
										"startIndex": 6,
										"endIndex": 11
									},
									"isOptional": false
								}
							],
							"isOptional": false,
							"name": "once"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebSocketShard#ping:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public ping: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ping",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!WebSocketShard#send:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public send(data: "
								},
								{
									"kind": "Content",
									"text": "unknown"
								},
								{
									"kind": "Content",
									"text": ", important?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": "): "
								},
								{
									"kind": "Content",
									"text": "void"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 5,
								"endIndex": 6
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [
								{
									"parameterName": "data",
									"parameterTypeTokenRange": {
										"startIndex": 1,
										"endIndex": 2
									},
									"isOptional": false
								},
								{
									"parameterName": "important",
									"parameterTypeTokenRange": {
										"startIndex": 3,
										"endIndex": 4
									},
									"isOptional": true
								}
							],
							"isOptional": false,
							"name": "send"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WebSocketShard#status:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public status: "
								},
								{
									"kind": "Reference",
									"text": "Status",
									"canonicalReference": "discord.js!Status:enum"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "status",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WebSocketShardEvents:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WebSocketShardEvents "
						}
					],
					"releaseTag": "Public",
					"name": "WebSocketShardEvents",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketShardEvents#allReady:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "allReady: "
								},
								{
									"kind": "Content",
									"text": "[unavailableGuilds?: "
								},
								{
									"kind": "Reference",
									"text": "Set",
									"canonicalReference": "!Set:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ">]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "allReady",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 6
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketShardEvents#close:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "close: "
								},
								{
									"kind": "Content",
									"text": "[event: "
								},
								{
									"kind": "Reference",
									"text": "CloseEvent",
									"canonicalReference": "discord.js!CloseEvent:interface"
								},
								{
									"kind": "Content",
									"text": "]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "close",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketShardEvents#invalidSession:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "invalidSession: "
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "invalidSession",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketShardEvents#ready:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "ready: "
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "ready",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WebSocketShardEvents#resumed:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "resumed: "
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "resumed",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!WelcomeChannel:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class WelcomeChannel extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "WelcomeChannel",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WelcomeChannel#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get channel(): "
								},
								{
									"kind": "Reference",
									"text": "TextChannel",
									"canonicalReference": "discord.js!TextChannel:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "NewsChannel",
									"canonicalReference": "discord.js!NewsChannel:class"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WelcomeChannel#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WelcomeChannel#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WelcomeChannel#emoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get emoji(): "
								},
								{
									"kind": "Reference",
									"text": "GuildEmoji",
									"canonicalReference": "discord.js!GuildEmoji:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "Emoji",
									"canonicalReference": "discord.js!Emoji:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "emoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WelcomeChannel#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InviteGuild",
									"canonicalReference": "discord.js!InviteGuild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WelcomeChannelData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WelcomeChannelData "
						}
					],
					"releaseTag": "Public",
					"name": "WelcomeChannelData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WelcomeChannelData#channel:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "channel: "
								},
								{
									"kind": "Reference",
									"text": "GuildTextChannelResolvable",
									"canonicalReference": "discord.js!GuildTextChannelResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channel",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WelcomeChannelData#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WelcomeChannelData#emoji:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "emoji?: "
								},
								{
									"kind": "Reference",
									"text": "EmojiIdentifierResolvable",
									"canonicalReference": "discord.js!EmojiIdentifierResolvable:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "emoji",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!WelcomeScreen:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class WelcomeScreen extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "WelcomeScreen",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WelcomeScreen#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public description: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WelcomeScreen#enabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public get enabled(): "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": true,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "enabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WelcomeScreen#guild:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public guild: "
								},
								{
									"kind": "Reference",
									"text": "Guild",
									"canonicalReference": "discord.js!Guild:class"
								},
								{
									"kind": "Content",
									"text": " | "
								},
								{
									"kind": "Reference",
									"text": "InviteGuild",
									"canonicalReference": "discord.js!InviteGuild:class"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "guild",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 4
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WelcomeScreen#welcomeChannels:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public welcomeChannels: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "WelcomeChannel",
									"canonicalReference": "discord.js!WelcomeChannel:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "welcomeChannels",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WelcomeScreenEditData:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WelcomeScreenEditData "
						}
					],
					"releaseTag": "Public",
					"name": "WelcomeScreenEditData",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WelcomeScreenEditData#description:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "description?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "description",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WelcomeScreenEditData#enabled:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "enabled?: "
								},
								{
									"kind": "Content",
									"text": "boolean"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "enabled",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WelcomeScreenEditData#welcomeChannels:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "welcomeChannels?: "
								},
								{
									"kind": "Reference",
									"text": "WelcomeChannelData",
									"canonicalReference": "discord.js!WelcomeChannelData:interface"
								},
								{
									"kind": "Content",
									"text": "[]"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "welcomeChannels",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!Widget:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class Widget extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "Widget",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Widget#channels:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channels: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ", "
								},
								{
									"kind": "Reference",
									"text": "WidgetChannel",
									"canonicalReference": "discord.js!WidgetChannel:interface"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channels",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 7
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Method",
							"canonicalReference": "discord.js!Widget#fetch:member(1)",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public fetch(): "
								},
								{
									"kind": "Reference",
									"text": "Promise",
									"canonicalReference": "!Promise:interface"
								},
								{
									"kind": "Content",
									"text": "<"
								},
								{
									"kind": "Reference",
									"text": "Widget",
									"canonicalReference": "discord.js!Widget:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isStatic": false,
							"returnTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"releaseTag": "Public",
							"isProtected": false,
							"overloadIndex": 1,
							"parameters": [],
							"isOptional": false,
							"name": "fetch"
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Widget#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Widget#instantInvite:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public instantInvite?: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": true,
							"releaseTag": "Public",
							"name": "instantInvite",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Widget#members:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public members: "
								},
								{
									"kind": "Reference",
									"text": "Collection",
									"canonicalReference": "@discordjs/collection!~Collection:class"
								},
								{
									"kind": "Content",
									"text": "<string, "
								},
								{
									"kind": "Reference",
									"text": "WidgetMember",
									"canonicalReference": "discord.js!WidgetMember:class"
								},
								{
									"kind": "Content",
									"text": ">"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "members",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 5
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!Widget#presenceCount:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public presenceCount: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "presenceCount",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WidgetActivity:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WidgetActivity "
						}
					],
					"releaseTag": "Public",
					"name": "WidgetActivity",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WidgetActivity#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Interface",
					"canonicalReference": "discord.js!WidgetChannel:interface",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export interface WidgetChannel "
						}
					],
					"releaseTag": "Public",
					"name": "WidgetChannel",
					"members": [
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WidgetChannel#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "id: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WidgetChannel#name:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "name: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "name",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						},
						{
							"kind": "PropertySignature",
							"canonicalReference": "discord.js!WidgetChannel#position:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "position: "
								},
								{
									"kind": "Content",
									"text": "number"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "position",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							}
						}
					],
					"extendsTokenRanges": []
				},
				{
					"kind": "Class",
					"canonicalReference": "discord.js!WidgetMember:class",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export class WidgetMember extends "
						},
						{
							"kind": "Reference",
							"text": "Base",
							"canonicalReference": "discord.js!Base:class"
						},
						{
							"kind": "Content",
							"text": " "
						}
					],
					"releaseTag": "Public",
					"name": "WidgetMember",
					"members": [
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#activity:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public activity: "
								},
								{
									"kind": "Reference",
									"text": "WidgetActivity",
									"canonicalReference": "discord.js!WidgetActivity:interface"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "activity",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#avatar:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public avatar: "
								},
								{
									"kind": "Content",
									"text": "string | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "avatar",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#avatarURL:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public avatarURL: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "avatarURL",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#channelId:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public channelId: "
								},
								{
									"kind": "Reference",
									"text": "Snowflake",
									"canonicalReference": "discord-api-types!Snowflake:type"
								},
								{
									"kind": "Content",
									"text": " | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "channelId",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 3
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#deaf:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public deaf: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "deaf",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#discriminator:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public discriminator: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "discriminator",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#id:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public id: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "id",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#mute:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public mute: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "mute",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#selfDeaf:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public selfDeaf: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "selfDeaf",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#selfMute:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public selfMute: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "selfMute",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#status:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public status: "
								},
								{
									"kind": "Reference",
									"text": "PresenceStatus",
									"canonicalReference": "discord.js!PresenceStatus:type"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "status",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#suppress:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public suppress: "
								},
								{
									"kind": "Content",
									"text": "boolean | null"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "suppress",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						},
						{
							"kind": "Property",
							"canonicalReference": "discord.js!WidgetMember#username:member",
							"docComment": "",
							"excerptTokens": [
								{
									"kind": "Content",
									"text": "public username: "
								},
								{
									"kind": "Content",
									"text": "string"
								},
								{
									"kind": "Content",
									"text": ";"
								}
							],
							"isReadonly": false,
							"isOptional": false,
							"releaseTag": "Public",
							"name": "username",
							"propertyTypeTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"isStatic": false,
							"isProtected": false
						}
					],
					"extendsTokenRange": {
						"startIndex": 1,
						"endIndex": 2
					},
					"implementsTokenRanges": []
				},
				{
					"kind": "TypeAlias",
					"canonicalReference": "discord.js!WrapBooleanCache:type",
					"docComment": "",
					"excerptTokens": [
						{
							"kind": "Content",
							"text": "export type WrapBooleanCache<T extends "
						},
						{
							"kind": "Content",
							"text": "boolean"
						},
						{
							"kind": "Content",
							"text": "> = "
						},
						{
							"kind": "Reference",
							"text": "If",
							"canonicalReference": "discord.js!If:type"
						},
						{
							"kind": "Content",
							"text": "<T, 'cached', "
						},
						{
							"kind": "Reference",
							"text": "CacheType",
							"canonicalReference": "discord.js!CacheType:type"
						},
						{
							"kind": "Content",
							"text": ">"
						},
						{
							"kind": "Content",
							"text": ";"
						}
					],
					"releaseTag": "Public",
					"name": "WrapBooleanCache",
					"typeParameters": [
						{
							"typeParameterName": "T",
							"constraintTokenRange": {
								"startIndex": 1,
								"endIndex": 2
							},
							"defaultTypeTokenRange": {
								"startIndex": 0,
								"endIndex": 0
							}
						}
					],
					"typeTokenRange": {
						"startIndex": 3,
						"endIndex": 7
					}
				}
			]
		}
	]
}
